acpi/sysfs.c~:	do {
acpi/glue.c:#define DBG(x...) do { } while(0)
acpi/scan.c~:	do {
acpi/ec.c~:		do {
acpi/acpica/utmath.c:		do {
acpi/acpica/hwsleep.c~:	do {
acpi/acpica/hwsleep.c~:	do {
acpi/acpica/evglock.c~:	do {
acpi/acpica/rsdump.c~:	do {
acpi/acpica/exnames.c~:			do {
acpi/acpica/psloop.c~:		do {
acpi/acpica/psloop.c~:		do {
acpi/acpica/psloop.c~:	do {
acpi/acpica/psloop.c~:					do {
acpi/acpica/acmacros.h:#define ACPI_DEBUG_DEFINE(a)		do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DEBUG_ONLY_MEMBERS(a)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_TRACE(a)		do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_TRACE_PTR(a, b)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_TRACE_U32(a, b)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_TRACE_STR(a, b)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_EXIT		do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_STATUS_EXIT(s)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_VALUE_EXIT(s)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_FUNCTION_ENTRY()		do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_STACK_ENTRY(a)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_OPERANDS(a, b, c)     do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_ENTRY(a, b)		do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_TABLES(a, b)		do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_PATHNAME(a, b, c, d)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_RESOURCE_LIST(a)	do { } while(0)
acpi/acpica/acmacros.h:#define ACPI_DUMP_BUFFER(a, b)		do { } while(0)
acpi/pci_slot.c~:	do {							\
acpi/thermal.c:do {	\
acpi/numa.c~:	do {
amba/bus.c~:	do {
ata/#pata_cs5536.c#:#define rdmsr(x, y, z) do { } while (0)
ata/#pata_cs5536.c#:#define wrmsr(x, y, z) do { } while (0)
ata/libata-core.c~:	do {
ata/libata-core.c~:	do {
ata/pata_cs5536.c:#define rdmsr(x, y, z) do { } while (0)
ata/pata_cs5536.c:#define wrmsr(x, y, z) do { } while (0)
ata/sata_mv.c~:	do {
ata/sata_mv.c~:	do {
ata/sata_mv.c~:	do {
ata/sata_mv.c~:	do {
ata/pata_at91.c~:	do {
ata/pata_at91.c~:	do {
ata/pata_legacy.c~:	do {
ata/pata_bf54x.c~:	do {
ata/pata_ns87415.c~:	do {
ata/sata_via.c~:	do {
ata/libata-eh.c:	do {
ata/libata-eh.c:	 * does not leave the do {} while () loop in ata_eh_recover as
ata/libata-eh.c:	 * ap and we have to cycle over the do {} while () loop in
ata/libata-eh.c:	do {
ata/sata_qstor.c~:	do {
ata/pata_pxa.c~:	do {
atm/idt77252.c~:	do {
atm/idt77252.c~:	do {
atm/zatm.c~:	do {
atm/idt77252.h:#define CPRINTK(args...)   do { if (debug & DBG_CLOSE_CONN) printk(args); } while(0)
atm/idt77252.h:#define OPRINTK(args...)   do { if (debug & DBG_OPEN_CONN)  printk(args); } while(0)
atm/idt77252.h:#define IPRINTK(args...)   do { if (debug & DBG_INIT)       printk(args); } while(0)
atm/idt77252.h:#define INTPRINTK(args...) do { if (debug & DBG_INTERRUPT)  printk(args); } while(0)
atm/idt77252.h:#define DIPRINTK(args...)  do { if (debug & DBG_DEINIT)     printk(args); } while(0)
atm/idt77252.h:#define TXPRINTK(args...)  do { if (debug & DBG_TX_DATA)    printk(args); } while(0)
atm/idt77252.h:#define RXPRINTK(args...)  do { if (debug & DBG_RX_DATA)    printk(args); } while(0)
atm/idt77252.h:#define XPRINTK(args...)   do { if (debug & DBG_XGENERAL)   printk(args); } while(0)
atm/idt77252.h:#define DPRINTK(args...)   do { if (debug & DBG_GENERAL)    printk(args); } while(0)
atm/idt77252.h:#define NPRINTK(args...)   do { if (debug & DBG_TINY)	    printk(args); } while(0)
atm/idt77252.h:#define RPRINTK(args...)   do { if (debug & DBG_RAW_CELL)   printk(args); } while(0)
atm/idt77252.h:#define CPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define OPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define IPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define INTPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define DIPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define TXPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define RXPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define XPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define DPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define NPRINTK(args...)	do { } while(0)
atm/idt77252.h:#define RPRINTK(args...)	do { } while(0)
atm/he.c:#define HPRINTK(fmt,args...)	do { } while (0)
atm/he.c:#define he_writel(dev, val, reg)	do { writel(val, (dev)->membase + (reg)); wmb(); } while (0)
atm/nicstar.c~:		do {
atm/nicstar.c~:	do {
atm/nicstar.c~:	do {
atm/nicstar.c~:	do {
atm/lanai.c~:	do { \
atm/lanai.c~:	do {
atm/lanai.c~:#define set_config1(x)   do { lanai->conf1 = x; conf1_write(lanai); \
atm/lanai.c~:#define pre_read()	 do { data_h(); clock_h(); udelay(5); } while (0)
atm/lanai.c~:#define send_stop()	 do { data_l(); udelay(5); clock_h(); udelay(5); \
atm/lanai.c~:	do {
atm/fore200e.c~:#define DPRINTK(level, format, args...)  do { if (CONFIG_ATM_FORE200E_DEBUG >= (level)) \
atm/fore200e.c~:#define DPRINTK(level, format, args...)  do {} while (0)
atm/fore200e.c~:#define ASSERT(expr)     do {} while (0)
atm/fore200e.c~:    do {
atm/fore200e.c~:    do {
atm/lanai.c:	do { \
atm/lanai.c:#define set_config1(x)   do { lanai->conf1 = x; conf1_write(lanai); \
atm/lanai.c:#define pre_read()	 do { data_h(); clock_h(); udelay(5); } while (0)
atm/lanai.c:#define send_stop()	 do { data_l(); udelay(5); clock_h(); udelay(5); \
atm/fore200e.c:#define DPRINTK(level, format, args...)  do { if (CONFIG_ATM_FORE200E_DEBUG >= (level)) \
atm/fore200e.c:#define DPRINTK(level, format, args...)  do {} while (0)
atm/fore200e.c:#define ASSERT(expr)     do {} while (0)
atm/nicstarmac.c:    do { int _i = 4*microsec; while (--_i > 0) { __SLOW_DOWN_IO; }} while (0)
atm/#nicstarmac.c#:    do { int _i = 4*microsec; while (--_i > 0) { __SLOW_DOWN_IO; }} while (0)
base/devres.c:#define set_node_dbginfo(node, n, s)	do {} while (0)
base/devres.c:#define devres_log(dev, node, op)	do {} while (0)
block/swim3.c:#define swim3_dbg(fmt, arg...)	do { } while(0)
block/mg_disk.c:#  define MG_DBG(fmt, args...) do { } while (0)
block/mg_disk.c:	do {
block/mg_disk.c:	do {
block/mg_disk.c:	do {
block/mg_disk.c:	do {
block/mg_disk.c:	do {
block/osdblk.c:	do { if (0) printk(fmt, ##a); } while (0)
block/osdblk.c:	do {
block/brd.c:	do {
block/cciss.c:	do {
block/swim.c:		do {
block/pktcdvd.c:		do {
block/drbd/drbd_receiver.c:	do {
block/drbd/drbd_receiver.c:	do {
block/drbd/drbd_receiver.c:	do {
block/drbd/drbd_receiver.c:	do {
block/drbd/drbd_int.h:#define __no_warn(lock, stmt) do { __acquire(lock); stmt; __release(lock); } while (0)
block/drbd/drbd_int.h:#define dec_ap_pending(mdev)	do {				\
block/drbd/drbd_int.h:#define dec_rs_pending(mdev)	do {				\
block/drbd/drbd_int.h:#define dec_unacked(mdev)	do {				\
block/drbd/drbd_int.h:#define sub_unacked(mdev, n)	do {				\
block/drbd/drbd_vli.h:#define VLI_L_1_1() do { \
block/drbd/drbd_vli.h:	do {						\
block/drbd/drbd_vli.h:#define LEVEL(t,b,v) do {		\
block/drbd/drbd_main.c:	do {
block/drbd/drbd_main.c:	do {
block/drbd/drbd_main.c:	do {
block/drbd/drbd_main.c:	do {
block/drbd/drbd_nl.c:	do {
block/drbd/drbd_worker.c:		do {
block/xen-blkback/blkback.c:	do {
block/xen-blkback/blkback.c:	do {
block/xen-blkback/common.h:	do {						\
block/sunvdc.c:	do {
block/amiflop.c:	do {
block/amiflop.c:	do {
block/amiflop.c:		do { /* search for the right sync of each sec-hdr */
block/ataflop.c:    do {					\
block/ataflop.c:#define	SET_IRQ_HANDLER(proc) do { FloppyIRQHandler = (proc); } while(0)
block/ataflop.c:    do {			\
block/ataflop.c:	do {
block/ataflop.c:	do {
block/rbd.c:		do {
block/rbd.c:	do {
block/floppy.c:	do { if ((test) & FD_DEBUG) DPRINT(fmt, ##args); } while (0)
block/floppy.c:	do { if (0) DPRINT(fmt, ##args); } while (0)
block/floppy.c:		do {
block/floppy.c:	do {
block/hd.c:	do {								\
block/hd.c:	do {
block/hd.c:	do {
block/hd.c:	do {
block/hd.c:	do {
block/ps3vram.c:	do {
block/ps3vram.c:	do {
block/ps3vram.c:	do {
block/cpqarray.c:#define DBG(s)	do { s } while(0)
block/cpqarray.c:#define DBGINFO(s) do { } while(0)
block/cpqarray.c:#define DBGP(s)  do { } while(0)
block/cpqarray.c:#define DBGPX(s) do { } while(0)
block/cpqarray.c:		do {
block/umem.c:	do {
block/nbd.c:#define dprintk(flags, fmt...) do { \
block/nbd.c:	do {
bluetooth/btuart_cs.c:	do {
bluetooth/btuart_cs.c:	do {
bluetooth/dtl1_cs.c:	do {
bluetooth/dtl1_cs.c:	do {
bluetooth/btmrvl_sdio.c:	do {
bluetooth/btmrvl_sdio.c:	do {
bluetooth/btmrvl_sdio.c:	do {
bluetooth/bt3c_cs.c:	do {
bluetooth/bluecard_cs.c:	do {
bluetooth/bfusb.c:	do {
cdrom/gdrom.c:	do {
cdrom/cdrom.c:do {							\
cdrom/cdrom.c:do {							\
cdrom/cdrom.c:	do {
char/nwflash.c:		do {
char/applicom.c:	do {
char/lp.c:#define w_ctr(x,y)	do { parport_write_control(lp_table[(x)].dev->port, (y)); } while (0)
char/lp.c:#define w_dtr(x,y)	do { parport_write_data(lp_table[(x)].dev->port, (y)); } while (0)
char/lp.c:	do {
char/lp.c:	do {
char/lp.c:	do {
char/lp.c:			do {
char/dtlk.c:	do {
char/dtlk.c:	do {
char/random.c:#define DEBUG_ENT(fmt, arg...) do { \
char/random.c:#define DEBUG_ENT(fmt, arg...) do {} while (0)
char/hpet.c:	do {
char/pcmcia/cm4040_cs.c:#define DEBUGP(n, rdr, x, args...) do { 		\
char/pcmcia/cm4000_cs.c:#define DEBUGP(n, rdr, x, args...) do { 		\
char/pcmcia/cm4000_cs.c:	do {
char/pcmcia/cm4000_cs.c:	do {
char/pcmcia/synclink_cs.c:	do {
char/rtc.c:#define hpet_rtc_timer_init()			do { } while (0)
char/rtc.c:	do {
char/ps3flash.c:	do {
char/ps3flash.c:	do {
char/apm-emulation.c:	do {
char/ipmi/ipmi_msghandler.c:	do {								\
char/msm_smd_pkt.c:#define D_DUMP_BUFFER(prestr, cnt, buf) do {			\
char/msm_smd_pkt.c:#define D_DUMP_BUFFER(prestr, cnt, buf) do {} while (0)
char/msm_smd_pkt.c:#define DBG(x...) do {			\
char/msm_smd_pkt.c:#define DBG(x...) do {} while (0)
char/tpm/tpm.c:	do {
char/tpm/tpm_infineon.c:	do {
char/tpm/tpm_tis.c:		do {
char/tpm/tpm_tis.c:	do {
char/tpm/tpm_tis.c:		do {
char/tpm/tpm_nsc.c:	do {
char/tpm/tpm_nsc.c:	do {
char/agp/generic.c:		do {
char/agp/uninorth-agp.c:	do {
char/agp/uninorth-agp.c:	do {
char/agp/hp-agp.c:	do {
char/agp/agp.h:#define DBG(x,y...) do { } while (0)
char/agp/isoch.c:			do {
char/agp/nvidia-agp.c:		do {
char/virtio_console.c:	do {
clocksource/tcb_clksrc.c:	do {
clocksource/clksrc-dbx500-prcmu.c:	do {
clocksource/sh_cmt.c:	do {
clocksource/sh_cmt.c:	do {
clocksource/acpi_pm.c:	do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:	do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/s5pv210-cpufreq.c:		do {
cpufreq/e_powersaver.c:	do {
cpufreq/powernow-k8.c:	do {
cpufreq/powernow-k8.c:	do {
cpufreq/powernow-k8.c:	do {
cpufreq/speedstep-smi.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpufreq/exynos4210-cpufreq.c:	do {
cpuidle/cpuidle.c:#define latency_notifier_init(x) do { } while (0)
crypto/caam/jr.c:			do {
crypto/caam/desc_constr.h:#define PRINT_POS do { printk(KERN_DEBUG "%02d: %s\n", desc_len(desc),\
crypto/caam/desc_constr.h:do { \
crypto/n2_core.c:	do {
crypto/mv_cesa.c:		do {
crypto/mv_cesa.c:	do {
crypto/geode-aes.c:	do {
crypto/hifn_795x.c:#define dprintk(f, a...)	do {} while (0)
dma/ioat/dca.c:	do {
dma/ioat/dca.c:	do {
dma/ioat/dma_v2.c:	do {
dma/ioat/dma_v2.c:	do {
dma/ioat/dma.c:	do {
dma/ioat/dma_v3.c:	do {
dma/ioat/dma_v3.c:	do {
dma/ioat/dma_v3.c:	do {
dma/txx9dmac.c:	do {
dma/shdma.c:		do {
dma/shdma.c:		do {
dma/iovlock.c:	do {
dma/ste_dma40_ll.c:	do {
dma/ste_dma40_ll.c:	do {
dma/dmatest.c:		do {
dma/at_hdmac.c:	do {
dma/iop-adma.c:	do {
dma/fsldma.c:	do {
dma/dmaengine.c:	do {
edac/cpc925_edac.c:	do {
edac/edac_core.h:	do {                                                            \
edac/i7core_edac.c:			do {
edac/sb_edac.c:			do {
firewire/ohci.c:		do {
firewire/ohci.c:	do {
firmware/efivars.c:	do {
gpio/gpio-msm-v2.c:	do {
gpio/gpio-samsung.c:#define gpio_dbg(x...) do { } while (0)
gpio/gpio-pca953x.c:	do {
gpio/gpio-pxa.c:	do {
gpio/gpiolib.c:		do {
gpio/gpio-max732x.c:	do {
gpio/gpio-msm-v1.c:	do {
gpu/drm/sis/sis_mm.c:		do {
gpu/drm/drm_auth.c:		do {
gpu/drm/nouveau/nouveau_drv.h:#define NVOBJ_ENGINE_ADD(d, e, p) do {                                         \
gpu/drm/nouveau/nouveau_drv.h:#define NVOBJ_ENGINE_DEL(d, e) do {                                            \
gpu/drm/nouveau/nouveau_drv.h:#define NVOBJ_CLASS(d, c, e) do {                                              \
gpu/drm/nouveau/nouveau_drv.h:#define NVOBJ_MTHD(d, c, m, e) do {                                            \
gpu/drm/nouveau/nouveau_drv.h:#define NV_DEBUG(d, fmt, arg...) do {                                          \
gpu/drm/nouveau/nouveau_drv.h:#define NV_DEBUG_KMS(d, fmt, arg...) do {                                      \
gpu/drm/nouveau/nouveau_drv.h:#define NV_DEBUG(d, fmt, arg...) do {                                          \
gpu/drm/nouveau/nouveau_drv.h:#define NV_DEBUG_KMS(d, fmt, arg...) do {                                      \
gpu/drm/nouveau/nouveau_drv.h:#define NV_REG_DEBUG(type, dev, fmt, arg...) do { \
gpu/drm/nouveau/nv50_vram.c:	do {
gpu/drm/nouveau/nouveau_state.c:	do {
gpu/drm/nouveau/nouveau_state.c:	do {
gpu/drm/nouveau/nouveau_state.c:	do {
gpu/drm/nouveau/nouveau_dma.c:			do {
gpu/drm/nouveau/nouveau_dma.c:			do {
gpu/drm/nouveau/nv04_dac.c:		do {
gpu/drm/nouveau/nv04_dac.c:	do {
gpu/drm/nouveau/nv04_dac.c:		do {
gpu/drm/nouveau/nv04_instmem.c:	do {
gpu/drm/nouveau/nvc0_vram.c:	do {
gpu/drm/nouveau/nouveau_dp.c:#define AUX_DBG(fmt, args...) do {                                             \
gpu/drm/nouveau/nouveau_dp.c:	do {
gpu/drm/nouveau/nouveau_dp.c:	do {
gpu/drm/nouveau/nouveau_dp.c:		do {
gpu/drm/nouveau/nouveau_dp.c:	do {
gpu/drm/nouveau/nouveau_dp.c:	do {
gpu/drm/nouveau/nv50_crtc.c:	do {
gpu/drm/nouveau/nvc0_grctx.c:			do {
gpu/drm/nouveau/nvc0_grctx.c:			do {
gpu/drm/nouveau/nvc0_grctx.c:				do {
gpu/drm/nouveau/nvc0_graph.c:		do {
gpu/drm/nouveau/nv40_pm.c:		do {
gpu/drm/nouveau/nv50_graph.c:	do {
gpu/drm/nouveau/nouveau_dma.h:#define WRITE_PUT(val) do {                                                    \
gpu/drm/nouveau/nouveau_bios.c:	do {
gpu/drm/nouveau/nouveau_ramht.c:	do {
gpu/drm/nouveau/nouveau_ramht.c:	do {
gpu/drm/nouveau/nv04_timer.c:	do {
gpu/drm/nouveau/nv10_graph.c:	do {								\
gpu/drm/nouveau/nv10_graph.c:	do {								\
gpu/drm/nouveau/nv10_graph.c:	do { \
gpu/drm/nouveau/nv10_graph.c:	do { \
gpu/drm/nouveau/nv10_graph.c:#define NV_WRITE_CTX(reg, val) do { \
gpu/drm/nouveau/nv10_graph.c:#define NV17_WRITE_CTX(reg, val) do { \
gpu/drm/via/via_dma.c:#define VIA_OUT_RING_QW(w1, w2)	do {		\
gpu/drm/via/via_dma.c:	do {
gpu/drm/drm_hashtab.c:	do {
gpu/drm/radeon/evergreen_cs.c:	do {
gpu/drm/radeon/radeon_drv.h:do {									\
gpu/drm/radeon/radeon_drv.h:do {									\
gpu/drm/radeon/radeon_drv.h:do {									\
gpu/drm/radeon/radeon_drv.h:do {								\
gpu/drm/radeon/radeon_drv.h:do {									\
gpu/drm/radeon/radeon_drv.h:do {								\
gpu/drm/radeon/radeon_drv.h:do {							        \
gpu/drm/radeon/radeon_drv.h:do {									\
gpu/drm/radeon/radeon_drv.h:#define RADEON_WAIT_UNTIL_2D_IDLE() do {				\
gpu/drm/radeon/radeon_drv.h:#define RADEON_WAIT_UNTIL_3D_IDLE() do {				\
gpu/drm/radeon/radeon_drv.h:#define RADEON_WAIT_UNTIL_IDLE() do {					\
gpu/drm/radeon/radeon_drv.h:#define RADEON_WAIT_UNTIL_PAGE_FLIPPED() do {				\
gpu/drm/radeon/radeon_drv.h:#define RADEON_FLUSH_CACHE() do {					\
gpu/drm/radeon/radeon_drv.h:#define RADEON_PURGE_CACHE() do {					\
gpu/drm/radeon/radeon_drv.h:#define RADEON_FLUSH_ZCACHE() do {					\
gpu/drm/radeon/radeon_drv.h:#define RADEON_PURGE_ZCACHE() do {					\
gpu/drm/radeon/radeon_drv.h:do {									\
gpu/drm/radeon/radeon_drv.h:do {								\
gpu/drm/radeon/radeon_drv.h:#define RADEON_DISPATCH_AGE( age ) do {					\
gpu/drm/radeon/radeon_drv.h:#define RADEON_FRAME_AGE( age ) do {					\
gpu/drm/radeon/radeon_drv.h:#define RADEON_CLEAR_AGE( age ) do {					\
gpu/drm/radeon/radeon_drv.h:#define R600_DISPATCH_AGE(age) do {					\
gpu/drm/radeon/radeon_drv.h:#define R600_FRAME_AGE(age) do {					\
gpu/drm/radeon/radeon_drv.h:#define R600_CLEAR_AGE(age) do {					\
gpu/drm/radeon/radeon_drv.h:#define BEGIN_RING( n ) do {						\
gpu/drm/radeon/radeon_drv.h:#define ADVANCE_RING() do {						\
gpu/drm/radeon/radeon_drv.h:#define COMMIT_RING() do {						\
gpu/drm/radeon/radeon_drv.h:#define OUT_RING( x ) do {						\
gpu/drm/radeon/radeon_drv.h:#define OUT_RING_REG( reg, val ) do {					\
gpu/drm/radeon/radeon_drv.h:#define OUT_RING_TABLE( tab, sz ) do {					\
gpu/drm/radeon/radeon_drv.h:#define OUT_RING_DRM_BUFFER(buf, sz) do {				\
gpu/drm/radeon/r300.c:	do {
gpu/drm/radeon/radeon_fence.c:		do {
gpu/drm/radeon/radeon_legacy_tv.c:	do {
gpu/drm/radeon/radeon_legacy_tv.c:	do {
gpu/drm/radeon/r100.c:	do {
gpu/drm/radeon/r600_cp.c:	do {
gpu/drm/radeon/r600_cp.c:	do {
gpu/drm/radeon/radeon_cp.c:		do {
gpu/drm/radeon/radeon_cp.c:		do {
gpu/drm/radeon/r300_cmdbuf.c:	do {
gpu/drm/radeon/radeon_state.c:	do {
gpu/drm/radeon/radeon_state.c:	do {
gpu/drm/radeon/radeon_state.c:	do {
gpu/drm/radeon/radeon_state.c:	do { \
gpu/drm/radeon/radeon_state.c:	do {
gpu/drm/radeon/radeon.h:	do {							\
gpu/drm/radeon/radeon.h:	do {							\
gpu/drm/radeon/atom.c:#define DEBUG(...) do { } while (0)
gpu/drm/radeon/atom.c:#define SDEBUG(...) do { } while (0)
gpu/drm/radeon/rs400.c:	do {
gpu/drm/radeon/r600_cs.c:	do {
gpu/drm/radeon/mkregtable.c:	do {
gpu/drm/drm_irq.c:	do {
gpu/drm/drm_irq.c:	do {
gpu/drm/drm_irq.c:	do {
gpu/drm/i810/i810_dma.c:		do {
gpu/drm/i810/i810_drv.h:#define I810_WRITE(reg, val)	do { I810_DEREF(reg) = val; } while (0)
gpu/drm/i810/i810_drv.h:#define I810_WRITE16(reg, val)	do { I810_DEREF16(reg) = val; } while (0)
gpu/drm/i810/i810_drv.h:#define BEGIN_LP_RING(n) do {					\
gpu/drm/i810/i810_drv.h:#define ADVANCE_LP_RING() do {					\
gpu/drm/i810/i810_drv.h:#define OUT_RING(n) do {					\
gpu/drm/drm_edid.c:	do {
gpu/drm/savage/savage_drv.h:#define BEGIN_BCI( n ) do {			\
gpu/drm/savage/savage_drv.h:#define BEGIN_DMA( n ) do {						\
gpu/drm/savage/savage_drv.h:#define DMA_COPY(src, n) do {					\
gpu/drm/savage/savage_drv.h:#define DMA_COMMIT() do {						\
gpu/drm/savage/savage_drv.h:#define DMA_COMMIT() do {/* nothing */} while(0)
gpu/drm/savage/savage_drv.h:#define UPDATE_EVENT_COUNTER( ) do {			\
gpu/drm/savage/savage_drv.h:#define SET_AGE( age, e, w ) do {	\
gpu/drm/savage/savage_state.c:#define SAVE_STATE_MASK(reg,where,mask) do {			\
gpu/drm/savage/savage_state.c:	do {
gpu/drm/drm_lock.c:	do {
gpu/drm/drm_lock.c:	do {
gpu/drm/drm_lock.c:	do {
gpu/drm/drm_lock.c:	do {
gpu/drm/drm_lock.c:			do {
gpu/drm/i2c/sil164_drv.c:#define sil164_dbg(client, format, ...) do {				\
gpu/drm/i2c/ch7006_priv.h:#define ch7006_dbg(client, format, ...) do {				\
gpu/drm/i915/intel_crt.c:		do {
gpu/drm/i915/i915_reg.h: *  do {
gpu/drm/i915/i915_drv.h:#define RING_LOCK_TEST_WITH_RETURN(dev, file) do {			\
gpu/drm/i915/intel_display.c:#define INTELPllInvalid(s)   do { /* DRM_DEBUG(s); */ return false; } while (0)
gpu/drm/i915/intel_display.c:		do {
gpu/drm/i915/i915_debugfs.c:#define count_objects(list, member) do { \
gpu/drm/i915/i915_irq.c:	do {
gpu/drm/i915/intel_i2c.c:			do {
gpu/drm/i915/intel_i2c.c:				do {
gpu/drm/i915/intel_i2c.c:			do {
gpu/drm/i915/intel_i2c.c:				do {
gpu/drm/i915/intel_opregion.c:	do {
gpu/drm/i915/intel_drv.h:#define MSLEEP(x) do { \
gpu/drm/i915/dvo_ch7017.c:do {							\
gpu/drm/i915/intel_ringbuffer.c:do {									\
gpu/drm/i915/intel_ringbuffer.c:	do {
gpu/drm/i915/i915_gem_execbuffer.c:	do {
gpu/drm/i915/intel_sdvo.c:#define ENHANCEMENT(name, NAME) do { \
gpu/drm/ttm/ttm_bo_manager.c:	do {
gpu/drm/ttm/ttm_bo.c:	do {
gpu/drm/drm_fops.c:		do {
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_drv.h:do {									\
gpu/drm/mga/mga_state.c:		do {
gpu/drm/mga/mga_state.c:		do {
gpu/drm/r128/r128_drv.h:do {									\
gpu/drm/r128/r128_drv.h:do {									\
gpu/drm/r128/r128_drv.h:do {									\
gpu/drm/r128/r128_drv.h:do {									\
gpu/drm/r128/r128_drv.h:#define R128_WAIT_UNTIL_PAGE_FLIPPED() do {				\
gpu/drm/r128/r128_drv.h:#define BEGIN_RING(n) do {						\
gpu/drm/r128/r128_drv.h:#define ADVANCE_RING() do {						\
gpu/drm/r128/r128_drv.h:#define COMMIT_RING() do {						\
gpu/drm/r128/r128_drv.h:#define OUT_RING(x) do {						\
gpu/drm/r128/r128_state.c:		do {
gpu/drm/r128/r128_state.c:		do {
gpu/drm/vmwgfx/vmwgfx_execbuf.c:	do {
gpu/drm/vmwgfx/vmwgfx_resource.c:	do {
gpu/drm/vmwgfx/vmwgfx_resource.c:	do {
gpu/drm/vmwgfx/vmwgfx_fence.c:	do {
gpu/drm/vmwgfx/vmwgfx_gmrid_manager.c:	do {
gpu/drm/vmwgfx/vmwgfx_fifo.c:	do {
hid/hid-roccat-pyra.c:	do {
hid/hid-picolcd.c:	do { \
hid/hid-picolcd.c:	do {
hid/hid-roccat-kovaplus.c:	do {
hid/usbhid/hid-core.c:	do {
hid/hid-roccat-kone.c:	do {
hid/hid-roccat-koneplus.c:	do {
hid/hid-wacom.c:	do {
hid/hid-wacom.c:		do {
hwmon/pmbus/pmbus_core.c:do {									\
hwmon/i5k_amb.c:	do {
i2c/busses/i2c-i801.c:	do {
i2c/busses/i2c-i801.c:	do {
i2c/busses/i2c-i801.c:		do {
i2c/busses/i2c-viapro.c:	do {
i2c/busses/i2c-amd756.c:		do {
i2c/busses/i2c-amd756.c:	do {
i2c/busses/i2c-pca-isa.c:		do {
i2c/busses/i2c-pxa.c:#define clk_put(clk)		do { } while (0)
i2c/busses/i2c-pxa.c:#define clk_disable(clk)	do { } while (0)
i2c/busses/i2c-pxa.c:#define clk_enable(clk)		do { } while (0)
i2c/busses/i2c-pxa.c:#define show_state(i2c) do { } while (0)
i2c/busses/i2c-pxa.c:#define decode_ISR(val) do { } while (0)
i2c/busses/i2c-pxa.c:#define decode_ICR(val) do { } while (0)
i2c/busses/i2c-pxa.c:#define i2c_pxa_scream_blue_murder(i2c, why) do { } while (0)
i2c/busses/i2c-pxa.c:#define i2c_pxa_set_slave(i2c, err)	do { } while (0)
i2c/busses/i2c-sis5595.c:	do {
i2c/busses/i2c-nforce2.c:	do {
i2c/busses/i2c-nforce2.c:	do {
i2c/busses/i2c-bfin-twi.c:			do {
i2c/busses/i2c-iop3xx.c:	do {
i2c/busses/i2c-au1550.c:	do {
i2c/busses/i2c-at91.c:	do {
i2c/busses/i2c-at91.c:	do {
i2c/busses/i2c-stu300.c:	do {
i2c/busses/i2c-s6000.c:	do {
i2c/busses/i2c-sh_mobile.c:	do {
i2c/busses/i2c-eg20t.c:	do {
i2c/busses/i2c-s3c2410.c:	do {
i2c/busses/i2c-nuc900.c:	do {
i2c/busses/i2c-sis96x.c:	do {
i2c/busses/i2c-isch.c:	do {
i2c/busses/i2c-pca-platform.c:		do {
i2c/busses/i2c-puv3.c:		do {
i2c/busses/i2c-puv3.c:		do {
i2c/busses/i2c-ali1535.c:	do {
i2c/busses/i2c-ali15x3.c:	do {
i2c/busses/i2c-sis630.c:	do {
i2c/busses/i2c-sis630.c:		do {
i2c/busses/i2c-ali1563.c:	do {
i2c/busses/i2c-ali1563.c:	do {
i2c/busses/i2c-octeon.c:	do {
i2c/busses/i2c-octeon.c:	do {
i2c/algos/i2c-algo-bit.c:	do { \
i2c/algos/i2c-algo-bit.c:	do {} while (0)
i2c/algos/i2c-algo-pca.c:#define DEB1(fmt, args...) do { if (i2c_debug >= 1)			\
i2c/algos/i2c-algo-pca.c:#define DEB2(fmt, args...) do { if (i2c_debug >= 2)			\
i2c/algos/i2c-algo-pca.c:#define DEB3(fmt, args...) do { if (i2c_debug >= 3)			\
i2c/muxes/pca9541.c:	do {
ide/ide-probe.c:	do {
ide/at91_ide.c:#define enter_16bit(cs, mode) do {					\
ide/at91_ide.c:	do {
ide/ide-cd.c:	do {
ide/ide-cd.c:	do {
ide/ide-tape.c:#define ide_debug_log(lvl, fmt, args...) do {} while (0)
ide/ide-cd.h:#define ide_debug_log(lvl, fmt, args...) do {} while (0)
ide/ide-atapi.c:#define debug_log(fmt, args...) do {} while (0)
ide/ns87415.c:	do {
ide/ns87415.c:		do {
ide/ide-eh.c:	do {
ide/ide-gd.h:#define ide_debug_log(lvl, fmt, args...) do {} while (0)
ide/ide-proc.c:	do {
ide/pdc202xx_new.c:	do {
ide/ide-acpi.c:#define DEBPRINT(fmt, args...)	do {} while (0)
idle/i7300_idle.c:	do { if (debug) printk(KERN_INFO I7300_PRINT fmt, ##arg); } while (0)
infiniband/ulp/ipoib/ipoib.h:	do {						\
infiniband/ulp/ipoib/ipoib.h:	do {						\
infiniband/ulp/ipoib/ipoib.h:	do { (void) (priv); } while (0)
infiniband/ulp/ipoib/ipoib.h:	do { (void) (priv); } while (0)
infiniband/ulp/ipoib/ipoib.h:	do {						\
infiniband/ulp/ipoib/ipoib.h:	do { (void) (priv); } while (0)
infiniband/ulp/ipoib/ipoib_ib.c:	do {
infiniband/ulp/iser/iscsi_iser.h:	do {						\
infiniband/ulp/iser/iscsi_iser.h:	do {						\
infiniband/ulp/iser/iscsi_iser.h:	do {						\
infiniband/ulp/iser/iser_memory.c:		do {
infiniband/hw/ipath/ipath_verbs.c:			do {
infiniband/hw/ipath/ipath_iba6110.c:	do {
infiniband/hw/ipath/ipath_qp.c:			do {
infiniband/hw/ipath/ipath_kernel.h:	do { \
infiniband/hw/ipath/ipath_kernel.h:	do { \
infiniband/hw/ipath/ipath_ruc.c:	do {
infiniband/hw/qib/qib_ruc.c:	do {
infiniband/hw/qib/qib.h:	do { \
infiniband/hw/qib/qib.h:	do { \
infiniband/hw/qib/qib.h:	do { \
infiniband/hw/qib/qib.h:	do { \
infiniband/hw/qib/qib_qp.c:		do {
infiniband/hw/amso1100/c2_qp.c:        do {
infiniband/hw/amso1100/c2.c:	do {
infiniband/hw/amso1100/c2.c:	do {
infiniband/hw/amso1100/c2.c:	do {
infiniband/hw/amso1100/c2.c:		do {
infiniband/hw/nes/nes_cm.c:		do {
infiniband/hw/nes/nes_cm.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:			do {
infiniband/hw/nes/nes_hw.c:			do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes_hw.c:	do {
infiniband/hw/nes/nes.h:do { \
infiniband/hw/nes/nes.h:do { \
infiniband/hw/nes/nes.h:#define assert(expr)          do {} while (0)
infiniband/hw/nes/nes_mgt.c:	do {
infiniband/hw/nes/nes_mgt.c:	do {
infiniband/hw/nes/nes_mgt.c:		do {
infiniband/hw/nes/nes_utils.c:	do {
infiniband/hw/nes/nes_utils.c:	do {
infiniband/hw/cxgb3/iwch_cq.c:		do {
infiniband/hw/cxgb3/iwch.h:	do {
infiniband/hw/cxgb4/iw_cxgb4.h:do { \
infiniband/hw/cxgb4/iw_cxgb4.h:	do {
infiniband/hw/cxgb4/iw_cxgb4.h:	do {
infiniband/hw/cxgb4/cq.c:		do {
infiniband/hw/mthca/mthca_doorbell.h:#define MTHCA_INIT_DOORBELL_LOCK(ptr)    do { } while (0)
infiniband/hw/mthca/mthca_mcg.c:	do {
infiniband/hw/mthca/mthca_dev.h:	do {								\
infiniband/hw/mthca/mthca_dev.h:#define mthca_dbg(mdev, format, arg...) do { (void) mdev; } while (0)
infiniband/hw/mthca/mthca_dev.h:	do {                                                          \
infiniband/hw/mthca/mthca_dev.h:	do {                                                          \
infiniband/hw/ehca/ehca_irq.c:		do {
infiniband/hw/ehca/ehca_irq.c:	do {
infiniband/hw/ehca/ehca_irq.c:	do {
infiniband/hw/ehca/ehca_cq.c:	do {
infiniband/hw/ehca/ehca_main.c:			do {
infiniband/hw/ehca/ehca_tools.h:	do { \
infiniband/hw/ehca/ehca_tools.h:	do { \
infiniband/hw/ehca/ehca_tools.h:	do { \
infiniband/hw/ehca/ehca_qp.c:	do {
infiniband/core/ucm.c:	do {
infiniband/core/fmr_pool.c:	do {
infiniband/core/ucma.c:	do {
infiniband/core/ucma.c:	do {
infiniband/core/uverbs_cmd.c:	do {								\
infiniband/core/cma.c:	do {
infiniband/core/cm.c:	do {
infiniband/core/mad.c:	do {
input/keyboard/lkkbd.c:#define DBG(x...) do {} while (0)
input/keyboard/lkkbd.c:#define CHECK_LED(LK, VAR_ON, VAR_OFF, LED, BITS) do {		\
input/keyboard/sh_keysc.c:	do {
input/keyboard/hilkbd.c:#define hil_command(x)          do { hil_writeb((x), HILBASE + HIL_CMD); } while (0)
input/keyboard/hilkbd.c:#define hil_write_data(x)       do { hil_writeb((x), HILBASE + HIL_DATA); } while (0)
input/keyboard/samsung-keypad.c:	do {
input/keyboard/omap-keypad.c:#define		set_col_gpio_val(x, y)	do {} while (0)
input/misc/yealink.c:	do {
input/serio/serio.c:	do {
input/serio/serio.c:	do {								\
input/serio/i8042.h:#define dbg_init() do { i8042_start_time = jiffies; } while (0)
input/serio/i8042.h:	do {									\
input/serio/i8042.h:#define dbg_init() do { } while (0)
input/serio/i8042.h:	do {									\
input/serio/pcips2.c:	do {
input/serio/pcips2.c:	do {
input/serio/pcips2.c:	do {
input/serio/maceps2.c:	do {
input/serio/i8042.c:	do {
input/serio/i8042.c:	do {
input/serio/i8042.c:#define DELAY do { mdelay(1); if (++delay > 10) return delay; } while(0)
input/evdev.c:	do {
input/input.c:	do {								\
input/input.c:	do {								\
input/input.c:	do {								\
input/input.c:	do {								\
input/input.c:	do {								\
input/joystick/cobra.c:	do {
input/joystick/gf2k.c:        do {
input/joystick/grip_mp.c:#define dbg(format, arg...) do {} while (0)
input/joystick/grip_mp.c:	do {
input/joystick/grip.c:	do {
input/joystick/grip.c:	do {
input/joystick/analog.c:#define GET_TIME(x)	do { if (cpu_has_tsc) rdtscl(x); else x = get_time_pit(); } while (0)
input/joystick/analog.c:#define GET_TIME(x)	do { x = get_cycles(); } while (0)
input/joystick/analog.c:#define GET_TIME(x)	do { x = get_cycles(); } while (0)
input/joystick/analog.c:#define GET_TIME(x)     do { x = analog_faketime++; } while(0)
input/joystick/analog.c:	do {
input/joystick/adi.c:	do {
input/joystick/magellan.c:	do {
input/joystick/sidewinder.c:#define dbg(format, arg...) do {} while (0)
input/joystick/sidewinder.c:	do {
input/joystick/sidewinder.c:        do {
input/joystick/sidewinder.c:	do {
input/joystick/tmdc.c:	do {
input/gameport/gameport.c:#define GET_TIME(x)     do { x = get_time_pit(); } while (0)
input/gameport/gameport.c:	do {
input/gameport/gameport.c:		do {
input/tablet/wacom_sys.c:	do {
input/tablet/wacom_sys.c:	do {
input/tablet/wacom_sys.c:	do {
input/tablet/wacom_sys.c:		do {
input/tablet/wacom_sys.c:		do {
input/mouse/appletouch.c:	do {								\
input/mouse/synaptics.c:	do {
input/mouse/vsxxxaa.c:#define DBG(x...) do {} while (0)
input/mouse/vsxxxaa.c:	do {
input/mouse/elantech.c:	do {								\
input/mouse/elantech.c:	do {
input/mouse/elantech.c:		do {
input/touchscreen/zylonite-wm97xx.c:	do {
input/touchscreen/mainstone-wm97xx.c:	do {
input/touchscreen/wm97xx-core.c:	do {
input/touchscreen/bu21013_ts.c:	do {
input/touchscreen/tps6507x-ts.c:	do {
input/touchscreen/atmel_mxt_ts.c:	do {
input/touchscreen/atmel_mxt_ts.c:	do {
input/touchscreen/intel-mid-touch.c:	do {
iommu/intel-iommu.c:	do {
iommu/intel-iommu.c:		do {
iommu/intel-iommu.c:	do {
iommu/dmar.c:		do {
iommu/amd_iommu_types.h:	do {								\
iommu/omap-iommu.c:	do {
iommu/omap-iommu.c:	do {
iommu/intr_remapping.c:	do {
isdn/gigaset/isocdata.c:	do {
isdn/gigaset/usb-gigaset.c:	do {
isdn/gigaset/usb-gigaset.c:	do {
isdn/gigaset/capi.c:	do {
isdn/gigaset/gigaset.h:	do { \
isdn/gigaset/gigaset.h:#define gig_dbg(level, format, arg...) do {} while (0)
isdn/hisax/q931.c:		do {
isdn/hisax/bkm_ax.h:do {		   	 		   											\
isdn/hisax/hisax.h:#define  schedule_event(s, ev)	do {test_and_set_bit(ev, &s->event);schedule_work(&s->tqueue); } while(0)
isdn/hisax/hisax.h:#define HZDELAY(jiffs) do {					\
isdn/hisax/hfc_sx.c:	do {
isdn/hisax/hfc_sx.c:	do {
isdn/hisax/hfc_sx.c:	do {
isdn/hisax/avma1_cs.c:    do {
isdn/hisax/elsa_ser.c:	do {
isdn/hisax/elsa_ser.c:	do {
isdn/hisax/elsa_ser.c:	do {
isdn/hisax/gazel.c:	do {
isdn/hisax/gazel.c:	do {
isdn/hisax/telespci.c:#define ZORAN_WAIT_NOBUSY	do { \
isdn/hisax/hfc4s8s_l1.c:	do {
isdn/hisax/hfc4s8s_l1.c:	do {
isdn/hisax/hfc4s8s_l1.c:	do {
isdn/hisax/hisax_debug.h:#define DBG(level, format, arg...) do { \
isdn/hisax/hisax_debug.h:#define DBG(level, format, arg...) do {} while (0)
isdn/hisax/hisax_debug.h:#define DBG_PACKET(level,data,count) do {} while (0)
isdn/hisax/hisax_debug.h:#define DBG_SKB(level,skb) do {} while (0)
isdn/hisax/st5481.h:#define DBG_ISO_PACKET(level,urb) do {} while (0)
isdn/hysdn/boardergo.c:	do {
isdn/hysdn/boardergo.c:		do {
isdn/capi/capidrv.c:	do { \
isdn/capi/capilib.c:#define DBG(format, arg...) do { \
isdn/capi/kcapi.h:#define DBG(format, arg...) do { \
isdn/i4l/isdn_bsdcomp.c:		do {
isdn/i4l/isdn_bsdcomp.c:				do {
isdn/i4l/isdnhdlc.c:	do {\
isdn/i4l/isdnhdlc.c:	do {\
isdn/pcbit/layer2.c:		do {
isdn/pcbit/drv.c:	do {
isdn/mISDN/dsp_blowfish.c:#define EROUND(a, b, n)  do { b ^= P[n]; a ^= bf_F(b); } while (0)
isdn/mISDN/dsp_blowfish.c:#define DROUND(a, b, n)  do { a ^= bf_F(b); b ^= P[n]; } while (0)
isdn/hardware/eicon/io.c:  do {
isdn/hardware/eicon/os_bri.c:	do {
isdn/hardware/eicon/os_pri.c:	do {
isdn/hardware/eicon/os_4bri.c:	do {
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_LOG(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_FTL(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_ERR(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_TRC(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_MXLOG(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_EVL(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_REG(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_MEM(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_SPL(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_IRP(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_TIM(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_BLK(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_TAPI(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_NDIS(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_CONN(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_STAT(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_SEND(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_RECV(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_PRV0(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_PRV1(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_PRV2(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define myDbgPrint_PRV3(x...) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define DBG_TEST(func,args) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define DBG_EVL_ID(args) do { } while(0);
isdn/hardware/eicon/debuglib.h:#define DbgRegister(name,tag, mask) do { } while(0)
isdn/hardware/eicon/debuglib.h:#define DbgDeregister() do { } while(0)
isdn/hardware/eicon/debuglib.h:#define DbgSetLevel(mask) do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_RAM(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_PORT(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_PROM(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_CTLREG(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_RESET(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_CFG(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_ADDRESS(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_CONFIG(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define DIVA_OS_MEM_DETACH_CONTROL(a, x)	do { } while(0)
isdn/hardware/eicon/platform.h:#define diva_os_destroy_spin_lock(a,b) do { } while(0)
isdn/hardware/eicon/platform.h:#define diva_os_dump_file(__x__) do { } while(0)
isdn/hardware/eicon/capifunc.c:	do {
isdn/hardware/eicon/maintidi.c:	do {
isdn/hardware/eicon/di.c:    do {
isdn/hardware/avm/avm_cs.c:    do {
isdn/hardware/mISDN/iohelper.h:#define ASSIGN_FUNC(typ, name, dest)	do {\
isdn/hardware/mISDN/iohelper.h:#define ASSIGN_FUNC_IPAC(typ, target)	do {\
leds/leds.h:#define led_trigger_set_default(x) do {} while (0)
leds/leds.h:#define led_trigger_set(x, y) do {} while (0)
leds/leds.h:#define led_trigger_remove(x) do {} while (0)
lguest/lg.h:	do {							\
lguest/lg.h: * Like any macro which uses an "if", it is safely wrapped in a run-once "do {
lguest/lg.h:do {								\
macintosh/therm_pm72.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_smu_controls.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_pid.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_smu_sensors.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_pm112.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_pm112.c:#define DBG_LOTS(args...)	do { } while(0)
macintosh/windfarm_pm91.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_pm81.c:#define DBG(args...)	do { } while(0)
macintosh/via-cuda.c:    do {                                                        \
macintosh/windfarm_core.c:#define DBG(args...)	do { } while(0)
macintosh/windfarm_lm75_sensor.c:#define DBG(args...)	do { } while(0)
macintosh/smu.c:#define DPRINTK(fmt, args...) do { printk(KERN_DEBUG fmt , ##args); } while (0)
macintosh/smu.c:#define DPRINTK(fmt, args...) do { } while (0)
macintosh/smu.c:	do {
macintosh/windfarm_smu_sat.c:#define DBG(args...)	do { } while(0)
macintosh/mediabay.c:	       	do {
macintosh/via-pmu.c:	do {
macintosh/via-pmu.c:	do {
macintosh/via-pmu.c:	do {
macintosh/via-pmu.c:		do {
md/dm-bufio.c:do {						\
md/dm-bufio.c:#  define dm_bufio_cond_resched()                do { } while (0)
md/dm-bufio.c:	do {
md/raid1.c:		do {
md/raid1.c:		do {
md/raid1.c:		do {
md/raid1.c:	do {
md/dm-stripe.c:	do {
md/persistent-data/dm-btree.c:	do {
md/persistent-data/dm-btree.c:	do {
md/md.c:	do {
md/raid5.c:	do {
md/raid5.c:	do {
md/raid5.c:	do {
md/dm-kcopyd.c:	do {
md/dm-kcopyd.c:	do {
md/dm-snap.c:	do {
md/dm-mpath.c:	do {
md/dm-mpath.c:	do {
md/md.h:do {									\
md/md.h:do {									\
md/dm-log.c:	do {
md/dm.c:	do {
md/dm.c:		do {
md/raid10.c:	do {
md/raid10.c:		do {
md/raid10.c:	do {
md/dm-io.c:	do {
md/dm-raid1.c:	do {
media/video/tlg2300/pd-common.h:#define logpm(pd) do {\
media/video/tlg2300/pd-common.h:#define logs(f) do { \
media/video/tlg2300/pd-video.c:	do { \
media/video/tlg2300/pd-video.c:	do {
media/video/mt9t112.c:	do {				\
media/video/et61x251/et61x251.h:do {									\
media/video/et61x251/et61x251.h:do {									\
media/video/et61x251/et61x251.h:do {									\
media/video/et61x251/et61x251.h:#define DBG(level, fmt, ...) do {;} while(0)
media/video/et61x251/et61x251.h:#define KDBG(level, fmt, ...) do {;} while(0)
media/video/et61x251/et61x251.h:#define V4LDBG(level, name, cmd) do {;} while(0)
media/video/et61x251/et61x251.h:#define PDBGG(fmt, args...) do {;} while (0) /* placeholder */
media/video/m5mols/m5mols_core.c:	do {
media/video/s5p-tv/mixer.h:	#define mxr_dbg(mdev, fmt, ...)  do { (void) mdev; } while (0)
media/video/s5p-tv/mixer_reg.c:do { \
media/video/s5p-tv/mixer_reg.c:do { \
media/video/v4l2-mem2mem.c:	do {								\
media/video/tveeprom.c:#define tveeprom_dbg(fmt, arg...) do { \
media/video/uvc/uvcvideo.h:	do { \
media/video/uvc/uvcvideo.h:	do { \
media/video/uvc/uvc_video.c:		do {
media/video/uvc/uvc_video.c:		do {
media/video/uvc/uvc_isight.c:		do {
media/video/v4l2-event.c:	do {
media/video/v4l2-event.c:	do {
media/video/pwc/pwc.h:#define PWC_DEBUG(level, fmt, args...) do {\
media/video/pwc/pwc.h:#define PWC_TRACE(fmt, args...) do { } while(0)
media/video/pwc/pwc.h:#define PWC_DEBUG(level, fmt, args...) do { } while(0)
media/video/pwc/pwc-dec23.c:#define fill_nbits(pdec, nbits_wanted) do { \
media/video/pwc/pwc-dec23.c:#define skip_nbits(pdec, nbits_to_skip) do { \
media/video/pwc/pwc-dec23.c:#define get_nbits(pdec, nbits_wanted, result) do { \
media/video/pwc/pwc-dec23.c:#define __get_nbits(pdec, nbits_wanted, result) do { \
media/video/tuner-core.c:#define tuner_warn(fmt, arg...) do {			\
media/video/tuner-core.c:#define tuner_info(fmt, arg...) do {			\
media/video/tuner-core.c:#define tuner_err(fmt, arg...) do {			\
media/video/tuner-core.c:#define tuner_dbg(fmt, arg...) do {				\
media/video/bw-qcam.c:	do {
media/video/bw-qcam.c:	do {
media/video/fsl-viu.c:	do {								\
media/video/fsl-viu.c:		do {
media/video/sn9c102/sn9c102.h:do {                                                                          \
media/video/sn9c102/sn9c102.h:do {                                                                          \
media/video/sn9c102/sn9c102.h:do {                                                                          \
media/video/sn9c102/sn9c102.h:#	define DBG(level, fmt, args...) do {;} while(0)
media/video/sn9c102/sn9c102.h:#	define V4LDBG(level, name, cmd) do {;} while(0)
media/video/sn9c102/sn9c102.h:#	define KDBG(level, fmt, args...) do {;} while(0)
media/video/sn9c102/sn9c102.h:#define PDBGG(fmt, args...) do {;} while(0) /* placeholder */
media/video/cx25821/cx25821-audio-upstream.c:	do {
media/video/cx25821/cx25821-video.h:do {									\
media/video/cx25821/cx25821-i2c.c:do {									\
media/video/cx25821/cx25821-alsa.c:do {								\
media/video/cx25821/cx25821-alsa.c:do {									\
media/video/zoran/zr36050.c:	do { \
media/video/zoran/zr36016.c:	do { \
media/video/zoran/videocodec.c:	do { \
media/video/zoran/zoran_card.h:	do { \
media/video/zoran/zr36060.c:	do { \
media/video/ivtv/ivtv-driver.h:	do { \
media/video/ivtv/ivtv-driver.h:	do { \
media/video/ivtv/ivtv-driver.h:	do { writel(val, reg); readl(reg); } while (0)
media/video/ivtv/ivtv-driver.h:	do { write_reg(val, reg); read_reg(reg); } while (0)
media/video/ivtv/ivtv-driver.h:	do { write_enc(val, addr); read_enc(addr); } while (0)
media/video/ivtv/ivtv-driver.h:	do { write_dec(val, addr); read_dec(addr); } while (0)
media/video/ivtv/ivtv-driver.h:	do {								\
media/video/ivtv/ivtvfb.c:	do { \
media/video/ivtv/ivtv-driver.c:	do {
media/video/cx23885/cx23885-vbi.c:	do { if (vbi_debug >= level)\
media/video/cx23885/cx23885-video.c:	do { if (video_debug >= level)\
media/video/cx23885/cx23885-417.c:	do { if (v4l_debug >= level) \
media/video/cx23885/cx23885-input.c:	do {
media/video/cx23885/altera-ci.c:	do { \
media/video/cx23885/altera-ci.c:	do { \
media/video/cx23885/cx23885-core.c:	do { if (debug >= level)\
media/video/cx23885/cx23885-i2c.c:	do { if (i2c_debug >= level)\
media/video/cx23885/cimax2.c:	do { \
media/video/cx23885/cx23885-dvb.c:	do { if (debug >= level)\
media/video/cpia2/cpia2.h:#define DBG(fmn,args...) do {} while(0)
media/video/s5p-fimc/fimc-reg.c:	do {
media/video/s2255drv.c:	do {								\
media/video/s5p-mfc/s5p_mfc_debug.h:	do {							\
media/video/s5p-mfc/s5p_mfc_debug.h:	do {						\
media/video/s5p-mfc/s5p_mfc_debug.h:	do {						\
media/video/s5p-mfc/s5p_mfc_shm.h:	do {					\
media/video/s5p-mfc/s5p_mfc_ctrl.c:	do {
media/video/s5p-mfc/s5p_mfc_cmd.c:	do {
media/video/bt8xx/bttvp.h:do {						\
media/video/bt8xx/bttvp.h:do {						\
media/video/bt8xx/bttvp.h:do {						\
media/video/bt8xx/bttv-vbi.c:do {									\
media/video/bt8xx/bttv-input.c:do {						\
media/video/cx88/cx88.h:	do {							\
media/video/v4l2-ioctl.c:		do {							\
media/video/v4l2-ioctl.c:		do {							\
media/video/v4l2-ioctl.c:		do {							\
media/video/au0828/au0828.h:	do { if (au0828_debug & level)\
media/video/au0828/au0828-video.c:do {\
media/video/adv7170.c:			do {
media/video/c-qcam.c:		do {
media/video/c-qcam.c:		do {
media/video/saa7185.c:			do {
media/video/stk-sensor.c:	do {
media/video/stk-sensor.c:	do {
media/video/saa7164/saa7164-cmd.c:	do {
media/video/saa7164/saa7164.h:	do { if (saa_debug & level)\
media/video/saa7164/saa7164.h:	do { \
media/video/saa7164/saa7164.h:	do { \
media/video/adv7175.c:			do {
media/video/videobuf2-core.c:	do {								\
media/video/usbvision/usbvision-core.c:	#define PDEBUG(level, fmt, args...) do {} while (0)
media/video/usbvision/usbvision-video.c:	#define PDEBUG(level, fmt, args...) do {} while (0)
media/video/usbvision/usbvision-video.c:	do {
media/video/usbvision/usbvision-i2c.c:		do {
media/video/usbvision/usbvision-i2c.c:		do {
media/video/videobuf2-dma-sg.c:	do {
media/video/omap3isp/ispcsiphy.c:	do {
media/video/omap3isp/ispcsi2.c:	do {
media/video/omap3isp/ispcsi2.c:	do {
media/video/omap3isp/ispqueue.c:	do {
media/video/omap3isp/ispqueue.c:	do {
media/video/omap3isp/ispccp2.c:	do {						\
media/video/cx231xx/cx231xx-dvb.c:#define dprintk(level, fmt, arg...) do {			\
media/video/cx231xx/cx231xx.h:#define cx231xx_err(fmt, arg...) do {\
media/video/cx231xx/cx231xx.h:#define cx231xx_errdev(fmt, arg...) do {\
media/video/cx231xx/cx231xx.h:#define cx231xx_info(fmt, arg...) do {\
media/video/cx231xx/cx231xx.h:#define cx231xx_warn(fmt, arg...) do {\
media/video/cx231xx/cx231xx-video.c:#define cx231xx_videodbg(fmt, arg...) do {\
media/video/cx231xx/cx231xx-video.c:do {\
media/video/cx231xx/cx231xx-core.c:#define cx231xx_coredbg(fmt, arg...) do {\
media/video/cx231xx/cx231xx-core.c:#define cx231xx_isocdbg(fmt, arg...) do {\
media/video/cx231xx/cx231xx-417.c:	do { if (v4l_debug >= level) \
media/video/cx231xx/cx231xx-i2c.c:do {							\
media/video/cx231xx/cx231xx-i2c.c:do {							\
media/video/cx231xx/cx231xx-i2c.c:		do {
media/video/cx231xx/cx231xx-audio.c:#define dprintk(fmt, arg...) do {					\
media/video/cx231xx/cx231xx-avcore.c:	do {
media/video/videobuf-core.c:	do {								\
media/video/videobuf-core.c:	do {								\
media/video/omap24xxcam.c:		do {
media/video/omap24xxcam.c:		do {
media/video/zr364xx.c:	do { \
media/video/tm6000/tm6000-alsa.c:#define dprintk(level, fmt, arg...) do {				   \
media/video/tm6000/tm6000.h:#define dprintk(dev, level, fmt, arg...) do {\
media/video/tm6000/tm6000.h:#define tm6000_err(fmt, arg...) do {\
media/video/tm6000/tm6000-i2c.c:#define i2c_dprintk(lvl, fmt, args...) if (i2c_debug >= lvl) do { \
media/video/v4l2-ctrls.c:			do {
media/video/v4l2-ctrls.c:			do {
media/video/v4l2-ctrls.c:		do {
media/video/v4l2-ctrls.c:			do {
media/video/v4l2-common.c:		do {
media/video/em28xx/em28xx-video.c:#define em28xx_videodbg(fmt, arg...) do {\
media/video/em28xx/em28xx-video.c:do {\
media/video/em28xx/em28xx-audio.c:#define dprintk(fmt, arg...) do {					\
media/video/em28xx/em28xx-dvb.c:#define dprintk(level, fmt, arg...) do {			\
media/video/em28xx/em28xx.h:#define em28xx_err(fmt, arg...) do {\
media/video/em28xx/em28xx.h:#define em28xx_errdev(fmt, arg...) do {\
media/video/em28xx/em28xx.h:#define em28xx_info(fmt, arg...) do {\
media/video/em28xx/em28xx.h:#define em28xx_warn(fmt, arg...) do {\
media/video/em28xx/em28xx-cards.c:	do {
media/video/em28xx/em28xx-core.c:#define em28xx_coredbg(fmt, arg...) do {\
media/video/em28xx/em28xx-core.c:#define em28xx_regdbg(fmt, arg...) do {\
media/video/em28xx/em28xx-core.c:#define em28xx_isocdbg(fmt, arg...) do {\
media/video/em28xx/em28xx-i2c.c:do {							\
media/video/em28xx/em28xx-i2c.c:do {							\
media/video/em28xx/em28xx-i2c.c:	do {
media/video/gspca/spca500.c:	do {
media/video/gspca/topro.c:	do {
media/video/gspca/topro.c:	do {
media/video/gspca/ov519.c:		do {
media/video/gspca/ov519.c:		do {
media/video/gspca/ov519.c:		do {
media/video/gspca/conex.c:	do {
media/video/gspca/vc032x.c:	do {
media/video/gspca/vc032x.c:	do {
media/video/gspca/ov534.c:	do {
media/video/gspca/m5602/m5602_core.c:	do {
media/video/gspca/kinect.c:	do {
media/video/gspca/gspca.h:do {								\
media/video/gspca/spca1528.c:	do {
media/video/gspca/spca1528.c:	do {
media/video/gspca/spca1528.c:	do {
media/video/gspca/ov534_9.c:	do {
media/video/gspca/spca561.c:	do {
media/video/gspca/spca561.c:	do {
media/video/gspca/sunplus.c:	do {
media/video/soc_camera.c:#define soc_camera_free_i2c(icd)	do {} while (0)
media/video/saa7134/saa7134.h:#define saa_call_all(dev, o, f, args...) do {				\
media/video/saa7134/saa7134-dvb.c:#define dprintk(fmt, arg...)	do { if (debug) \
media/video/cx18/cx18-alsa.h:	do { \
media/video/cx18/cx18-alsa-pcm.c:#define dprintk(fmt, arg...) do {					\
media/video/cx18/cx18-driver.h:	do { \
media/video/cx18/cx18-driver.h:	do { \
media/video/cx18/cx18-driver.h:	do { \
media/video/cx18/cx18-driver.h:	do { \
media/video/cx18/cx18-driver.h:	do {								\
media/video/cx18/cx18-streams.c:	do {
media/video/cx18/cx18-driver.c:	do {
media/video/cx18/cx18-av-firmware.c:	do {
media/video/cx18/cx18-alsa-main.c:	do { \
media/video/cx18/cx18-ioctl.c:	do {
media/video/pvrusb2/pvrusb2-encoder.c:	LOCK_TAKE(hdw->ctl_lock); do {
media/video/pvrusb2/pvrusb2-encoder.c:	LOCK_TAKE(hdw->ctl_lock); do {
media/video/pvrusb2/pvrusb2-ioread.c:	mutex_lock(&cp->mutex); do {
media/video/pvrusb2/pvrusb2-ioread.c:	mutex_lock(&cp->mutex); do {
media/video/pvrusb2/pvrusb2-ioread.c:	mutex_lock(&cp->mutex); do {
media/video/pvrusb2/pvrusb2-hdw-internal.h:#define LOCK_TAKE(x) do { mutex_lock(&x##_mutex); x##_held = !0; } while (0)
media/video/pvrusb2/pvrusb2-hdw-internal.h:#define LOCK_GIVE(x) do { x##_held = 0; mutex_unlock(&x##_mutex); } while (0)
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->ctl_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	mutex_lock(&pvr2_unit_mtx); do {
media/video/pvrusb2/pvrusb2-hdw.c:	mutex_lock(&pvr2_unit_mtx); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->ctl_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-hdw.c:	do {
media/video/pvrusb2/pvrusb2-hdw.c:	do {
media/video/pvrusb2/pvrusb2-hdw.c:	LOCK_TAKE(hdw->ctl_lock); do {
media/video/pvrusb2/pvrusb2-debug.h:#define pvr2_trace(msk, fmt, arg...) do {if(msk & pvrusb2_debug) printk(KERN_INFO "pvrusb2: " fmt "\n", ##arg); } while (0)
media/video/pvrusb2/pvrusb2-io.c:#define BUFFER_CHECK(bp) do { \
media/video/pvrusb2/pvrusb2-io.c:#define BUFFER_CHECK(bp) do {} while(0)
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-io.c:	mutex_lock(&sp->mutex); do {
media/video/pvrusb2/pvrusb2-i2c-core.c:	LOCK_TAKE(hdw->ctl_lock); do {
media/video/pvrusb2/pvrusb2-dvb.c:	do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-ctrl.c:	LOCK_TAKE(cptr->hdw->big_lock); do {
media/video/pvrusb2/pvrusb2-context.c:	do {
media/video/pvrusb2/pvrusb2-context.c:	do {
media/video/pvrusb2/pvrusb2-context.c:	pvr2_context_enter(cp->mc_head); do {
media/video/pvrusb2/pvrusb2-util.h:    do {    \
media/video/pvrusb2/pvrusb2-util.h:    do {    \
media/video/bt819.c:			do {
media/common/saa7146_i2c.c:	do {
media/common/tuners/max2165.c:	do { \
media/common/tuners/mxl5005s.c:#define dprintk(level, arg...) do {    \
media/common/tuners/qt1010.c:	do { \
media/common/tuners/qt1010.c:	do {
media/common/tuners/tda18271-fe.c:#define tda18271_update_std(std_cfg, name) do {				\
media/common/tuners/tda18271-fe.c:#define tda18271_dump_std_item(std_cfg, name) do {			\
media/common/tuners/tuner-i2c.h:#define tuner_printk(kernlvl, i2cprops, fmt, arg...) do {		\
media/common/tuners/tuner-i2c.h:#define __tuner_warn(i2cprops, fmt, arg...) do {			\
media/common/tuners/tuner-i2c.h:#define __tuner_info(i2cprops, fmt, arg...) do {			\
media/common/tuners/tuner-i2c.h:#define __tuner_err(i2cprops, fmt, arg...) do {				\
media/common/tuners/tuner-i2c.h:#define __tuner_dbg(i2cprops, fmt, arg...) do {				\
media/common/tuners/mt2060.c:#define dprintk(args...) do { if (debug) {printk(KERN_DEBUG "MT2060: " args); printk("\n"); }} while (0)
media/common/tuners/mt2060.c:	do {
media/common/tuners/mt2060.c:	do {
media/common/tuners/tda827x.c:	do {					    \
media/common/tuners/mt20xx.c:	do {
media/common/tuners/mt20xx.c:	    do {
media/common/tuners/mt20xx.c:	do {
media/common/tuners/mt2266.c:#define dprintk(args...) do { if (debug) {printk(KERN_DEBUG "MT2266: " args); printk("\n"); }} while (0)
media/common/tuners/mt2266.c:	do {
media/common/tuners/mt2131.c:	do {
media/common/tuners/tda18212.c:do {								\
media/common/tuners/tda18271-priv.h:do {								\
media/rc/redrat3.c:	do {							\
media/rc/redrat3.c:	do {							\
media/rc/ene_ir.h:do {								\
media/rc/lirc_dev.c:	do {
media/rc/mceusb.c:	do {							\
media/rc/mceusb.c:		do { /* loop to support long pulses/spaces > 127*50us=6.35ms */
media/rc/rc-main.c:	do {								\
media/rc/ati_remote.c:#define dbginfo(dev, format, arg...) do { if (debug) dev_info(dev , format , ## arg); } while (0)
media/rc/ite-cir.h:#define ite_dbg(text, ...) do { \
media/rc/ite-cir.h:#define ite_dbg_verbose(text, ...) do {\
media/rc/fintek-cir.c:	do {
media/rc/imon.c:	do {
media/dvb/siano/smscoreapi.h:#define SMS_INIT_MSG_EX(ptr, type, src, dst, len) do { \
media/dvb/siano/smscoreapi.h:#define dprintk(kern, lvl, fmt, arg...) do {\
media/dvb/mantis/mantis_common.h:#define dprintk(y, z, format, arg...) do {								\
media/dvb/ngene/ngene-core.c:	do {
media/dvb/ngene/ngene-core.c:	do {
media/dvb/ngene/ngene-core.c:		do {
media/dvb/ttusb-budget/dvb-ttusb-budget.c:#define dprintk(x...) do { if (debug) printk(KERN_DEBUG x); } while (0)
media/dvb/bt8xx/dst_ca.c:#define dprintk(x, y, z, format, arg...) do {						\
media/dvb/bt8xx/dst.c:#define dprintk(x, y, z, format, arg...) do {				\
media/dvb/bt8xx/dvb-bt8xx.c:	do { \
media/dvb/bt8xx/bt878.c:	do { \
media/dvb/bt8xx/bt878.c:	do {
media/dvb/ttpci/ttpci-eeprom.c:#define dprintk(x...) do { printk(x); } while (0)
media/dvb/ttpci/ttpci-eeprom.c:#define dprintk(x...) do { } while (0)
media/dvb/ttpci/budget.h:	    do { if ((budget_debug & level)) { printk("%s: %s(): ", KBUILD_MODNAME, __func__); printk(args); } } while (0)
media/dvb/ttpci/av7110.h:	    do { if ((av7110_debug & level)) { printk("dvb-ttpci: %s(): ", __func__); printk(args); } } while (0)
media/dvb/pt1/pt1.c:	do {
media/dvb/pt1/pt1.c:	do {
media/dvb/pt1/pt1.c:	do {
media/dvb/dvb-usb/dib0700_devices.c:		do {
media/dvb/dvb-usb/lmedm04.c:#define l_dprintk(var, level, args...) do { \
media/dvb/dvb-usb/dibusb-common.c:			do {
media/dvb/dvb-usb/dvb-usb.h:	    do { if ((var & level)) { printk(args); } } while (0)
media/dvb/dvb-usb/it913x.c:#define l_dprintk(var, level, args...) do { \
media/dvb/dvb-usb/ttusb2.c:do {                                          \
media/dvb/dvb-usb/cxusb.c:	do {} while (!(ret = cxusb_ctrl_msg(d, CMD_POWER_ON, NULL, 0, NULL, 0)) &&
media/dvb/dvb-usb/pctv452e.c:do {							\
media/dvb/dvb-usb/dw2102.c:				do {
media/dvb/dvb-usb/dw2102.c:				do {
media/dvb/ddbridge/ddbridge-core.c:	do {
media/dvb/dvb-core/dvb_demux.c:#define dprintk_tscheck(x...) do {                              \
media/dvb/dvb-core/dvb_demux.c:	do {
media/dvb/dvb-core/dvb_demux.c:	do {
media/dvb/dvb-core/dvb_ca_en50221.c:	do {
media/dvb/dvb-core/dvb_net.c:#define dprintk(x...) do { if (dvb_net_debug) printk(x); } while (0)
media/dvb/dvb-core/dvb_net.c:	do {
media/dvb/b2c2/flexcop.h:	do { if ((b2c2_flexcop_debug & level)) printk(args); } while (0)
media/dvb/b2c2/flexcop-usb.c:	do { if ((debug & level)) printk(args); } while (0)
media/dvb/b2c2/flexcop-usb.c:#define debug_dump(b, l, method) do {\
media/dvb/b2c2/flexcop-pci.c:	do { if ((debug & level)) printk(args); } while (0)
media/dvb/dm1105/dm1105.c:			do {
media/dvb/frontends/lgdt330x.c:do { \
media/dvb/frontends/atbm8830.c:	do { \
media/dvb/frontends/dib7000p.c:#define dprintk(args...) do { if (debug) { printk(KERN_DEBUG "DiB7000P: "); printk(args); printk("\n"); } } while (0)
media/dvb/frontends/dib7000p.c:		do {
media/dvb/frontends/dib7000p.c:	do {
media/dvb/frontends/dib7000p.c:		do {
media/dvb/frontends/tda10048.c:	do { if (debug >= level)\
media/dvb/frontends/or51132.c:	do { \
media/dvb/frontends/stv6110.c:	do { \
media/dvb/frontends/s5h1432.c:#define dprintk(arg...) do {	\
media/dvb/frontends/si21xx.c:	do { \
media/dvb/frontends/lgs8gl5.c:	do { \
media/dvb/frontends/af9013_priv.h:	    do { if ((var & level)) printk(args); } while (0)
media/dvb/frontends/nxt200x.c:	do { \
media/dvb/frontends/zl10039.c:	do { \
media/dvb/frontends/cx24110.c:	do { \
media/dvb/frontends/stv090x.c:		do {
media/dvb/frontends/stv090x.c:	do {
media/dvb/frontends/stv090x.c:	do {
media/dvb/frontends/mb86a20s.c:#define rc(args...)  do {						\
media/dvb/frontends/mb86a20s.c:	do {								\
media/dvb/frontends/mb86a20s.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/tda18271c2dd.c:	do {
media/dvb/frontends/stv0900_priv.h:	do { \
media/dvb/frontends/stv090x_priv.h:#define dprintk(__y, __z, format, arg...) do {						\
media/dvb/frontends/lgs8gxx.c:	do { \
media/dvb/frontends/tda8083.c:	do { \
media/dvb/frontends/dib8000.c:#define dprintk(args...) do { if (debug) { printk(KERN_DEBUG "DiB8000: "); printk(args); printk("\n"); } } while (0)
media/dvb/frontends/dib8000.c:			do {
media/dvb/frontends/dib8000.c:	do {
media/dvb/frontends/dib8000.c:		do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:		do {
media/dvb/frontends/drxd_hard.c:		do {
media/dvb/frontends/drxd_hard.c:		do {
media/dvb/frontends/drxd_hard.c:		do {
media/dvb/frontends/drxd_hard.c:		do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/drxd_hard.c:	do {
media/dvb/frontends/s5h1420.c:#define dprintk(x...) do { \
media/dvb/frontends/stv6110x_priv.h:#define dprintk(__y, __z, format, arg...) do {						\
media/dvb/frontends/cx24116.c:	do { \
media/dvb/frontends/cx24116.c:	do {
media/dvb/frontends/stv0367.c:	do { \
media/dvb/frontends/stv0367.c:	do {
media/dvb/frontends/stv0367.c:	do {
media/dvb/frontends/stv0367.c:		do {
media/dvb/frontends/s5h1411.c:#define dprintk(arg...) do {	\
media/dvb/frontends/dib7000m.c:#define dprintk(args...) do { if (debug) { printk(KERN_DEBUG "DiB7000M: "); printk(args); printk("\n"); } } while (0)
media/dvb/frontends/dib7000m.c:		do {
media/dvb/frontends/dib7000m.c:	do {
media/dvb/frontends/dib7000m.c:		do {
media/dvb/frontends/dib0070.c:#define dprintk(args...) do { \
media/dvb/frontends/dib0070.c:#define HARD_RESET(state) do { \
media/dvb/frontends/dib0070.c:    do {
media/dvb/frontends/dib0070.c:		do {
media/dvb/frontends/itd1000.c:#define itd_dbg(args...)  do { \
media/dvb/frontends/itd1000.c:#define itd_warn(args...) do { \
media/dvb/frontends/itd1000.c:#define itd_info(args...) do { \
media/dvb/frontends/isl6423.c:#define dprintk(__y, __z, format, arg...) do {						\
media/dvb/frontends/dib9000.c:#define dprintk(args...) do { if (debug) { printk(KERN_DEBUG "DiB9000: "); printk(args); printk("\n"); } } while (0)
media/dvb/frontends/dib9000.c:#define DibAcquireLock(lock) do { if (mutex_lock_interruptible(lock) < 0) dprintk("could not get the lock"); } while (0)
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/dib9000.c:	do {
media/dvb/frontends/mt352.c:	do { \
media/dvb/frontends/tda1004x.c:	do { \
media/dvb/frontends/zl10353.c:	do { \
media/dvb/frontends/mb86a16.c:#define dprintk(x, y, z, format, arg...) do {						\
media/dvb/frontends/or51211.c:	do { \
media/dvb/frontends/sp8870.c:	do { \
media/dvb/frontends/ix2505v.c:#define dprintk(level, args...) do { \
media/dvb/frontends/stv0288.c:	do { \
media/dvb/frontends/it913x-fe.c:#define dprintk(level, args...) do { \
media/dvb/frontends/cx22700.c:	do { \
media/dvb/frontends/ec100_priv.h:	do { if ((var & level)) printk(args); } while (0)
media/dvb/frontends/drxk_hard.c:#define dprintk(level, fmt, arg...) do {			\
media/dvb/frontends/drxk_hard.c:		do {
media/dvb/frontends/drxk_hard.c:		do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/drxk_hard.c:	do {
media/dvb/frontends/dib3000mc.c:#define dprintk(args...) do { if (debug) { printk(KERN_DEBUG "DiB3000MC/P:"); printk(args); printk("\n"); } } while (0)
media/dvb/frontends/dib3000mc.c:		do {
media/dvb/frontends/l64781.c:	do { \
media/dvb/frontends/tda826x.c:	do { \
media/dvb/frontends/mt312.c:	do { \
media/dvb/frontends/dibx000_common.c:#define dprintk(args...) do { if (debug) { printk(KERN_DEBUG "DiBX000: "); printk(args); printk("\n"); } } while (0)
media/dvb/frontends/tda10086.c:	do { \
media/dvb/frontends/cx24123.c:#define info(args...) do { printk(KERN_INFO "CX24123: " args); } while (0)
media/dvb/frontends/cx24123.c:#define err(args...)  do { printk(KERN_ERR  "CX24123: " args); } while (0)
media/dvb/frontends/cx24123.c:	do { \
media/dvb/frontends/stb0899_algo.c:	do {
media/dvb/frontends/stb0899_algo.c:	do {
media/dvb/frontends/stb0899_algo.c:	do {
media/dvb/frontends/stb0899_algo.c:	do {
media/dvb/frontends/stb0899_algo.c:	do {
media/dvb/frontends/stv0299.c:	do { \
media/dvb/frontends/sp887x.c:	do { \
media/dvb/frontends/cx24113.c:#define cx_info(args...) do { printk(KERN_INFO "CX24113: " args); } while (0)
media/dvb/frontends/cx24113.c:#define cx_err(args...)  do { printk(KERN_ERR  "CX24113: " args); } while (0)
media/dvb/frontends/cx24113.c:	do { \
media/dvb/frontends/cx24113.c:	do {
media/dvb/frontends/cx24113.c:	do {
media/dvb/frontends/au8522_dig.c:	do { if (debug)\
media/dvb/frontends/zl10036.c:	do { if (zl10036_debug & level) printk(KERN_DEBUG "zl10036: " args); \
media/dvb/frontends/ds3000.c:	do { \
media/dvb/frontends/stb0899_priv.h:#define dprintk(x, y, z, format, arg...) do {						\
media/dvb/frontends/stb6000.c:	do { \
media/dvb/frontends/stv0900_sw.c:	do {
media/dvb/frontends/stv0900_sw.c:	do {
media/dvb/frontends/stv0900_sw.c:	do {
media/dvb/frontends/stb6100.c:#define dprintk(x, y, z, format, arg...) do {						\
media/dvb/frontends/s921.c:#define rc(args...)  do {						\
media/dvb/frontends/s921.c:	do {								\
media/dvb/frontends/dib3000mb_priv.h:    do { if ((debug & level)) { printk(args); } } while (0)
media/dvb/frontends/dib0090.c:#define dprintk(args...) do { \
media/dvb/frontends/dib0090.c:#define HARD_RESET(state) do {  if (cfg->reset) {  if (cfg->sleep) cfg->sleep(fe, 0); msleep(10);  cfg->reset(fe, 1); msleep(10);  cfg->reset(fe, 0); msleep(10);  }  } while (0)
media/dvb/frontends/dib0090.c:	do {
media/dvb/frontends/dib0090.c:		do {
media/dvb/frontends/dib0090.c:		do {
media/dvb/frontends/dib0090.c:		do {
media/dvb/frontends/dib0090.c:	do {
media/radio/si470x/radio-si470x-common.c:		do {
media/radio/si470x/radio-si470x-common.c:		do {
media/radio/si4713-i2c.c:	do {
media/radio/radio-trust.c:#define TR_DELAY do { inb(tr->io); inb(tr->io); inb(tr->io); } while (0)
media/radio/radio-wl1273.c:	do {
memstick/host/jmb38x_ms.c:		do {
memstick/host/jmb38x_ms.c:		do {
memstick/host/jmb38x_ms.c:		do {
memstick/host/tifm_ms.c:	do {
memstick/host/tifm_ms.c:			do {
memstick/host/tifm_ms.c:		do {
memstick/host/tifm_ms.c:		do {
memstick/host/r592.h:	do { \
message/fusion/mptscsih.c:#define ADD_INDEX_LOG(req_ent)	do { } while(0)
message/fusion/mptfc.c:	do {
message/fusion/mptbase.c:	do {
message/fusion/mptbase.c:		do {
mfd/wm8350-core.c:#define dump(regs, src) do { \
mfd/ezx-pcap.c:	do {
mfd/ab8500-gpadc.c:	do {
mfd/max8925-core.c:		do {
mfd/twl4030-madc.c:	do {
mfd/ab8500-core.c:		do {
misc/apds9802als.c:	do {
misc/eeprom/at24.c:	do {
misc/eeprom/at24.c:	do {
misc/eeprom/at25.c:	do {
misc/eeprom/at25.c:		do {
misc/sgi-gru/grukservices.c:	do {
misc/sgi-gru/grukservices.c:		do {
misc/sgi-gru/grukservices.c:	do {
misc/sgi-gru/gru_instructions.h:		do {							\
misc/sgi-gru/gru_instructions.h:		do {							\
misc/sgi-gru/grutables.h:#define STAT(id)	do {						\
misc/sgi-gru/grutables.h:	do {								\
misc/ti-st/st_kim.c:			do {
misc/ti-st/st_kim.c:	do {
misc/ti-st/st_core.c:	do {			/* come back if st_tx_wakeup is set */
misc/sgi-xp/xpc_main.c:	do {
misc/sgi-xp/xpc_main.c:	do {
misc/sgi-xp/xpc_sn2.c:		do {
misc/sgi-xp/xpc_sn2.c:	do {
misc/sgi-xp/xpc_sn2.c:	do {
misc/sgi-xp/xpc_sn2.c:	do {
misc/cb710/core.c:	do {
misc/cb710/sgbuf2.c:	do {
misc/cb710/sgbuf2.c:	do {
misc/ibmasm/ibmasm.h:	do {							\
misc/ibmasm/ibmasm.h:#define ibmasm_register_uart(sp)	do { } while(0)
misc/ibmasm/ibmasm.h:#define ibmasm_unregister_uart(sp)	do { } while(0)
misc/ioc4.c:	do {
misc/ioc4.c:	do {
misc/ioc4.c:	do {
misc/kgdbts.c:#define v1printk(a...) do { \
misc/kgdbts.c:#define v2printk(a...) do { \
misc/kgdbts.c:#define eprintk(a...) do { \
misc/vmw_balloon.c:	do {
misc/hpilo.c:	do {
misc/iwmc3200top/debugfs.c:#define DEBUGFS_ADD(name, parent) do {					\
misc/iwmc3200top/debugfs.c:#define DEBUGFS_RM(name)  do {		\
misc/iwmc3200top/log.h:do {									\
misc/iwmc3200top/log.h:do {									\
misc/iwmc3200top/log.h:do {									\
misc/iwmc3200top/log.h:do {									\
misc/iwmc3200top/log.h:do {									\
misc/iwmc3200top/log.h:do {									\
misc/c2port/core.c:	do {
misc/c2port/core.c:	do {
misc/c2port/core.c:	do {
misc/c2port/core.c:	do {
misc/pti.c:	do {
misc/altera-stapl/altera.c:	do {
mmc/host/pxamci.c:		do {
mmc/host/msm_sdcc.c:	do {
mmc/host/msm_sdcc.c:	do {
mmc/host/msm_sdcc.c:	do {
mmc/host/s3cmci.c:	do {					  \
mmc/host/mmci.c:	do {
mmc/host/mmci.c:	do {
mmc/host/mmci.c:	do {
mmc/host/mmci.c:	do {
mmc/host/mvsdio.c:		do {
mmc/host/vub300.c:	do {
mmc/host/cb710-mmc.c:		do {
mmc/host/au1xmmc.c:#define DBG(fmt, idx, args...) do {} while (0)
mmc/host/sdhci-pci.c:	do {
mmc/host/atmel-mci.c:	do {
mmc/host/atmel-mci.c:	do {
mmc/host/atmel-mci.c:	do {
mmc/host/atmel-mci.c:	do {
mmc/host/mxcmmc.c:	do {
mmc/host/tmio_mmc_pio.c:	do { \
mmc/host/tmio_mmc_pio.c:#define pr_debug_status(s)  do { } while (0)
mmc/host/omap_hsmmc.c:		do {
mmc/host/omap_hsmmc.c:	do {
mmc/host/dw_mmc.c:	do {
mmc/host/dw_mmc.c:	do {
mmc/host/dw_mmc.c:		do {
mmc/host/dw_mmc.c:	do {
mmc/host/dw_mmc.c:		do {
mmc/host/dw_mmc.c:	do {
mmc/host/dw_mmc.c:	do {
mmc/host/wbsd.c:	do {
mmc/host/wbsd.c:	do {
mmc/host/sdhci.c:	do {
mmc/host/imxmmc.c:	do {
mmc/host/jz4740_mmc.c:	do {
mmc/host/jz4740_mmc.c:	do {
mmc/host/jz4740_mmc.c:	do {
mmc/core/sdio_cis.c:	do {
mmc/core/mmc_ops.c:	do {
mmc/core/sdio_irq.c:	do {
mmc/core/core.c:		do {
mmc/core/core.c:	do {
mmc/core/core.c:	do {
mmc/card/sdio_uart.c:	do {
mmc/card/block.c:		do {
mmc/card/block.c:	do {
mmc/card/queue.c:	do {
mmc/card/mmc_test.c:	do {
mmc/card/mmc_test.c:	do {
mtd/ftl.c:    do {
mtd/ftl.c:    do {
mtd/mtdcore.c:	do {
mtd/rfd_ftl.c:	do {
mtd/rfd_ftl.c:	do {
mtd/nftlcore.c:	do {
mtd/nftlcore.c:	do {
mtd/ar7part.c:	do { /* Try 10 blocks starting from master->erasesize */
mtd/inftlcore.c:	do {
mtd/inftlcore.c:	do {
mtd/nand/cafe_nand.c:#define cafe_dev_dbg(dev, args...) do { if (debug) dev_dbg(dev, ##args); } while(0)
mtd/nand/nand_base.c:		do {
mtd/nand/nand_base.c:	do {
mtd/nand/nandsim.c:	do { if (log) printk(KERN_DEBUG NS_OUTPUT_PREFIX " log: " args); } while(0)
mtd/nand/nandsim.c:	do { if (dbg) printk(KERN_DEBUG NS_OUTPUT_PREFIX " debug: " args); } while(0)
mtd/nand/nandsim.c:	do { printk(KERN_WARNING NS_OUTPUT_PREFIX " warning: " args); } while(0)
mtd/nand/nandsim.c:	do { printk(KERN_ERR NS_OUTPUT_PREFIX " error: " args); } while(0)
mtd/nand/nandsim.c:	do { printk(KERN_INFO NS_OUTPUT_PREFIX " " args); } while(0)
mtd/nand/nandsim.c:        do { if (do_delays) udelay(us); } while(0)
mtd/nand/nandsim.c:        do { if (do_delays) mdelay(us); } while(0)
mtd/nand/nandsim.c:	do {
mtd/nand/nandsim.c:	do {
mtd/nand/nandsim.c:	do {
mtd/nand/nandsim.c:	do {
mtd/nand/davinci_nand.c:	do {
mtd/nand/mxc_nand.c:	do {
mtd/nand/jz4740_nand.c:	do {
mtd/nand/jz4740_nand.c:	do {
mtd/nand/denali.c:	do {
mtd/nand/denali.c:		do {
mtd/nand/mpc5121_nfc.c:		do {
mtd/nand/nand_bcm_umi.h:	do {
mtd/nand/fsmc_nand.c:	do {
mtd/nand/omap2.c:		do {
mtd/nand/omap2.c:		do {
mtd/nand/omap2.c:		do {
mtd/maps/vmu-flash.c:	do {
mtd/maps/vmu-flash.c:	do {
mtd/maps/vmu-flash.c:		do {
mtd/maps/pismo.c:	do {
mtd/maps/wr_sbc82xx_flash.c:do {								\
mtd/maps/dc21285.c:#define nw_en_write() do { } while (0)
mtd/maps/gpio-addr-flash.c:	do {
mtd/maps/gpio-addr-flash.c:	do {
mtd/maps/gpio-addr-flash.c:	do {
mtd/maps/pcmciamtd.c:	do {
mtd/devices/m25p80.c:	do {
mtd/devices/phram.c:#define parse_err(fmt, args...) do {	\
mtd/devices/pmc551.c:	do {
mtd/devices/pmc551.c:		do {
mtd/devices/pmc551.c:	do {
mtd/devices/docg3.c:	do {
mtd/devices/sst25l.c:	do {
mtd/devices/block2mtd.c:#define parse_err(fmt, args...) do {	\
mtd/chips/cfi_probe.c:do { \
mtd/chips/cfi_probe.c:do { \
mtd/chips/cfi_probe.c:do { \
mtd/chips/cfi_probe.c:#define xip_disable()			do { } while (0)
mtd/chips/cfi_probe.c:#define xip_allowed(base, map)		do { } while (0)
mtd/chips/cfi_probe.c:#define xip_enable(base, map, cfi)	do { } while (0)
mtd/chips/cfi_probe.c:#define xip_disable_qry(base, map, cfi) do { } while (0)
mtd/chips/jedec_probe.c:	do {
mtd/chips/cfi_cmdset_0001.c:	do {
mtd/chips/cfi_cmdset_0001.c:			do {
mtd/chips/cfi_cmdset_0001.c:	do {
mtd/chips/cfi_cmdset_0001.c:	do {
mtd/chips/cfi_cmdset_0002.c:	do {
mtd/chips/cfi_cmdset_0002.c:			do {
mtd/chips/cfi_cmdset_0002.c:do {  \
mtd/chips/cfi_cmdset_0002.c:do {  \
mtd/cmdlinepart.c:#define dbg(x) do { printk("DEBUG-CMDLINE-PART: "); printk x; } while(0)
mtd/mtdswap.c:		do {
mtd/mtdpart.c:#define put_partition_parser(p) do { module_put((p)->owner); } while (0)
mtd/ubi/cdev.c:	do {
mtd/ubi/debug.h:#define ubi_assert(expr)  do {                                               \
mtd/ubi/debug.h:#define ubi_assert(expr)  do {                                               \
mtd/ubi/debug.h:#define dbg_err(fmt, ...) do {                                               \
mtd/ubi/debug.h:#define ubi_dbg_msg(fmt, ...) do {                                           \
mtd/lpddr/lpddr_cmds.c:	do {
mtd/lpddr/lpddr_cmds.c:	do {
mtd/onenand/samsung.c:	do {
mtd/onenand/onenand_sim.c:do {									\
net/tun.c:do {								\
net/tun.c:do {								\
net/tun.c:do {								\
net/tun.c:do {								\
net/hippi/rrunner.c:	do {
net/hippi/rrunner.c:		do {
net/ppp/ppp_mppe.h:    do {                                       \
net/ppp/ppp_mppe.h:    do {                                       \
net/ppp/ppp_async.c:#define PUT_BYTE(ap, buf, c, islcp)	do {		\
net/ppp/ppp_generic.c:#define ppp_lock(ppp)		do { ppp_xmit_lock(ppp); \
net/ppp/ppp_generic.c:#define ppp_unlock(ppp)		do { ppp_recv_unlock(ppp); \
net/xen-netback/xenbus.c:	do {
net/xen-netback/netback.c:	do {
net/xen-netback/netback.c:	do {
net/xen-netback/netback.c:		do {
net/xen-netback/netback.c:	do {
net/xen-netback/netback.c:	do {
net/caif/caif_spi.c:	do {
net/caif/caif_spi.c:	do {
net/caif/caif_spi.c:	do {
net/caif/caif_hsi.c:	do {
net/caif/caif_hsi.c:	do {
net/caif/caif_hsi.c:		do {
net/caif/caif_shmcore.c:	do {
net/caif/caif_shmcore.c:		do {
net/loopback.c:		do {
net/xen-netfront.c:#define xennet_sysfs_delif(dev) do { } while (0)
net/xen-netfront.c:	do {
net/xen-netfront.c:	do {
net/xen-netfront.c:		do {
net/wimax/i2400m/debugfs.c:do {									\
net/wimax/i2400m/usb.c:do {									\
net/wimax/i2400m/sdio.c:do {									\
net/slip/slip.c:	do {
net/wireless/wl1251/debugfs.c:	do {								\
net/wireless/wl1251/event.c:	do {
net/wireless/wl1251/wl1251.h:	do { \
net/wireless/wl1251/wl1251.h:	do { \
net/wireless/wl1251/wl1251.h:	do { \
net/wireless/wl1251/main.c:	do {
net/wireless/mwl8k.c:#define MWL8K_CMDNAME(x)	case MWL8K_CMD_##x: do {\
net/wireless/mwl8k.c:	do {
net/wireless/mwl8k.c:	do {
net/wireless/ray_cs.c:		do {
net/wireless/ray_cs.c:		do {
net/wireless/ray_cs.c:	do {
net/wireless/brcm80211/brcmsmac/dma.c:	do { \
net/wireless/brcm80211/brcmsmac/dma.c:	do { \
net/wireless/brcm80211/brcmsmac/types.h:do {						\
net/wireless/brcm80211/brcmsmac/types.h:#define W_REG(r, v) do { \
net/wireless/brcm80211/brcmsmac/d11.h:	do { \
net/wireless/brcm80211/brcmsmac/phy/phy_cmn.c:	do {
net/wireless/brcm80211/brcmsmac/phy/phy_cmn.c:	do {
net/wireless/brcm80211/brcmsmac/phy/phy_n.c:	do {
net/wireless/brcm80211/brcmsmac/phy/phy_n.c:		do {
net/wireless/brcm80211/brcmsmac/phy/phy_n.c:	do {
net/wireless/brcm80211/brcmsmac/phy/phy_lcn.c:		do {
net/wireless/brcm80211/brcmsmac/phy/phy_lcn.c:	do {
net/wireless/brcm80211/brcmsmac/aiutils.c:		do {
net/wireless/brcm80211/brcmsmac/aiutils.c:			do {
net/wireless/brcm80211/brcmfmac/wl_cfg80211.h:do {								\
net/wireless/brcm80211/brcmfmac/wl_cfg80211.h:do {								\
net/wireless/brcm80211/brcmfmac/wl_cfg80211.h:do {								\
net/wireless/brcm80211/brcmfmac/wl_cfg80211.h:do {								\
net/wireless/brcm80211/brcmfmac/wl_cfg80211.h:do {								\
net/wireless/brcm80211/brcmfmac/dhd_dbg.h:do {									\
net/wireless/brcm80211/brcmfmac/bcmsdh.c:	do {
net/wireless/brcm80211/brcmfmac/bcmsdh.c:	do {
net/wireless/brcm80211/brcmfmac/dhd_cdc.c:	do {
net/wireless/brcm80211/brcmfmac/wl_cfg80211.c:	do {
net/wireless/brcm80211/brcmfmac/dhd_sdio.c:	do {
net/wireless/brcm80211/brcmfmac/dhd_sdio.c:	do {
net/wireless/brcm80211/brcmfmac/dhd_sdio.c:		do {
net/wireless/b43legacy/debugfs.c:	do {							\
net/wireless/b43legacy/debugfs.c:#define add_dyn_dbg(name, id, initstate) do {		\
net/wireless/b43legacy/debugfs.c:	do {							\
net/wireless/b43legacy/phy.c:	do {
net/wireless/b43legacy/phy.c:	do {
net/wireless/b43legacy/radio.c:	do {							\
net/wireless/b43legacy/radio.c:	do {							\
net/wireless/b43legacy/radio.c:	do {								\
net/wireless/b43legacy/radio.c:	do {								\
net/wireless/b43legacy/radio.c:	do {							\
net/wireless/b43legacy/radio.c:	do {							\
net/wireless/b43legacy/b43legacy.h:	do {								\
net/wireless/b43legacy/b43legacy.h:# define B43legacy_BUG_ON(x)	do { /* nothing */ } while (0)
net/wireless/b43legacy/b43legacy.h:#define b43legacy_set_status(wldev, stat)	do {		\
net/wireless/b43legacy/b43legacy.h:# define b43legacydbg(wl, fmt...) do { /* nothing */ } while (0)
net/wireless/b43legacy/dma.c:		do {
net/wireless/b43legacy/main.c:		do {
net/wireless/b43legacy/main.c:		do {
net/wireless/b43legacy/main.c:	do {
net/wireless/prism54/islpci_mgt.h:#define K_DEBUG(f, m, args...) do { if(f & m) printk(KERN_DEBUG args); } while(0)
net/wireless/mwifiex/debugfs.c:#define MWIFIEX_DFS_ADD_FILE(name) do {                                 \
net/wireless/mwifiex/pcie.c:	do {
net/wireless/mwifiex/pcie.c:		do {
net/wireless/mwifiex/11n_aggr.c:	do {
net/wireless/mwifiex/wmm.c:		do {
net/wireless/mwifiex/wmm.c:				do {
net/wireless/mwifiex/wmm.c:	do {
net/wireless/mwifiex/sdio.h:#define MP_TX_AGGR_BUF_PUT(a, payload, pkt_len, port) do {		\
net/wireless/mwifiex/sdio.h:#define MP_TX_AGGR_BUF_RESET(a) do {					\
net/wireless/mwifiex/sdio.h:#define MP_RX_AGGR_SETUP(a, skb, port) do {				\
net/wireless/mwifiex/sdio.h:#define MP_RX_AGGR_BUF_RESET(a) do {					\
net/wireless/mwifiex/sdio.c:	do {
net/wireless/mwifiex/sdio.c:	do {
net/wireless/mwifiex/main.c:	do {
net/wireless/iwlegacy/iwl-io.h:	do {
net/wireless/iwlegacy/iwl-io.h:	do {
net/wireless/iwlegacy/iwl3945-base.c:#define CHK(test, flag)	do { \
net/wireless/iwlegacy/iwl-debug.h:do {									\
net/wireless/iwlegacy/iwl-debug.h:do {									\
net/wireless/iwlegacy/iwl-debug.h:do {									\
net/wireless/iwlegacy/iwl-debug.h:do {									\
net/wireless/iwlegacy/iwl-debugfs.c:#define DEBUGFS_ADD_FILE(name, parent, mode) do {			\
net/wireless/iwlegacy/iwl-debugfs.c:#define DEBUGFS_ADD_BOOL(name, parent, ptr) do {			\
net/wireless/iwlegacy/iwl-debugfs.c:#define DEBUGFS_ADD_X32(name, parent, ptr) do {				\
net/wireless/iwlegacy/iwl4965-base.c:#define CHK(test, flag)	do { \
net/wireless/libertas/debugfs.c:		do {
net/wireless/libertas/defs.h:do { if ((lbs_debug & (grp)) == (grp)) \
net/wireless/libertas/defs.h:#define LBS_DEB_LL(grp, grpnam, fmt, args...) do {} while (0)
net/wireless/libertas/defs.h:#define lbs_deb_hex(grp,prompt,buf,len)	do {} while (0)
net/wireless/libertas/if_usb.c:#define lbs_deb_usb2(...) do { if (INSANEDEBUG) lbs_deb_usbd(__VA_ARGS__); } while (0)
net/wireless/libertas/if_usb.c:	do {
net/wireless/libertas/if_usb.c:	do {
net/wireless/libertas/if_usb.c:		do {
net/wireless/rtlwifi/rtl8192se/def.h:do {								\
net/wireless/rtlwifi/rtl8192se/fw.h:	do {							\
net/wireless/rtlwifi/rtl8192se/fw.h:	do {							\
net/wireless/rtlwifi/rtl8192se/fw.h:	do {							\
net/wireless/rtlwifi/rtl8192se/phy.c:	do {
net/wireless/rtlwifi/rtl8192se/phy.c:	do {
net/wireless/rtlwifi/rtl8192se/phy.c:				do {
net/wireless/rtlwifi/rtl8192se/phy.c:	do {
net/wireless/rtlwifi/rtl8192se/phy.c:	do {
net/wireless/rtlwifi/rtl8192se/fw.c:	do {
net/wireless/rtlwifi/rtl8192se/fw.c:	do {
net/wireless/rtlwifi/rtl8192se/fw.c:		do {
net/wireless/rtlwifi/rtl8192se/fw.c:		do {
net/wireless/rtlwifi/rtl8192se/fw.c:		do {
net/wireless/rtlwifi/rtl8192se/fw.c:		do {
net/wireless/rtlwifi/rtl8192se/fw.c:	do {
net/wireless/rtlwifi/rtl8192se/fw.c:	do {
net/wireless/rtlwifi/rtl8192se/hw.c:	do {
net/wireless/rtlwifi/rtl8192c/fw_common.c:	do {
net/wireless/rtlwifi/rtl8192c/fw_common.c:	do {
net/wireless/rtlwifi/rtl8192c/phy_common.c:	do {
net/wireless/rtlwifi/rtl8192c/phy_common.c:	do {
net/wireless/rtlwifi/rtl8192c/phy_common.c:			do {
net/wireless/rtlwifi/rtl8192c/phy_common.c:	do {
net/wireless/rtlwifi/usb.h:	do {							\
net/wireless/rtlwifi/usb.h:	do { \
net/wireless/rtlwifi/rtl8192de/phy.c:	do {
net/wireless/rtlwifi/rtl8192de/phy.c:	do {
net/wireless/rtlwifi/rtl8192de/phy.c:	do {
net/wireless/rtlwifi/rtl8192de/phy.c:			do {
net/wireless/rtlwifi/rtl8192de/fw.c:	do {
net/wireless/rtlwifi/rtl8192de/fw.c:	do {
net/wireless/rtlwifi/rtl8192de/trx.h:do {							\
net/wireless/rtlwifi/rtl8192de/hw.c:	do {
net/wireless/rtlwifi/rtl8192de/hw.c:	do {
net/wireless/rtlwifi/rtl8192cu/phy.c:			do {
net/wireless/rtlwifi/rtl8192cu/mac.c:	do {
net/wireless/rtlwifi/rtl8192cu/hw.c:	do {
net/wireless/rtlwifi/rtl8192cu/hw.c:	do {
net/wireless/rtlwifi/rtl8192cu/hw.c:	do {
net/wireless/rtlwifi/rtl8192ce/phy.c:				do {
net/wireless/rtlwifi/rtl8192ce/trx.h:do {							\
net/wireless/rtlwifi/rtl8192ce/hw.c:	do {
net/wireless/rtlwifi/rtl8192ce/hw.c:	do {
net/wireless/rtlwifi/debug.h:	do {						\
net/wireless/rtlwifi/debug.h:	do { \
net/wireless/rtlwifi/debug.h:	do {						\
net/wireless/rtlwifi/debug.h:	do {\
net/wireless/orinoco/fw.h:#define orinoco_cache_fw(priv, ap) do { } while (0)
net/wireless/orinoco/fw.h:#define orinoco_uncache_fw(priv) do { } while (0)
net/wireless/orinoco/orinoco_usb.c:	do { if (debug) printk(KERN_DEBUG PFX "%s: " format "\n", \
net/wireless/orinoco/orinoco_usb.c:	do { printk(KERN_ERR PFX format "\n", ## arg); } while (0)
net/wireless/orinoco/orinoco.h:#define DEBUG(n, args...) do { \
net/wireless/orinoco/orinoco.h:#define DEBUG(n, args...) do { } while (0)
net/wireless/orinoco/hermes.c:#define DMSG(stuff...) do {printk(KERN_DEBUG "hermes @ %p: " , hw->iobase); \
net/wireless/orinoco/hermes.c:#define DEBUG(lvl, stuff...) do { } while (0)
net/wireless/orinoco/main.c:#define orinoco_register_pm_notifier(priv) do { } while (0)
net/wireless/orinoco/main.c:#define orinoco_unregister_pm_notifier(priv) do { } while (0)
net/wireless/at76c50x-usb.c:do {									\
net/wireless/at76c50x-usb.c:do {									\
net/wireless/at76c50x-usb.c:	do {
net/wireless/at76c50x-usb.c:	do {
net/wireless/at76c50x-usb.c:	do {
net/wireless/adm8211.h:do { 									   \
net/wireless/adm8211.h:do {									\
net/wireless/adm8211.h:do {								\
net/wireless/iwlwifi/iwl-io.h:	do {							\
net/wireless/iwlwifi/iwl-io.c:	do {
net/wireless/iwlwifi/iwl-io.c:	do {
net/wireless/iwlwifi/iwl-eeprom.c:	do {
net/wireless/iwlwifi/iwl-debug.h:do {									\
net/wireless/iwlwifi/iwl-debug.h:do {									\
net/wireless/iwlwifi/iwl-debug.h:do {									\
net/wireless/iwlwifi/iwl-debug.h:do {                                            			\
net/wireless/iwlwifi/iwl-agn.c:#define CHK(test, flag)	do { \
net/wireless/iwlwifi/iwl-debugfs.c:#define DEBUGFS_ADD_FILE(name, parent, mode) do {			\
net/wireless/iwlwifi/iwl-debugfs.c:#define DEBUGFS_ADD_BOOL(name, parent, ptr) do {			\
net/wireless/iwlwifi/iwl-debugfs.c:#define DEBUGFS_ADD_X32(name, parent, ptr) do {				\
net/wireless/iwlwifi/iwl-debugfs.c:#define DEBUGFS_ADD_U32(name, parent, ptr, mode) do {			\
net/wireless/iwlwifi/iwl-trans-pcie.c:#define DEBUGFS_ADD_FILE(name, parent, mode) do {			\
net/wireless/ipw2x00/ipw2200.c:#define ipw_write8(ipw, ofs, val) do { \
net/wireless/ipw2x00/ipw2200.c:#define ipw_write16(ipw, ofs, val) do { \
net/wireless/ipw2x00/ipw2200.c:#define ipw_write32(ipw, ofs, val) do { \
net/wireless/ipw2x00/ipw2200.c:#define ipw_write_indirect(a, b, c, d) do { \
net/wireless/ipw2x00/ipw2200.c:	do {
net/wireless/ipw2x00/ipw2200.c:	do {
net/wireless/ipw2x00/ipw2200.c:#define free_firmware() do {} while (0)
net/wireless/ipw2x00/ipw2200.h:do { if (ipw_debug_level & (level)) \
net/wireless/ipw2x00/ipw2200.h:do { if (ipw_debug_level & (level)) \
net/wireless/ipw2x00/ipw2200.h:#define IPW_LL_DEBUG(level, fmt, args...) do {} while (0)
net/wireless/ipw2x00/ipw2100.h:#define INIT_STAT(x) do {  \
net/wireless/ipw2x00/ipw2100.h:#define SET_STAT(x,y) do { \
net/wireless/ipw2x00/ipw2100.h:#define INC_STAT(x) do { if (++(x)->value > (x)->hi) (x)->hi = (x)->value; } \
net/wireless/ipw2x00/ipw2100.h:#define DEC_STAT(x) do { if (--(x)->value < (x)->lo) (x)->lo = (x)->value; } \
net/wireless/ipw2x00/libipw.h:do { if (libipw_debug_level & (level)) \
net/wireless/ipw2x00/libipw.h:#define LIBIPW_DEBUG(level, fmt, args...) do {} while (0)
net/wireless/ipw2x00/ipw2100.c:do { \
net/wireless/ipw2x00/ipw2100.c:#define IPW_DEBUG(level, message...) do {} while (0)
net/wireless/ipw2x00/ipw2100.c:	do {
net/wireless/ipw2x00/ipw2100.c:	do {
net/wireless/ipw2x00/ipw2100.c:	do {
net/wireless/rt2x00/rt2x00.h:	do { } while (0)
net/wireless/libertas_tf/deb_defs.h:do { if ((lbtf_debug & (grp)) == (grp)) \
net/wireless/libertas_tf/deb_defs.h:#define LBTF_DEB_LL(grp, grpnam, fmt, args...) do {} while (0)
net/wireless/libertas_tf/deb_defs.h:#define lbtf_deb_hex(grp, prompt, buf, len)	do {} while (0)
net/wireless/libertas_tf/if_usb.c:#define lbtf_deb_usb2(...) do { if (INSANEDEBUG) lbtf_deb_usbd(__VA_ARGS__); } while (0)
net/wireless/libertas_tf/if_usb.c:	do {
net/wireless/libertas_tf/if_usb.c:	do {
net/wireless/libertas_tf/if_usb.c:		do {
net/wireless/zd1201.c:	do {
net/wireless/p54/p54usb.c:	do {\
net/wireless/p54/p54usb.c:	do {\
net/wireless/p54/p54.h:do {								\
net/wireless/rtl818x/rtl8187/dev.c:	do {
net/wireless/rtl818x/rtl8187/dev.c:	do {
net/wireless/b43/debugfs.c:	do {							\
net/wireless/b43/debugfs.c:#define add_dyn_dbg(name, id, initstate) do {		\
net/wireless/b43/debugfs.c:	do {							\
net/wireless/b43/tables_phy_ht.c:#define httab_upload(dev, offset, data) do { \
net/wireless/b43/pio.c:#define destroy_queue_tx(pio, queue) do {				\
net/wireless/b43/pio.c:#define destroy_queue_rx(pio, queue) do {				\
net/wireless/b43/dma.c:#define destroy_ring(dma, ring) do {				\
net/wireless/b43/dma.c:		do {
net/wireless/b43/phy_g.c:	do {							\
net/wireless/b43/phy_g.c:	do {							\
net/wireless/b43/phy_g.c:	do {								\
net/wireless/b43/phy_g.c:	do {								\
net/wireless/b43/phy_g.c:	do {							\
net/wireless/b43/phy_g.c:	do {							\
net/wireless/b43/phy_g.c:	do {
net/wireless/b43/lo.c:	do {
net/wireless/b43/lo.c:		do {
net/wireless/b43/tables_phy_lcn.c:#define lcntab_upload(dev, offset, data) do { \
net/wireless/b43/tables_nphy.c:#define ntab_upload(dev, offset, data) do { \
net/wireless/b43/tables_nphy.c:#define ntab_upload_r3(dev, offset, data) do { \
net/wireless/b43/b43.h:#define b43_set_status(wldev, stat)	do {			\
net/wireless/adm8211.c:do {								\
net/wireless/zd1211rw/zd_usb.c:#define print_id(udev) do { } while (0)
net/wireless/zd1211rw/zd_def.h:#  define dev_dbg_f_limit(dev, fmt, args...) do { \
net/wireless/zd1211rw/zd_def.h:#  define dev_dbg_f(dev, fmt, args...) do { (void)(dev); } while (0)
net/wireless/zd1211rw/zd_def.h:#  define dev_dbg_f_limit(dev, fmt, args...) do { (void)(dev); } while (0)
net/wireless/zd1211rw/zd_def.h:#  define dev_dbg_f_cond(dev, cond, fmt, args...) do { (void)(dev); } while (0)
net/wireless/zd1211rw/zd_def.h:do { \
net/wireless/zd1211rw/zd_def.h:#  define ZD_ASSERT(x) do { } while (0)
net/wireless/zd1211rw/zd_def.h:#  define ZD_MEMCLEAR(pointer, size) do { } while (0)
net/wireless/airo.c:		do {
net/wireless/airo.c:	if (rc == SUCCESS) do {
net/wireless/airo.c:	do {
net/wireless/airo.c:	do {
net/wireless/airo.c:	if (rc == SUCCESS) do {
net/wireless/airo.c:	do {
net/wireless/airo.c:	do {
net/wireless/wl12xx/debugfs.c:	do {								\
net/wireless/wl12xx/io.c:	do {
net/wireless/wl12xx/wl12xx.h:	do { \
net/wireless/wl12xx/wl12xx.h:	do { \
net/wireless/wl12xx/wl12xx.h:	do { \
net/wireless/wl12xx/cmd.c:	do {
net/wireless/wl12xx/main.c:	do {
net/wireless/wl12xx/main.c:	do {
net/wireless/iwmc3200wifi/debugfs.c:do {							\
net/wireless/iwmc3200wifi/hal.h:do {									  \
net/wireless/iwmc3200wifi/hal.h:do {									  \
net/wireless/iwmc3200wifi/hal.h:do {									  \
net/wireless/iwmc3200wifi/debug.h:do {									     \
net/wireless/iwmc3200wifi/debug.h:do {									     \
net/wireless/ath/ath5k/base.c:	do {
net/wireless/ath/ath5k/base.c:	do {
net/wireless/ath/ath5k/phy.c:		do {
net/wireless/ath/ath5k/phy.c:		do {
net/wireless/ath/ath5k/ath5k.h:#define ATH5K_PRINTK_LIMIT(_sc, _level, _fmt, ...) do { \
net/wireless/ath/ath5k/ath5k.h:#define AR5K_Q_ENABLE_BITS(_reg, _queue) do {				\
net/wireless/ath/ath5k/ath5k.h:#define AR5K_Q_DISABLE_BITS(_reg, _queue) do {				\
net/wireless/ath/ath5k/ath5k.h:#define AR5K_REG_WAIT(_i) do {						\
net/wireless/ath/ath5k/ath5k.h:#define AR5K_ASSERT_ENTRY(_e, _s) do {		\
net/wireless/ath/ath5k/dma.c:		do {
net/wireless/ath/ath5k/dma.c:			do {
net/wireless/ath/ath5k/debug.h:#define ATH5K_DBG(_sc, _m, _fmt, ...) do { \
net/wireless/ath/ath5k/debug.h:#define ATH5K_DBG_UNLIMIT(_sc, _m, _fmt, ...) do { \
net/wireless/ath/ath5k/eeprom.h:#define AR5K_EEPROM_READ(_o, _v) do {			\
net/wireless/ath/ath6kl/txrx.c:	do {
net/wireless/ath/ath6kl/main.c:	do {
net/wireless/ath/ath9k/htc_drv_beacon.c:		do {
net/wireless/ath/ath9k/htc_drv_beacon.c:	do {
net/wireless/ath/ath9k/wmi.c:	do {
net/wireless/ath/ath9k/debug.c:	do {								\
net/wireless/ath/ath9k/debug.c:do {									\
net/wireless/ath/ath9k/debug.c:do {									\
net/wireless/ath/ath9k/common.c:	do {
net/wireless/ath/ath9k/htc_drv_txrx.c:#define ATH9K_HTC_INIT_TXQ(subtype) do {			\
net/wireless/ath/ath9k/htc_drv_txrx.c:	do {
net/wireless/ath/ath9k/ar5008_phy.c:#define ATH_ALLOC_BANK(bank, size) do { \
net/wireless/ath/ath9k/ar5008_phy.c:#define ATH_FREE_BANK(bank) do { \
net/wireless/ath/ath9k/common.h:#define ATH_RSSI_LPF(x, y) do {                     			\
net/wireless/ath/ath9k/recv.c:	do {
net/wireless/ath/ath9k/xmit.c:	do {
net/wireless/ath/ath9k/xmit.c:	do {
net/wireless/ath/ath9k/wmi.h:	do {								\
net/wireless/ath/ath9k/wmi.h:	do {								\
net/wireless/ath/ath9k/htc_drv_debug.c:	do {								\
net/wireless/ath/ath9k/htc_drv_debug.c:	do {								\
net/wireless/ath/ath9k/htc_drv_debug.c:	do {								\
net/wireless/ath/ath9k/debug.h:#define TX_STAT_INC(q, c) do { } while (0)
net/wireless/ath/ath9k/debug.h:#define RESET_STAT_INC(sc, type) do { } while (0)
net/wireless/ath/ath9k/htc.h:#define INC_VIF(_priv, _type) do {		\
net/wireless/ath/ath9k/htc.h:#define DEC_VIF(_priv, _type) do {		\
net/wireless/ath/ath9k/htc.h:#define TX_STAT_INC(c) do { } while (0)
net/wireless/ath/ath9k/htc.h:#define RX_STAT_INC(c) do { } while (0)
net/wireless/ath/ath9k/htc.h:#define CAB_STAT_INC   do { } while (0)
net/wireless/ath/ath9k/htc.h:#define TX_QSTAT_INC(c) do { } while (0)
net/wireless/ath/ath9k/calib.h:#define INIT_INI_ARRAY(iniarray, array, rows, columns) do {	\
net/wireless/ath/ath9k/calib.h:#define INIT_CAL(_perCal) do {				\
net/wireless/ath/ath9k/calib.h:	do {								\
net/wireless/ath/ath9k/hw.c:	do {
net/wireless/ath/ath9k/ath9k.h:#define INCR(_l, _sz)   do {			\
net/wireless/ath/ath9k/ath9k.h:#define DECR(_l,  _sz)  do {			\
net/wireless/ath/ath9k/ath9k.h:#define ATH_TXBUF_RESET(_bf) do {				\
net/wireless/ath/ath9k/hw.h:	do {								\
net/wireless/ath/ath9k/hw.h:	do {								\
net/wireless/ath/ath9k/hw.h:	do {								\
net/wireless/ath/ath9k/hw.h:#define DO_DELAY(x) do {					\
net/wireless/ath/ath.h:do {								\
net/wireless/ath/ath.h:do {									\
net/wireless/ath/ath.h:#define ATH_DBG_WARN(foo, arg...) do {} while (0)
net/wireless/ath/carl9170/debug.c:#define TALLY_SUM_UP(ar, name)	do {					\
net/wireless/ath/carl9170/cmd.h:do {									\
net/wireless/ath/carl9170/cmd.h:#define carl9170_regwrite(r, v) do {					\
net/wireless/ath/carl9170/cmd.h:do {									\
net/wireless/ath/carl9170/cmd.h:do {									\
net/wireless/ath/carl9170/cmd.h:do {									\
net/wireless/ath/carl9170/cmd.h:#define carl9170_async_regwrite(r, v) do {				\
net/wireless/ath/carl9170/cmd.h:#define carl9170_async_regwrite_finish() do {				\
net/wireless/ath/carl9170/main.c:do {									\
net/wireless/hostap/hostap_hw.c:	do {
net/wireless/hostap/hostap_hw.c:	do {
net/wireless/hostap/hostap_hw.c:	do {
net/wireless/hostap/hostap_hw.c:		do {
net/wireless/hostap/hostap_hw.c:do { memset((q), 0, sizeof(*(q))); (q)->func = (f); (q)->data = (d); } \
net/wireless/hostap/hostap_wlan.h:do { if ((n) & DEBUG_MASK) printk(KERN_DEBUG args); } while (0)
net/wireless/hostap/hostap_wlan.h:do { if ((n) & DEBUG_MASK) printk(args); } while (0)
net/wireless/hostap/hostap_wlan.h:#define prism2_callback(d, e) do { } while (0)
net/can/slcan.c:	do {
net/can/sja1000/ems_pcmcia.c:	do {
net/can/janz-ican3.c:	do {
net/can/pch_can.c:	do {
net/can/softing/softing_fw.c:	do {
net/can/softing/softing_fw.c:	do {
net/can/softing/softing_fw.c:	do {
net/virtio_net.c:	do {
net/virtio_net.c:		do {
net/fddi/skfp/ecm.c:	do {
net/fddi/skfp/rmt.c:	do {
net/fddi/skfp/pcmplc.c:	do {
net/fddi/skfp/hwmtm.c:		do {
net/fddi/skfp/hwmtm.c:			do {
net/fddi/skfp/hwt.c:		do {
net/fddi/skfp/hwt.c:		do {
net/fddi/skfp/cfm.c:	do {
net/bonding/bond_main.c:		do {
net/bonding/bond_3ad.c:	do {
net/wan/wanxl.c:	do {
net/wan/wanxl.c:	do {
net/wan/wanxl.c:	do {
net/wan/wanxl.c:	do {
net/wan/pc300_drv.c:		do {						\
net/wan/pc300_drv.c:		do {							\
net/wan/pci200syn.c:	do {
net/wan/c101.c:#define sca_outw(value, reg, card) do { \
net/wan/c101.c:	do {
net/wan/hd64570.c:		do {
net/wan/hd64570.c:	do {
net/wan/sbni.c:	do {
net/wan/pc300_tty.c:	do {\
net/wan/pc300_tty.c:	do {\
net/wan/farsync.c:do {								\
net/wan/farsync.c:do {								\
net/wan/lmc/lmc_var.h:#define LMC_MII_SYNC(sc) do {int n=32; while( n >= 0 ) { \
net/wan/cycx_x25.c:	do {
net/wan/n2.c:	do {
net/wan/dscc4.c:	do {
net/wan/dscc4.c:	do {
net/wan/dscc4.c:	do {
net/wan/dscc4.c:#define dscc4_pci_reset(pdev,ioaddr)	do {} while (0)
net/wan/dscc4.c:		do {
net/wan/dscc4.c:		do {
net/wan/dscc4.c:			do {
net/wan/dscc4.c:	do {
net/wan/dscc4.c:	do {
net/wan/ixp4xx_hss.c:	do {
net/wan/hd64572.c:		do {
net/wan/hd64572.c:	do {
net/plip/plip.c:		do {
net/plip/plip.c:		do {
net/plip/plip.c:		do {
net/plip/plip.c:		do {
net/ethernet/seeq/seeq8005.c:	do {
net/ethernet/seeq/seeq8005.c:	do {
net/ethernet/seeq/ether3.c:	do {
net/ethernet/seeq/ether3.c:	do {
net/ethernet/sis/sis900.c:	do {
net/ethernet/sis/sis190.c:	do {
net/ethernet/adaptec/starfire.c:	do {
net/ethernet/adaptec/starfire.c:	do {
net/ethernet/adaptec/starfire.c:	do {
net/ethernet/i825xx/ether1.c:	do {
net/ethernet/i825xx/ether1.c:	do {
net/ethernet/i825xx/ether1.c:	do {
net/ethernet/i825xx/ether1.c:	do {
net/ethernet/i825xx/3c505.c:	do {
net/ethernet/i825xx/3c505.c:		do {
net/ethernet/i825xx/3c505.c:	do {
net/ethernet/i825xx/3c507.c:	do {	/* While there is room for one more. */
net/ethernet/i825xx/eepro.c:	do {
net/ethernet/i825xx/eepro.c:		do { /* We should be doing this in the eepro_interrupt()! */
net/ethernet/i825xx/82596.c:	do {
net/ethernet/i825xx/82596.c:	do {
net/ethernet/i825xx/sni_82596.c:#define DMA_WBACK(priv, addr, len)     do { } while (0)
net/ethernet/i825xx/sni_82596.c:#define DMA_INV(priv, addr, len)       do { } while (0)
net/ethernet/i825xx/sni_82596.c:#define DMA_WBACK_INV(priv, addr, len) do { } while (0)
net/ethernet/i825xx/lib82596.c:	do {
net/ethernet/i825xx/lib82596.c:	do {
net/ethernet/i825xx/eexpress.c:		do {
net/ethernet/i825xx/eexpress.c: 	do {
net/ethernet/i825xx/lasi_82596.c:	do { dma_cache_sync((ndev)->dev.parent, (void *)addr, len, DMA_TO_DEVICE); } while (0)
net/ethernet/i825xx/lasi_82596.c:	do { dma_cache_sync((ndev)->dev.parent, (void *)addr, len, DMA_FROM_DEVICE); } while (0)
net/ethernet/i825xx/lasi_82596.c:	do { dma_cache_sync((ndev)->dev.parent, (void *)addr, len, DMA_BIDIRECTIONAL); } while (0)
net/ethernet/i825xx/znet.c:	do {
net/ethernet/i825xx/znet.c:	do {
net/ethernet/i825xx/lp486e.c:	do {
net/ethernet/realtek/8139cp.c:#define cpw8_f(reg,val) do {			\
net/ethernet/realtek/8139cp.c:#define cpw16_f(reg,val) do {			\
net/ethernet/realtek/8139cp.c:#define cpw32_f(reg,val) do {			\
net/ethernet/realtek/atp.h:do { int _i = 40; while (--_i > 0) { __SLOW_DOWN_IO; }} while (0)
net/ethernet/realtek/#8139cp.c#:#define cpw8_f(reg,val) do {			\
net/ethernet/realtek/#8139cp.c#:#define cpw16_f(reg,val) do {			\
net/ethernet/realtek/#8139cp.c#:#define cpw32_f(reg,val) do {			\
net/ethernet/realtek/8139too.c:#  define assert(expr) do {} while (0)
net/ethernet/realtek/8139too.c:#define RTL_W8_F(reg, val8)	do { iowrite8 ((val8), ioaddr + (reg)); ioread8 (ioaddr + (reg)); } while (0)
net/ethernet/realtek/8139too.c:#define RTL_W16_F(reg, val16)	do { iowrite16 ((val16), ioaddr + (reg)); ioread16 (ioaddr + (reg)); } while (0)
net/ethernet/realtek/8139too.c:#define RTL_W32_F(reg, val32)	do { iowrite32 ((val32), ioaddr + (reg)); ioread32 (ioaddr + (reg)); } while (0)
net/ethernet/realtek/r8169.c:	do { printk(KERN_DEBUG PFX fmt, ## args); } while (0)
net/ethernet/realtek/r8169.c:#define assert(expr) do {} while (0)
net/ethernet/realtek/r8169.c:#define dprintk(fmt, args...)	do {} while (0)
net/ethernet/realtek/atp.c:		do {
net/ethernet/realtek/atp.c:		do {
net/ethernet/realtek/atp.c:			do {
net/ethernet/realtek/atp.c:			do { *p++ = read_byte_mode0(ioaddr); } while (--length > 0);
net/ethernet/realtek/atp.c:			do { *p++ = read_byte_mode2(ioaddr); } while (--length > 0);
net/ethernet/realtek/atp.c:		do { *p++ = read_byte_mode4(ioaddr); } while (--length > 0);
net/ethernet/realtek/atp.c:		do { *p++ = read_byte_mode6(ioaddr); } while (--length > 0);
net/ethernet/alteon/acenic.c:	do {
net/ethernet/microchip/enc28j60.c:	do {
net/ethernet/fujitsu/eth16i.c:#define eeprom_slow_io() do { int _i = 40; while(--_i > 0) { inb(0x80); }}while(0)
net/ethernet/atheros/atl1c/atl1c_main.c:	do {
net/ethernet/atheros/atl1c/atl1c.h:#define ATL1C_SET_BUFFER_STATE(buff, state) do {	\
net/ethernet/atheros/atl1c/atl1c.h:#define ATL1C_SET_PCIMAP_TYPE(buff, type, direction) do {	\
net/ethernet/atheros/atl1c/atl1c.h:#define AT_READ_REG(a, reg, pdata) do {					\
net/ethernet/atheros/atlx/atl1.c:	do {
net/ethernet/atheros/atlx/atl2.c:	do {
net/ethernet/atheros/atlx/atl2.c:	do {
net/ethernet/atheros/atl1e/atl1e.h:#define ATL1E_SET_PCIMAP_TYPE(tx_buff, type) do {		\
net/ethernet/atheros/atl1e/atl1e_main.c:	do {
net/ethernet/atheros/atl1e/atl1e_main.c:		do {
net/ethernet/myricom/myri10ge/myri10ge.c:		do {
net/ethernet/myricom/myri10ge/myri10ge.c:		do {
net/ethernet/myricom/myri10ge/myri10ge.c:	do {
net/ethernet/myricom/myri10ge/myri10ge.c:			do {
net/ethernet/intel/ixgbevf/ixgbevf.h:#define hw_dbg(hw, format, arg...) do {} while (0)
net/ethernet/intel/ixgbevf/ixgbevf_main.c:			do {
net/ethernet/intel/ixgbevf/ixgbevf_main.c:		do {
net/ethernet/intel/ixgbevf/ixgbevf_main.c:		do {
net/ethernet/intel/e1000/e1000_ethtool.c:	do {							     \
net/ethernet/intel/e1000/e1000_ethtool.c:	do {							     \
net/ethernet/intel/e1000/e1000_ethtool.c:		do { /* receive the sent packets */
net/ethernet/intel/e1000/e1000_ethtool.c:		do {
net/ethernet/intel/e1000/e1000_hw.c:	do {
net/ethernet/intel/e1000/e1000_hw.c:	do {
net/ethernet/intel/e1000/e1000_hw.c:	do {
net/ethernet/intel/ixgbe/ixgbe_ethtool.c:		do {
net/ethernet/intel/ixgbe/ixgbe_ethtool.c:		do {
net/ethernet/intel/ixgbe/ixgbe_ethtool.c:	do {								      \
net/ethernet/intel/ixgbe/ixgbe_ethtool.c:	do {								      \
net/ethernet/intel/ixgbe/ixgbe_phy.c:	do {
net/ethernet/intel/ixgbe/ixgbe_phy.c:	do {
net/ethernet/intel/ixgbe/ixgbe_common.c:			do {
net/ethernet/intel/ixgbe/ixgbe_main.c:		do {
net/ethernet/intel/ixgbe/ixgbe_main.c:	do {
net/ethernet/intel/ixgbe/ixgbe_main.c:	do {
net/ethernet/intel/ixgbe/ixgbe_main.c:	do {
net/ethernet/intel/ixgbe/ixgbe_main.c:			do {
net/ethernet/intel/ixgbe/ixgbe_main.c:			do {
net/ethernet/intel/ixgbe/ixgbe_main.c:			do {
net/ethernet/intel/ixgbe/ixgbe_82599.c:do { \
net/ethernet/intel/ixgbe/ixgbe_82599.c:do { \
net/ethernet/intel/ixgb/ixgb.h:do {							\
net/ethernet/intel/ixgb/ixgb_ee.c:	do {
net/ethernet/intel/ixgb/ixgb_hw.c:	do {
net/ethernet/intel/ixgb/ixgb_hw.c:		do {
net/ethernet/intel/igb/igb_ethtool.c:	do { \
net/ethernet/intel/igb/igb_ethtool.c:	do { \
net/ethernet/intel/igb/igb_ethtool.c:		do {
net/ethernet/intel/igb/igb_ethtool.c:		do {
net/ethernet/intel/igb/igb_ethtool.c:		do {
net/ethernet/intel/igb/igb_ethtool.c:		do {
net/ethernet/intel/igb/igb_main.c:		do {
net/ethernet/intel/igb/igb_main.c:		do {
net/ethernet/intel/igb/e1000_nvm.c:	do {
net/ethernet/intel/e1000e/netdev.c:	do {
net/ethernet/intel/e1000e/ich8lan.c:	do {
net/ethernet/intel/e1000e/ich8lan.c:	do {
net/ethernet/intel/e1000e/ich8lan.c:	do {
net/ethernet/intel/e1000e/ich8lan.c:	do {
net/ethernet/intel/e1000e/ich8lan.c:		do {
net/ethernet/intel/e1000e/ich8lan.c:	do {
net/ethernet/intel/e1000e/phy.c:		do {
net/ethernet/intel/e1000e/80003es2lan.c:	do {
net/ethernet/intel/e1000e/80003es2lan.c:	do {
net/ethernet/intel/e1000e/82571.c:	do {
net/ethernet/intel/e1000e/ethtool.c:	do {                                                                   \
net/ethernet/intel/e1000e/ethtool.c:	do {                                                                   \
net/ethernet/intel/e1000e/ethtool.c:		do { /* receive the sent packets */
net/ethernet/intel/e1000e/ethtool.c:		do {
net/ethernet/intel/e1000e/lib.c:	do {
net/ethernet/sun/cassini.c:do { \
net/ethernet/sun/cassini.c:do { \
net/ethernet/sun/sunhme.c:#define tx_add_log(hp, a, s)		do { } while(0)
net/ethernet/sun/sunhme.c:#define tx_dump_log()			do { } while(0)
net/ethernet/sun/sunhme.c:#define tx_dump_ring(hp)		do { } while(0)
net/ethernet/sun/sunhme.c:do {	(__rxd)->rx_addr = (__force hme32)(u32)(__addr); \
net/ethernet/sun/sunhme.c:do {	(__txd)->tx_addr = (__force hme32)(u32)(__addr); \
net/ethernet/sun/sunhme.c:do {	(__rxd)->rx_addr = (__force hme32)cpu_to_le32(__addr); \
net/ethernet/sun/sunhme.c:do {	(__txd)->tx_addr = (__force hme32)cpu_to_le32(__addr); \
net/ethernet/sun/sunvnet.c:	do {
net/ethernet/sun/sunvnet.c:	do {
net/ethernet/sun/niu.c:	do {
net/ethernet/sun/niu.c:	do {
net/ethernet/sun/niu.c:	do {
net/ethernet/sun/sunbmac.c:	do {
net/ethernet/sun/sunbmac.c:	do {
net/ethernet/sun/sunbmac.c:		do {
net/ethernet/sun/sunbmac.c:		do {
net/ethernet/sun/sungem.c:	do {
net/ethernet/sun/sungem.c:	do {
net/ethernet/packetengines/yellowfin.c:	do {
net/ethernet/packetengines/hamachi.c:	do {
net/ethernet/octeon/octeon_mgmt.c:		do {
net/ethernet/octeon/octeon_mgmt.c:	do {
net/ethernet/octeon/octeon_mgmt.c:		do {
net/ethernet/davicom/dm9000.c:#define dm9000_dbg(db, lev, msg...) do {		\
net/ethernet/davicom/dm9000.c:	do {
net/ethernet/via/via-velocity.c:	do {
net/ethernet/via/via-velocity.c:#define velocity_register_notifier()	do {} while (0)
net/ethernet/via/via-velocity.c:#define velocity_unregister_notifier()	do {} while (0)
net/ethernet/via/via-velocity.h:#define BYTE_REG_BITS_ON(x,p)       do { writeb(readb((p))|(x),(p));} while (0)
net/ethernet/via/via-velocity.h:#define WORD_REG_BITS_ON(x,p)       do { writew(readw((p))|(x),(p));} while (0)
net/ethernet/via/via-velocity.h:#define DWORD_REG_BITS_ON(x,p)      do { writel(readl((p))|(x),(p));} while (0)
net/ethernet/via/via-velocity.h:#define BYTE_REG_BITS_OFF(x,p)      do { writeb(readb((p)) & (~(x)),(p));} while (0)
net/ethernet/via/via-velocity.h:#define WORD_REG_BITS_OFF(x,p)      do { writew(readw((p)) & (~(x)),(p));} while (0)
net/ethernet/via/via-velocity.h:#define DWORD_REG_BITS_OFF(x,p)     do { writel(readl((p)) & (~(x)),(p));} while (0)
net/ethernet/via/via-velocity.h:#define BYTE_REG_BITS_SET(x,m,p)    do { writeb( (readb((p)) & (~(m))) |(x),(p));} while (0)
net/ethernet/via/via-velocity.h:#define WORD_REG_BITS_SET(x,m,p)    do { writew( (readw((p)) & (~(m))) |(x),(p));} while (0)
net/ethernet/via/via-velocity.h:#define DWORD_REG_BITS_SET(x,m,p)   do { writel( (readl((p)) & (~(m)))|(x),(p));}  while (0)
net/ethernet/via/via-velocity.h:#define VAR_USED(p)     do {(p)=(p);} while (0)
net/ethernet/via/via-velocity.h:	do {}\
net/ethernet/via/via-velocity.h:	do {
net/ethernet/via/via-velocity.h:#define MII_REG_BITS_ON(x,i,p) do {\
net/ethernet/via/via-velocity.h:#define MII_REG_BITS_OFF(x,i,p) do {\
net/ethernet/via/via-velocity.h:#define VELOCITY_PRT(l, p, args...) do {if (l<=msglevel) printk( p ,##args);} while (0)
net/ethernet/via/via-rhine.c:#define IOSYNC	do { ioread8(ioaddr + StationAddr); } while (0)
net/ethernet/via/via-rhine.c:#define BYTE_REG_BITS_ON(x, p)      do { iowrite8((ioread8((p))|(x)), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define WORD_REG_BITS_ON(x, p)      do { iowrite16((ioread16((p))|(x)), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define DWORD_REG_BITS_ON(x, p)     do { iowrite32((ioread32((p))|(x)), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define BYTE_REG_BITS_OFF(x, p)     do { iowrite8(ioread8((p)) & (~(x)), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define WORD_REG_BITS_OFF(x, p)     do { iowrite16(ioread16((p)) & (~(x)), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define DWORD_REG_BITS_OFF(x, p)    do { iowrite32(ioread32((p)) & (~(x)), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define BYTE_REG_BITS_SET(x, m, p)   do { iowrite8((ioread8((p)) & (~(m)))|(x), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define WORD_REG_BITS_SET(x, m, p)   do { iowrite16((ioread16((p)) & (~(m)))|(x), (p)); } while (0)
net/ethernet/via/via-rhine.c:#define DWORD_REG_BITS_SET(x, m, p)  do { iowrite32((ioread32((p)) & (~(m)))|(x), (p)); } while (0)
net/ethernet/via/via-rhine.c:do {								\
net/ethernet/cirrus/cs89x0.c:	do {
net/ethernet/cirrus/cs89x0.c:	do {
net/ethernet/silan/sc92031.c:	do {
net/ethernet/ti/davinci_cpdma.c:	do {
net/ethernet/ti/tlan.h:	do {								\
net/ethernet/ti/cpmac.c:	do {
net/ethernet/marvell/pxa168_eth.c:	do {
net/ethernet/marvell/pxa168_eth.c:	do {
net/ethernet/marvell/skge.c:	do {
net/ethernet/marvell/skge.c:	do {
net/ethernet/marvell/skge.c:	do {
net/ethernet/marvell/skge.c:	do {
net/ethernet/marvell/skge.c:	do {
net/ethernet/marvell/sky2.c:		do {
net/ethernet/marvell/sky2.c:	do {
net/ethernet/marvell/sky2.c:	do {
net/ethernet/marvell/sky2.c:	do {
net/ethernet/marvell/sky2.h:	do {
net/ethernet/marvell/sky2.h:	do {
net/ethernet/marvell/mv643xx_eth.c:	do {
net/ethernet/freescale/gianfar.c:		do {
net/ethernet/freescale/ucc_geth.c:#define ugeth_vdbg(fmt, args...) do { } while (0)
net/ethernet/freescale/ucc_geth.c:	do {
net/ethernet/freescale/ucc_geth.c:	do {
net/ethernet/freescale/ucc_geth.c:	do {
net/ethernet/freescale/fec.c:	do {
net/ethernet/emulex/benet/be_cmds.c:	do {
net/ethernet/emulex/benet/be_cmds.c:	do {
net/ethernet/emulex/benet/be_ethtool.c:		do {
net/ethernet/emulex/benet/be_ethtool.c:		do {
net/ethernet/emulex/benet/be_ethtool.c:		do {
net/ethernet/emulex/benet/be_main.c:		do {
net/ethernet/emulex/benet/be_main.c:		do {
net/ethernet/emulex/benet/be_main.c:	do {
net/ethernet/emulex/benet/be_main.c:	do {
net/ethernet/emulex/benet/be_main.c:	do {
net/ethernet/emulex/benet/be.h:	do {
net/ethernet/8390/ne.c:		do {
net/ethernet/8390/ne.c:		do {
net/ethernet/8390/3c503.c:	do {
net/ethernet/8390/hp.c:		do {
net/ethernet/8390/ne2.c:		do {
net/ethernet/8390/ne2.c:		do {
net/ethernet/8390/ne2.c:		do {
net/ethernet/8390/pcnet_cs.c:	do {
net/ethernet/8390/pcnet_cs.c:	do {
net/ethernet/8390/pcnet_cs.c:	do { *d++ = __raw_readw(s++); } while (--c);
net/ethernet/8390/pcnet_cs.c:	do { __raw_writew(*s++, d++); } while (--c);
net/ethernet/8390/ne-h8300.c:		do {
net/ethernet/8390/ne-h8300.c:		do {
net/ethernet/toshiba/spider_net.c:	do {
net/ethernet/toshiba/spider_net.c:	do {
net/ethernet/toshiba/spider_net.c:	do {
net/ethernet/toshiba/spider_net.c:	do {
net/ethernet/toshiba/tc35815.c:	do {
net/ethernet/toshiba/ps3_gelic_net.c:	do {
net/ethernet/toshiba/ps3_gelic_net.c:	do {
net/ethernet/jme.h:do {									\
net/ethernet/stmicro/stmmac/common.h:#define CHIP_DBG(fmt, args...)  do { } while (0)
net/ethernet/stmicro/stmmac/stmmac_mdio.c:	do {} while (((readl(priv->ioaddr + mii_address)) & MII_BUSY) == 1);
net/ethernet/stmicro/stmmac/stmmac_mdio.c:	do {} while (((readl(priv->ioaddr + mii_address)) & MII_BUSY) == 1);
net/ethernet/stmicro/stmmac/stmmac_mdio.c:	do {} while (((readl(priv->ioaddr + mii_address)) & MII_BUSY) == 1);
net/ethernet/stmicro/stmmac/stmmac_mdio.c:	do {} while (((readl(priv->ioaddr + mii_address)) & MII_BUSY) == 1);
net/ethernet/stmicro/stmmac/stmmac_main.c:#define DBG(nlevel, klevel, fmt, args...) do { } while (0)
net/ethernet/stmicro/stmmac/stmmac_main.c:#define RX_DBG(fmt, args...)  do { } while (0)
net/ethernet/stmicro/stmmac/stmmac_main.c:#define TX_DBG(fmt, args...)  do { } while (0)
net/ethernet/stmicro/stmmac/dwmac_lib.c:#define DWMAC_LIB_DBG(fmt, args...)  do { } while (0)
net/ethernet/stmicro/stmmac/dwmac_lib.c:	do {} while ((readl(ioaddr + DMA_CONTROL) & DMA_CONTROL_FTF));
net/ethernet/sfc/nic.c:	do {
net/ethernet/sfc/nic.c:	do {
net/ethernet/sfc/bitfield.h:#define EFX_POPULATE_OWORD64(oword, ...) do {				\
net/ethernet/sfc/bitfield.h:#define EFX_POPULATE_QWORD64(qword, ...) do {				\
net/ethernet/sfc/bitfield.h:#define EFX_POPULATE_OWORD32(oword, ...) do {				\
net/ethernet/sfc/bitfield.h:#define EFX_POPULATE_QWORD32(qword, ...) do {				\
net/ethernet/sfc/bitfield.h:#define EFX_POPULATE_DWORD(dword, ...) do {				\
net/ethernet/sfc/bitfield.h:#define EFX_INVERT_OWORD(oword) do {		\
net/ethernet/sfc/bitfield.h:	do {							\
net/ethernet/sfc/bitfield.h:	do {							\
net/ethernet/sfc/bitfield.h:#define EFX_SET_OWORD64(oword, low, high, value) do {			\
net/ethernet/sfc/bitfield.h:#define EFX_SET_QWORD64(qword, low, high, value) do {			\
net/ethernet/sfc/bitfield.h:#define EFX_SET_OWORD32(oword, low, high, value) do {			\
net/ethernet/sfc/bitfield.h:#define EFX_SET_QWORD32(qword, low, high, value) do {			\
net/ethernet/sfc/bitfield.h:#define EFX_SET_DWORD32(dword, low, high, value) do {			\
net/ethernet/sfc/selftest.c:	do {
net/ethernet/sfc/mcdi.c:	do {
net/ethernet/sfc/rx.c:	do {
net/ethernet/sfc/mdio_10g.c:	do {
net/ethernet/sfc/nic.h:#define FALCON_STAT(efx, falcon_stat, efx_stat) do {		\
net/ethernet/sfc/net_driver.h:#define EFX_BUG_ON_PARANOID(x) do {} while (0)
net/ethernet/sfc/net_driver.h:#define EFX_WARN_ON_PARANOID(x) do {} while (0)
net/ethernet/sfc/efx.c:	do {						\
net/ethernet/sfc/tx.c:		do {
net/ethernet/sfc/falcon.c:	do {
net/ethernet/neterion/s2io.c:	do {
net/ethernet/neterion/s2io.c:	do {
net/ethernet/neterion/s2io.c:		do {
net/ethernet/neterion/s2io.h:#define DBG_PRINT(dbg_level, fmt, args...) do {			\
net/ethernet/neterion/vxge/vxge-config.c:	do {
net/ethernet/neterion/vxge/vxge-config.c:	do {
net/ethernet/neterion/vxge/vxge-config.c:	do {
net/ethernet/neterion/vxge/vxge-config.c:	do {
net/ethernet/neterion/vxge/vxge-main.c:	do {
net/ethernet/neterion/vxge/vxge-main.c:	do {
net/ethernet/neterion/vxge/vxge-main.c:	do {
net/ethernet/neterion/vxge/vxge-main.c:		do {
net/ethernet/neterion/vxge/vxge-main.c:		do {
net/ethernet/neterion/vxge/vxge-main.h:#define vxge_os_timer(timer, handle, arg, exp) do { \
net/ethernet/neterion/vxge/vxge-config.h:#define vxge_debug_ll(level, mask, fmt, ...) do {			       \
net/ethernet/xscale/ixp2000/ixpdev.c:	do {
net/ethernet/xscale/ixp4xx_eth.c:	do {			/* drain RX buffers */
net/ethernet/xscale/ixp4xx_eth.c:	do {
net/ethernet/dnet.c:#define dnet_print_skb(skb)	do {} while (0)
net/ethernet/amd/amd8111e.c:	do {
net/ethernet/amd/sunlance.c:do {	void __iomem *__base = (__lp)->lregs; \
net/ethernet/amd/nmclan_cs.c:  do {
net/ethernet/amd/sun3lance.c:	do {  \
net/ethernet/amd/hplance.c:	do {
net/ethernet/amd/hplance.c:	do {
net/ethernet/amd/hplance.c:	do {
net/ethernet/amd/am79c961a.c:	do {
net/ethernet/amd/am79c961a.c:	do {
net/ethernet/amd/am79c961a.c:	do {
net/ethernet/amd/7990.c:	do {
net/ethernet/amd/7990.c:	do {
net/ethernet/amd/7990.c:	do {
net/ethernet/amd/7990.c:do { \
net/ethernet/amd/atarilance.c:	do {										\
net/ethernet/amd/atarilance.c:	do {																	 \
net/ethernet/faraday/ftmac100.c:	do {
net/ethernet/faraday/ftmac100.c:		do {
net/ethernet/faraday/ftgmac100.c:	do {
net/ethernet/faraday/ftgmac100.c:	do {
net/ethernet/faraday/ftgmac100.c:		do {
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_mcr(v)		do { ioc3->mcr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_gpcr_s(v)	do { ioc3->gpcr_s = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_emcr(v)		do { ioc3->emcr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_eisr(v)		do { ioc3->eisr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_eier(v)		do { ioc3->eier = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ercsr(v)		do { ioc3->ercsr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_erbr_h(v)	do { ioc3->erbr_h = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_erbr_l(v)	do { ioc3->erbr_l = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_erbar(v)		do { ioc3->erbar = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ercir(v)		do { ioc3->ercir = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_erpir(v)		do { ioc3->erpir = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ertr(v)		do { ioc3->ertr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_etcsr(v)		do { ioc3->etcsr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ersr(v)		do { ioc3->ersr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_etcdc(v)		do { ioc3->etcdc = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ebir(v)		do { ioc3->ebir = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_etbr_h(v)	do { ioc3->etbr_h = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_etbr_l(v)	do { ioc3->etbr_l = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_etcir(v)		do { ioc3->etcir = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_etpir(v)		do { ioc3->etpir = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_emar_h(v)	do { ioc3->emar_h = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_emar_l(v)	do { ioc3->emar_l = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ehar_h(v)	do { ioc3->ehar_h = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_ehar_l(v)	do { ioc3->ehar_l = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_micr(v)		do { ioc3->micr = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_midr_r(v)	do { ioc3->midr_r = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:#define ioc3_w_midr_w(v)	do { ioc3->midr_w = cpu_to_be32(v); } while (0)
net/ethernet/sgi/ioc3-eth.c:        do {
net/ethernet/nvidia/forcedeth.c:	do {
net/ethernet/nvidia/forcedeth.c:	do {
net/ethernet/nvidia/forcedeth.c:		do {
net/ethernet/nvidia/forcedeth.c:	do {
net/ethernet/nvidia/forcedeth.c:		do {
net/ethernet/nvidia/forcedeth.c:	do {
net/ethernet/nvidia/forcedeth.c:	do {
net/ethernet/broadcom/tg3.c:	do {
net/ethernet/broadcom/tg3.c:	do {
net/ethernet/broadcom/tg3.c:do {	u32 __val = tr32(REG); \
net/ethernet/broadcom/tg3.c:		do {
net/ethernet/broadcom/bnx2x/bnx2x_hsi.h:do {									   \
net/ethernet/broadcom/bnx2x/bnx2x_main.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_main.c:		do {
net/ethernet/broadcom/bnx2x/bnx2x_main.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_main.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_main.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_main.c:		do {
net/ethernet/broadcom/bnx2x/bnx2x_main.c:do {									\
net/ethernet/broadcom/bnx2x/bnx2x_link.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_link.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_link.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_stats.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_cmn.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_cmn.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_cmn.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_cmn.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_sp.c:do { \
net/ethernet/broadcom/bnx2x/bnx2x_dcb.c:	do {
net/ethernet/broadcom/bnx2x/bnx2x_cmn.c:	do { \
net/ethernet/broadcom/bnx2x/bnx2x_cmn.c:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:do {								\
net/ethernet/broadcom/bnx2x/bnx2x.h:do {								\
net/ethernet/broadcom/bnx2x/bnx2x.h:do {								\
net/ethernet/broadcom/bnx2x/bnx2x.h:do {								\
net/ethernet/broadcom/bnx2x/bnx2x.h:do {								 \
net/ethernet/broadcom/bnx2x/bnx2x.h:do {						\
net/ethernet/broadcom/bnx2x/bnx2x.h:do {						\
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do {
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do { \
net/ethernet/broadcom/bnx2x/bnx2x.h:	do {\
net/ethernet/broadcom/bcm63xx_enet.c:	do {
net/ethernet/broadcom/bcm63xx_enet.c:	do {
net/ethernet/broadcom/bcm63xx_enet.c:	do {
net/ethernet/broadcom/bcm63xx_enet.c:	do {
net/ethernet/broadcom/bcm63xx_enet.c:	do {
net/ethernet/broadcom/b44.c:			do {
net/ethernet/cisco/enic/enic_main.c:	do {
net/ethernet/cisco/enic/enic_res.c:	do { \
net/ethernet/cisco/enic/vnic_dev.c:	do {
net/ethernet/cisco/enic/enic_dev.h:	do { \
net/ethernet/cisco/enic/vnic_vic.h:	do { \
net/ethernet/cisco/enic/enic_pp.h:	do { \
net/ethernet/smsc/smc91c92_cs.c:    do { /* read the status flag, and mask it */
net/ethernet/smsc/smsc911x.c:		do {
net/ethernet/smsc/smsc911x.c:		do {
net/ethernet/smsc/smsc911x.c:	do {
net/ethernet/smsc/smsc911x.c:		do {
net/ethernet/smsc/smsc911x.c:	do {
net/ethernet/smsc/smsc911x.c:	do {
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smc91x.h:	do {								\
net/ethernet/smsc/smsc9420.c:do {	if ((pd)->msg_enable & NETIF_MSG_##TYPE) \
net/ethernet/smsc/smsc9420.c:do {	if ((pd)->msg_enable & NETIF_MSG_##TYPE) \
net/ethernet/smsc/smsc9420.c:do {	if ((pd)->msg_enable & NETIF_MSG_##TYPE) \
net/ethernet/smsc/smsc9420.c:	do {
net/ethernet/smsc/smsc9420.c:	do {
net/ethernet/smsc/smsc911x.h:#define SMSC_ASSERT_MAC_LOCK(pdata) do {} while (0)
net/ethernet/smsc/smsc911x.h:#define SMSC_INITIALIZE()		do {} while (0)
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:	do {								\
net/ethernet/smsc/smc911x.h:	do {								\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:		do {						\
net/ethernet/smsc/smc911x.h:		do {						\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:		do {						\
net/ethernet/smsc/smc911x.h:		do {						\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:	do {							\
net/ethernet/smsc/smc911x.h:	do {								\
net/ethernet/smsc/smc91x.c:	do {						\
net/ethernet/smsc/smc91x.c:#define DBG(n, args...)   do { } while(0)
net/ethernet/smsc/smc91x.c:#define PRINT_PKT(x...)  do { } while(0)
net/ethernet/smsc/smc91x.c:#define SMC_ENABLE_INT(lp, x) do {					\
net/ethernet/smsc/smc91x.c:#define SMC_DISABLE_INT(lp, x) do {					\
net/ethernet/smsc/smc91x.c:#define SMC_WAIT_MMU_BUSY(lp) do {					\
net/ethernet/smsc/smc91x.c:#define smc_special_lock(lock, flags)   	do { flags = 0; } while (0)
net/ethernet/smsc/smc91x.c:#define smc_special_unlock(lock, flags)	do { flags = 0; } while (0)
net/ethernet/smsc/smc91x.c:	do {
net/ethernet/smsc/smc91x.c:	do {
net/ethernet/smsc/smc91x.c:	do {
net/ethernet/smsc/smc91x.c:	do {
net/ethernet/smsc/smc91x.c:	do {
net/ethernet/smsc/smc911x.c:	do {					 \
net/ethernet/smsc/smc911x.c:#define DBG(n, args...)   do { } while (0)
net/ethernet/smsc/smc911x.c:#define PRINT_PKT(x...)  do { } while (0)
net/ethernet/smsc/smc911x.c:#define SMC_ENABLE_INT(lp, x) do {			\
net/ethernet/smsc/smc911x.c:#define SMC_DISABLE_INT(lp, x) do {			\
net/ethernet/smsc/smc911x.c:		do {
net/ethernet/smsc/smc911x.c:		do {
net/ethernet/smsc/smc911x.c:		do {
net/ethernet/smsc/smc911x.c:	do {
net/ethernet/smsc/smc911x.c:	do {
net/ethernet/smsc/smc9194.c:	do {
net/ethernet/smsc/smc9194.c:	do {
net/ethernet/hp/hp100.c:	do {
net/ethernet/hp/hp100.c:	do {
net/ethernet/hp/hp100.c:		do {
net/ethernet/hp/hp100.c:	do {
net/ethernet/hp/hp100.c:	do {
net/ethernet/hp/hp100.c:		do {
net/ethernet/hp/hp100.c:		do {
net/ethernet/hp/hp100.c:			do {
net/ethernet/hp/hp100.c:#define hp100_isa_cleanup()	do { } while(0)
net/ethernet/brocade/bna/bfa_cs.h:#define bfa_fsm_set_state(_fsm, _state) do {				\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {								\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bna.h:#define	GET_RXQS(rxp, q0, q1)	do {					\
net/ethernet/brocade/bna/bna.h:do {								    \
net/ethernet/brocade/bna/bna.h:do {									\
net/ethernet/brocade/bna/bnad.c:do {								\
net/ethernet/brocade/bna/bna_hw_defs.h:do {									\
net/ethernet/brocade/bna/bna_hw_defs.h:do {									\
net/ethernet/brocade/bna/bna_hw_defs.h:do {									\
net/ethernet/brocade/bna/bfi.h:#define bfi_h2i_set(_mh, _mc, _op, _fn_lpu) do {		\
net/ethernet/brocade/bna/bfi.h:#define bfi_i2h_set(_mh, _mc, _op, _i2htok) do {		\
net/ethernet/brocade/bna/bfi.h:#define bfi_msgq_mhdr_set(_mh, _mc, _mid, _tok, _enet_id) do {	\
net/ethernet/brocade/bna/bna_tx_rx.c:do {									\
net/ethernet/brocade/bna/bna_tx_rx.c:do {									\
net/ethernet/brocade/bna/bna_tx_rx.c:do {								    \
net/ethernet/brocade/bna/bna_tx_rx.c:do {									\
net/ethernet/brocade/bna/bna_tx_rx.c:do {									\
net/ethernet/brocade/bna/bna_tx_rx.c:do {									\
net/ethernet/brocade/bna/bna_tx_rx.c:do {									\
net/ethernet/brocade/bna/bfa_defs_mfg_comm.h:do {								\
net/ethernet/brocade/bna/bfa_ioc.c:	do {
net/ethernet/brocade/bna/cna.h:#define bfa_sm_fault(__event)    do {                            \
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bna_enet.c:do {									\
net/ethernet/brocade/bna/bfa_msgq.h:do {									\
net/ethernet/brocade/bna/bfa_ioc.h:#define bfa_ioc_notify_init(__notify, __cbfn, __cbarg) do {	\
net/ethernet/brocade/bna/bfa_ioc.h:#define	bfa_ioc_isr_mode_set(__ioc, __msix) do {			\
net/ethernet/brocade/bna/bfa_ioc.h:#define bfa_ioc_lpu_read_stat(__ioc) do {				\
net/ethernet/chelsio/cxgb3/sge.c:	do {
net/ethernet/chelsio/cxgb3/common.h:#define CH_MSG(adapter, level, category, fmt, ...) do { \
net/ethernet/chelsio/cxgb3/aq100x.c:	do {
net/ethernet/chelsio/cxgb3/t3_hw.c:	do {
net/ethernet/chelsio/cxgb3/t3_hw.c:	do {
net/ethernet/chelsio/cxgb3/t3_hw.c:	do {
net/ethernet/chelsio/cxgb3/t3_hw.c:	do {
net/ethernet/chelsio/cxgb3/t3_hw.c:	do {			/* wait for uP to initialize */
net/ethernet/chelsio/cxgb4/sge.c:	do {
net/ethernet/chelsio/cxgb4/t4_hw.c:#define FIND_VPD_KW(var, name) do { \
net/ethernet/chelsio/cxgb4/t4_hw.c:#define INIT_CMD(var, cmd, rd_wr) do { \
net/ethernet/chelsio/cxgb4/cxgb4_uld.h:#define INIT_TP_WR(w, tid) do { \
net/ethernet/chelsio/cxgb4/cxgb4_uld.h:#define INIT_TP_WR_CPL(w, cpl, tid) do { \
net/ethernet/chelsio/cxgb4/cxgb4_uld.h:#define INIT_ULPTX_WR(w, wrlen, atomic, tid) do { \
net/ethernet/chelsio/cxgb4vf/sge.c:	do {
net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c:		do {\
net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c:		do { \
net/ethernet/chelsio/cxgb/sge.c:	do {
net/ethernet/chelsio/cxgb/espi.c:	do {
net/ethernet/chelsio/cxgb/subr.c:	do {
net/ethernet/chelsio/cxgb/subr.c:	do {
net/ethernet/chelsio/cxgb/mv88e1xxx.c:	do {
net/ethernet/chelsio/cxgb/vsc7326.c:	do {
net/ethernet/chelsio/cxgb/vsc7326.c:	do {
net/ethernet/chelsio/cxgb/vsc7326.c:	do {
net/ethernet/cadence/at91_ether.c:	do {
net/ethernet/mellanox/mlx4/fw.c:	do {							      \
net/ethernet/mellanox/mlx4/fw.c:	do {							      \
net/ethernet/mellanox/mlx4/mlx4_en.h:#define INC_PERF_COUNTER(cnt)		do {} while (0)
net/ethernet/mellanox/mlx4/mlx4_en.h:#define ADD_PERF_COUNTER(cnt, add)	do {} while (0)
net/ethernet/mellanox/mlx4/mlx4_en.h:#define AVG_PERF_COUNTER(cnt, sample)	do {} while (0)
net/ethernet/mellanox/mlx4/mlx4_en.h:do {								\
net/ethernet/mellanox/mlx4/mlx4.h:do {									\
net/ethernet/mellanox/mlx4/reset.c:	do {
net/ethernet/mellanox/mlx4/reset.c:	do {
net/ethernet/mellanox/mlx4/en_tx.c:	do {
net/ethernet/mellanox/mlx4/en_tx.c:		do {
net/ethernet/mellanox/mlx4/mcg.c:	do {
net/ethernet/s6gmac.c:	do {
net/ethernet/ibm/ibmveth.c:		do {
net/ethernet/ibm/ibmveth.c:		do {
net/ethernet/ibm/ibmveth.c:	do {
net/ethernet/ibm/ibmveth.c:	do {
net/ethernet/ibm/ibmveth.c:	do {
net/ethernet/ibm/emac/zmii.h:# define zmii_exit()		do { } while(0)
net/ethernet/ibm/emac/zmii.h:# define zmii_detach(x,y)	do { } while(0)
net/ethernet/ibm/emac/zmii.h:# define zmii_get_mdio(x,y)	do { } while(0)
net/ethernet/ibm/emac/zmii.h:# define zmii_put_mdio(x,y)	do { } while(0)
net/ethernet/ibm/emac/zmii.h:# define zmii_set_speed(x,y,z)	do { } while(0)
net/ethernet/ibm/emac/rgmii.h:# define rgmii_exit()		do { } while(0)
net/ethernet/ibm/emac/rgmii.h:# define rgmii_detach(x,y)	do { } while(0)
net/ethernet/ibm/emac/rgmii.h:# define rgmii_get_mdio(o,i)	do { } while (0)
net/ethernet/ibm/emac/rgmii.h:# define rgmii_put_mdio(o,i)	do { } while (0)
net/ethernet/ibm/emac/rgmii.h:# define rgmii_set_speed(x,y,z)	do { } while(0)
net/ethernet/ibm/emac/tah.h:# define tah_exit()		do { } while(0)
net/ethernet/ibm/emac/tah.h:# define tah_detach(x,y)	do { } while(0)
net/ethernet/ibm/emac/tah.h:# define tah_reset(x)		do { } while(0)
net/ethernet/ibm/emac/debug.h:# define emac_dbg_register(x)	do { } while(0)
net/ethernet/ibm/emac/debug.h:# define emac_dbg_unregister(x)	do { } while(0)
net/ethernet/ibm/emac/debug.h:# define mal_dbg_register(x)	do { } while(0)
net/ethernet/ibm/emac/debug.h:# define mal_dbg_unregister(x)	do { } while(0)
net/ethernet/ibm/emac/debug.h:# define emac_init_debug()	do { } while(0)
net/ethernet/ibm/emac/debug.h:# define emac_fini_debug()	do { } while(0)
net/ethernet/ibm/emac/debug.h:# define emac_dbg_dump_all()	do { } while(0)
net/ethernet/ibm/iseries_veth.c:#define veth_debug(fmt, args...) do {} while (0)
net/ethernet/ibm/iseries_veth.c:	do {
net/ethernet/ibm/iseries_veth.c:		do {
net/ethernet/qlogic/qlge/qlge_dbg.c:do {								\
net/ethernet/qlogic/qlge/qlge_main.c:	do {
net/ethernet/qlogic/qlge/qlge_main.c:		do {
net/ethernet/qlogic/qlge/qlge_main.c:		do {
net/ethernet/qlogic/qlge/qlge_main.c:		do {
net/ethernet/qlogic/qlge/qlge_main.c:	do {
net/ethernet/qlogic/qlge/qlge_mpi.c:	do {
net/ethernet/qlogic/qlge/qlge_mpi.c:	do {
net/ethernet/qlogic/qlge/qlge_mpi.c:	do {
net/ethernet/qlogic/qlge/qlge_mpi.c:	do {
net/ethernet/qlogic/qlge/qlge_mpi.c:	do {
net/ethernet/qlogic/qlge/qlge_mpi.c:	do {
net/ethernet/qlogic/qla3xxx.c:	do {
net/ethernet/qlogic/qla3xxx.c:	do {
net/ethernet/qlogic/qla3xxx.c:	do {
net/ethernet/qlogic/qla3xxx.c:		do {
net/ethernet/qlogic/qla3xxx.c:		do {
net/ethernet/qlogic/qlcnic/qlcnic_main.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic_hdr.h:#define QLCNIC_RD_DUMP_REG(addr, bar0, data) do {			\
net/ethernet/qlogic/qlcnic/qlcnic_hdr.h:#define QLCNIC_WR_DUMP_REG(addr, bar0, data) do {			\
net/ethernet/qlogic/qlcnic/qlcnic_ctx.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic_hw.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic_hw.c:		do {
net/ethernet/qlogic/qlcnic/qlcnic_init.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic_init.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic_init.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic_ethtool.c:		do {
net/ethernet/qlogic/qlcnic/qlcnic_ethtool.c:	do {
net/ethernet/qlogic/qlcnic/qlcnic.h:do {	\
net/ethernet/qlogic/qlcnic/qlcnic.h:#define QLCDB(adapter, lvl, _fmt, _args...) do {	\
net/ethernet/qlogic/netxen/netxen_nic_init.c:	do {
net/ethernet/qlogic/netxen/netxen_nic_init.c:	do {
net/ethernet/qlogic/netxen/netxen_nic_init.c:	do { list_splice_tail_init(list, head); } while (0);
net/ethernet/qlogic/netxen/netxen_nic_main.c:		do {
net/ethernet/qlogic/netxen/netxen_nic_hw.c:	do {
net/ethernet/qlogic/netxen/netxen_nic_hw.c:	do {
net/ethernet/qlogic/netxen/netxen_nic_ctx.c:	do {
net/ethernet/tehuti/tehuti.c:	do { WRITE_REG(priv, regIMR, IR_RUN); } while (0)
net/ethernet/tehuti/tehuti.c:	do { WRITE_REG(priv, regIMR, 0); } while (0)
net/ethernet/tehuti/tehuti.c:		do {
net/ethernet/tehuti/tehuti.h:do {							\
net/ethernet/tehuti/tehuti.h:do {							 \
net/ethernet/tehuti/tehuti.h:#define ENTER do {  } while (0)
net/ethernet/tehuti/tehuti.h:do {						\
net/ethernet/natsemi/jazzsonic.c:do {									\
net/ethernet/natsemi/natsemi.c:	do {
net/ethernet/natsemi/sonic.c:	do {
net/ethernet/natsemi/ns83820.c:#define dprintk(x...)		do { } while (0)
net/ethernet/natsemi/ns83820.c:	do {							\
net/ethernet/natsemi/ns83820.c:	do {
net/ethernet/icplus/ipg.h:do {							\
net/ethernet/icplus/ipg.h:do {							\
net/ethernet/icplus/ipg.h:do {							\
net/ethernet/icplus/ipg.c:	do {
net/ethernet/micrel/ksz884x.c:	do {					\
net/ethernet/micrel/ksz884x.c:	do {
net/ethernet/micrel/ksz884x.c:		do {
net/ethernet/micrel/ksz884x.c:	do {
net/ethernet/micrel/ksz884x.c:	do {
net/ethernet/micrel/ksz884x.c:	do {
net/ethernet/micrel/ksz884x.c:		do {
net/ethernet/micrel/ksz884x.c:	do {
net/ethernet/micrel/ksz884x.c:	do {
net/ethernet/adi/bfin_mac.c:	do {
net/ethernet/dec/tulip/winbond-840.c:	do {
net/ethernet/dec/tulip/tulip_core.c:#define set_bit_le(i,p) do { ((char *)(p))[(i)/8] |= (1<<((i)%8)); } while(0)
net/ethernet/dec/tulip/tulip_core.c:			do {
net/ethernet/dec/tulip/uli526x.c:do {								\
net/ethernet/dec/tulip/de2104x.c:#define set_bit_le(i,p) do { ((char *)(p))[(i)/8] |= (1<<((i)%8)); } while(0)
net/ethernet/dec/tulip/de2104x.c:		do {
net/ethernet/dec/tulip/dmfe.c:	do {						\
net/ethernet/dec/tulip/interrupt.c:       do {
net/ethernet/dec/tulip/interrupt.c:	do {
net/ethernet/apple/bmac.c:	do {
net/ethernet/apple/bmac.c:	do {
net/ethernet/apple/mace.c:	do {
net/ethernet/xilinx/ll_temac_main.c:	do {
net/ethernet/dlink/dl2k.c:	do {
net/ethernet/dlink/dl2k.c:	do {
net/ethernet/dlink/sundance.c:	do {
net/ethernet/dlink/sundance.c:	do {
net/ethernet/dlink/sundance.c:	do {
net/ethernet/dlink/sundance.c:					do {
net/ethernet/dlink/de620.c:		do {
net/ethernet/dlink/de600.c:	do {
net/ethernet/3com/3c515.c:			do {
net/ethernet/3com/3c515.c:	do {
net/ethernet/3com/3c59x.c:		do {
net/ethernet/3com/3c59x.c:	do {
net/ethernet/3com/3c59x.c:			do {
net/ethernet/3com/3c59x.c:	do {
net/ethernet/3com/3c59x.c:			do {
net/ethernet/3com/3c501.c:	do {
net/ethernet/3com/typhoon.c:	do { if(likely(use_mmio)) ioread32(x+TYPHOON_REG_HEARTBEAT); } while(0)
net/ethernet/3com/typhoon.h:	do { struct cmd_desc *_ptr = (x);				\
net/ethernet/3com/typhoon.h:	do { struct cmd_desc *_ptr = (x);				\
net/ethernet/fealnx.c:	do {
net/ethernet/rdc/r6040.c:	do {
net/ethernet/nuvoton/w90p910_ether.c:	do {
net/usb/smsc95xx.c:	do {
net/usb/smsc95xx.c:	do {
net/usb/smsc95xx.c:	do {
net/usb/smsc95xx.c:	do {
net/usb/smsc95xx.c:	do {
net/usb/smsc95xx.c:	do {
net/usb/catc.c:	do {
net/usb/cdc_eem.c:	do {
net/usb/kalmia.c:	do {
net/usb/smsc75xx.c:	do {
net/usb/smsc75xx.c:	do {
net/usb/smsc75xx.c:	do {
net/usb/smsc75xx.c:	do {
net/usb/smsc75xx.c:	do {
net/usb/smsc75xx.c:	do {
net/usb/hso.c:	do {						\
net/usb/hso.c:	do {						\
net/usb/hso.c:	do {					\
net/usb/rtl8150.c:	do {
net/usb/rtl8150.c:	do {
net/usb/rtl8150.c:	do {
net/dummy.c:		do {
net/irda/sir_dev.c:	do {
net/irda/sir_dev.c:	do {
net/irda/w83977af_ir.c:	do {
net/irda/vlsi_ir.c:	do {
net/irda/pxaficp_ir.c:	do {
net/irda/mcs7780.c:	do {
net/irda/bfin_sir.c:		do {
net/irda/smsc-ircc2.c:	do {
net/irda/ali-ircc.c:	do {
net/irda/nsc-ircc.c:	do {
net/irda/sa1100_ir.c:		do {
net/irda/sa1100_ir.c:		do {
net/irda/sa1100_ir.c:	do {
net/macvlan.c:			do {
net/appletalk/cops.c:	do {
net/appletalk/cops.c:		do {
net/appletalk/cops.c:		do {
net/arcnet/arcnet.c:#define arcnet_dump_packet(dev, bufnum, desc,take_arcnet_lock) do { } while (0)
net/arcnet/arcnet.c:	do {
net/vmxnet3/vmxnet3_drv.c:#   define vmxnet3_getRxComp(dstrcd, rcd, tmp) do { \
net/vmxnet3/vmxnet3_drv.c:#   define vmxnet3_getRxDesc(dstrxd, rxd, tmp) do { \
net/vmxnet3/vmxnet3_defs.h:	do {\
net/tokenring/tms380tr.c:        do {
net/tokenring/tms380tr.c:	do {
net/tokenring/tms380tr.c:	do {
net/tokenring/tms380tr.c:	do {
net/tokenring/tms380tr.c:	do {
net/tokenring/tms380tr.c:		do {			/* Inspect BUD results */
net/tokenring/tms380tr.c:	do {
net/tokenring/tms380tr.c:		do {
net/tokenring/tms380tr.c:			do {	/* Test if contents of SCB is valid */
net/tokenring/tms380tr.c:			do {	/* Test if contents of SSB is valid */
net/tokenring/madgemc.c:	do {
net/tokenring/lanstreamer.c:	do {
net/tokenring/lanstreamer.c:					do {	/* Walk the buffers */
net/tokenring/lanstreamer.c:		do {
net/tokenring/skisa.c:	do {
net/tokenring/smctr.c:        do {
net/tokenring/olympic.c:	do {
net/tokenring/olympic.c:						do { /* Walk the buffers */ 
net/tokenring/olympic.c:		do {
net/rionet.c:	do {
net/rionet.c:	do {
net/phy/icplus.c:	do {
net/phy/ste10Xp.c:	do {
net/phy/mdio-octeon.c:	do {
net/phy/mdio-octeon.c:	do {
net/veth.c:		do {
net/ifb.c:	do {
net/ifb.c:	do {
net/hamradio/baycom_ser_fdx.c:	do {
net/hamradio/baycom_ser_hdx.c:	do {
of/base.c:	do {
of/base.c:	do {
of/gpio.c:	do {
of/pdt.c:#define of_pdt_incr_unique_id(p) do { \
of/fdt.c:	do {
of/fdt.c:	do {
of/irq.c:	do {
of/irq.c:	do {
of/irq.c:	do {
parisc/iommu-helpers.h:		do {
parisc/sba_iommu.c:		do {
parisc/gsc.c:	do {
parisc/power.c:	do {
parisc/dino.c:	do {
parport/parport_pc.c:	do {
parport/parport_pc.c:	do {
parport/parport_amiga.c:#define DPRINTK(x...)	do { } while (0)
parport/ieee1284_ops.c:		do {
parport/parport_ip32.c:#	define pr_debug1(...)	do { } while (0)
parport/parport_ip32.c:	do { if (verbose_probing) printk(__VA_ARGS__); } while (0)
parport/parport_ip32.c:#define parport_ip32_dump_state(...)	do { } while (0)
parport/parport_ip32.c:	do {								\
parport/parport_ip32.c:#define CHECK_EXTRA_BITS(...)	do { } while (0)
pci/hotplug/cpqphp_ctrl.c:		do {
pci/hotplug/cpqphp_ctrl.c:	do {
pci/hotplug/cpci_hotplug_pci.c:	do {							\
pci/hotplug/pciehp.h:do {									\
pci/hotplug/pciehp.h:	do {								\
pci/hotplug/pciehp.h:#define pciehp_firmware_init()				do {} while (0)
pci/hotplug/cpcihp_zt5550.c:	do {							\
pci/hotplug/shpchp.h:do {									\
pci/hotplug/shpchp.h:	do {								\
pci/hotplug/cpci_hotplug_core.c:	do {							\
pci/hotplug/cpci_hotplug_core.c:		do {
pci/hotplug/cpci_hotplug_core.c:			do {
pci/hotplug/cpcihp_generic.c:	do {							\
pci/hotplug/acpiphp.h:	do {							\
pci/hotplug/pciehp_hpc.c:	do {
pci/hotplug/acpiphp_ibm.c:do {							\
pci/hotplug/cpqphp_pci.c:		do {
pci/hotplug/ibmphp.h:#define debug(fmt, arg...) do { if (ibmphp_debug == 1) printk(KERN_DEBUG "%s: " fmt , MY_NAME , ## arg); } while (0)
pci/hotplug/ibmphp.h:#define debug_pci(fmt, arg...) do { if (ibmphp_debug) printk(KERN_DEBUG "%s: " fmt , MY_NAME , ## arg); } while (0)
pci/hotplug/ibmphp_hpc.c:#define debug_polling(fmt, arg...)	do { if (to_debug) debug (fmt, arg); } while (0)
pci/hotplug/cpqphp.h:#define dbg(fmt, arg...) do { if (cpqhp_debug) printk(KERN_DEBUG "%s: " fmt , MY_NAME , ## arg); } while (0)
pci/hotplug/ibmphp_core.c:	do {
pci/hotplug/pci_hotplug_core.c:#define dbg(fmt, arg...) do { if (debug) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __func__ , ## arg); } while (0)
pci/hotplug/acpi_pcihp.c:#define dbg(fmt, arg...) do { if (debug_acpi) printk(KERN_DEBUG "%s: %s: " fmt , MY_NAME , __func__ , ## arg); } while (0)
pci/hotplug/pcihp_skeleton.c:	do {							\
pci/hotplug/rpaphp.h:	do {							\
pci/rom.c:	do {
pci/setup-bus.c:#define free_list(type, head) do {                      \
pci/access.c:	do {
pcmcia/soc_common.h:#define debug(skt, lvl, fmt, arg...) do { } while (0)
pcmcia/soc_common.c:	do {
pcmcia/i82092aa.h:#define enter(x)   do {} while (0)
pcmcia/i82092aa.h:#define leave(x)   do {} while (0)
pcmcia/i82092aa.h:#define dprintk(fmt, args...) do {} while (0)
pcmcia/i82365.c:#define LOCKED(x) do { \
pcmcia/m32r_cfc.c:#define LOCKED(x) do {					\
pcmcia/yenta_socket.c:	do {
pcmcia/m32r_pcc.c:#define LOCKED(x) do {					\
pcmcia/cs.c:		do {
pcmcia/cs.c:	do {
pcmcia/au1000_pb1x00.c:#define debug(fmt, arg...) do { } while (0)
pcmcia/au1000_generic.c:	do {
platform/x86/sony-laptop.c:do {						\
platform/x86/fujitsu-laptop.c:	do { if (dbg_level & a_dbg_level) \
platform/x86/intel_ips.c:	do {
platform/x86/intel_ips.c:	do {
platform/x86/toshiba_acpi.c:		do {
platform/x86/toshiba_acpi.c:	do {
platform/x86/thinkpad_acpi.c:do {									\
platform/x86/thinkpad_acpi.c:do {									\
platform/x86/thinkpad_acpi.c:	do { \
platform/x86/thinkpad_acpi.c:	do { \
platform/x86/thinkpad_acpi.c:	do { \
platform/x86/ibm_rtl.c:do {							\
pnp/pnpbios/bioscalls.c:do { \
power/bq27x00_battery.c:		do {
power/max8925_power.c:do {									\
power/isp1704_charger.c:	do {
pps/generators/pps_gen_parport.c:	do {
pps/generators/pps_gen_parport.c:	do {
ps3/ps3av.c:	do {
rapidio/rio-scan.c:	do {
regulator/wm831x-ldo.c:struct wm831x_ldo {
regulator/wm8994-regulator.c:struct wm8994_ldo {
regulator/max8997.c:	do {
rtc/rtc-mrst.c:		do {
rtc/rtc-sh.c:	do {
rtc/interface.c:	do {
rtc/interface.c:		do {
rtc/interface.c:		do {
rtc/rtc-sa1100.c:	do {
rtc/rtc-dev.c:	do {
rtc/rtc-jz4740.c:	do {
rtc/rtc-rx8581.c:	do {
rtc/rtc-mxc.c:	do {
rtc/rtc-mxc.c:	do {
rtc/rtc-cmos.c:		do {
rtc/rtc-ds1307.c:	do {
rtc/rtc-ds1307.c:	do {
rtc/rtc-at91rm9200.c:	do {
rtc/rtc-dm355evm.c:	do {
rtc/rtc-wm8350.c:	do {
rtc/rtc-wm8350.c:	do {
rtc/rtc-wm8350.c:	do {
rtc/rtc-wm8350.c:	do {
rtc/rtc-wm8350.c:		do {
rtc/rtc-vr41xx.c:	do {
rtc/rtc-wm831x.c:	do {
rtc/rtc-wm831x.c:	do {
s390/crypto/zcrypt_api.c:		do {
s390/crypto/zcrypt_api.c:		do {
s390/crypto/zcrypt_api.c:		do {
s390/crypto/zcrypt_api.c:	do {
s390/crypto/zcrypt_api.c:	do {
s390/crypto/zcrypt_api.c:	do {
s390/crypto/ap_bus.c:	do {
s390/crypto/ap_bus.c:	do {
s390/block/dasd_3990_erp.c:	do {
s390/block/dasd_alias.c:	do {
s390/block/dasd.c:#define dasd_profile_start(block, cqr, req) do {} while (0)
s390/block/dasd.c:#define dasd_profile_end(block, cqr, req) do {} while (0)
s390/block/dasd.c:	do {
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:do { \
s390/block/dasd_int.h:#define dasd_eer_exit()		do { } while (0)
s390/block/dasd_int.h:#define dasd_eer_disable(d)	do { } while (0)
s390/block/dasd_int.h:#define dasd_eer_write(d,c,i)	do { } while (0)
s390/block/dasd_int.h:#define dasd_eer_snss(d)	do { } while (0)
s390/char/tape.h:do { \
s390/char/tape.h:#define DBF_LH(level, str, ...) do {} while(0)
s390/char/tape.h:do { \
s390/char/tape.h:do { \
s390/char/sclp_con.c:	do {
s390/char/sclp_con.c:	do {
s390/char/tape_core.c:		do {
s390/char/fs3270.c:	do {
s390/char/sclp_tty.c:	do {
s390/char/sclp_tty.c:	do {
s390/char/tape_std.c:	do {
s390/char/sclp_vt220.c:	do {
s390/char/sclp_vt220.c:	do {
s390/char/sclp.c:	do {
s390/char/sclp.c:	do {
s390/char/sclp_cmd.c:		do {
s390/char/sclp_rw.c:			do {
s390/char/vmur.c:	do {
s390/net/qeth_core_main.c:	do {
s390/net/netiucv.c:	do { \
s390/net/netiucv.c:	do { \
s390/net/netiucv.c:	do { \
s390/net/netiucv.c:	do { \
s390/net/lcs.h:	do { \
s390/net/lcs.h:do { \
s390/net/lcs.h:	do { \
s390/net/claw.h:	do { \
s390/net/claw.h:do { \
s390/net/claw.h:	do { \
s390/net/ctcm_main.h:	do { \
s390/net/ctcm_main.h:	do { \
s390/net/ctcm_main.h:	do { \
s390/net/ctcm_main.h:	do { \
s390/net/lcs.c:	do {
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/ctcm_dbug.h:	do { \
s390/net/qeth_l3_main.c:	do {
s390/cio/chsc_sch.c:#define CHSC_MSG(imp, args...) do {					\
s390/cio/chsc_sch.c:#define CHSC_LOG(imp, txt) do {					\
s390/cio/cmf.c:	do {
s390/cio/chp.c:	do {
s390/cio/cio.c:	do {
s390/cio/cio.c:	do {
s390/cio/qdio_debug.h:	do { \
s390/cio/qdio_debug.h:	do { \
s390/cio/qdio_debug.h:	do { \
s390/cio/qdio_debug.h:	do { \
s390/cio/qdio_debug.h:	do { \
s390/cio/qdio_debug.h:	do { \
s390/cio/device.c:	do {
s390/cio/css.c:	do {
s390/cio/css.c:		do {
s390/cio/cio.h:enum sch_todo {
s390/cio/chsc.c:	do {
s390/cio/io_sch.h:enum cdev_todo {
s390/cio/cio_debug.h:#define CIO_TRACE_EVENT(imp, txt) do {				\
s390/cio/cio_debug.h:#define CIO_MSG_EVENT(imp, args...) do {				\
s390/cio/cio_debug.h:#define CIO_CRW_EVENT(imp, args...) do {				\
scsi/aha1740.c:	do {
scsi/atari_scsi.c:	do {							\
scsi/device_handler/scsi_dh_rdac.c:do { \
scsi/lpfc/lpfc_scsi.h:	do {							\
scsi/lpfc/lpfc_sli.c:	do {
scsi/lpfc/lpfc_sli.c:	do {
scsi/lpfc/lpfc_sli.c:	do {
scsi/lpfc/lpfc_sli.c:	do {
scsi/lpfc/lpfc_sli.c:			do {
scsi/lpfc/lpfc_sli.c:	do {
scsi/lpfc/lpfc_sli.c:	do {
scsi/lpfc/lpfc_debugfs.c:	do {
scsi/lpfc/lpfc_debugfs.c:		do {
scsi/lpfc/lpfc_init.c:	do {
scsi/lpfc/lpfc_init.c:	do {
scsi/lpfc/lpfc_init.c:	do {
scsi/lpfc/lpfc_init.c:	do {
scsi/lpfc/lpfc_init.c:	do {
scsi/lpfc/lpfc_init.c:	do {
scsi/lpfc/lpfc_scsi.c:	do {
scsi/lpfc/lpfc_hbadisc.c:	do {
scsi/lpfc/lpfc_logmsg.h:do { \
scsi/lpfc/lpfc_logmsg.h:do { \
scsi/fnic/fnic_res.c:	do { \
scsi/fnic/fnic_main.c:	do {
scsi/fnic/vnic_dev.c:	do {
scsi/fnic/fnic.h:do {								\
scsi/fnic/fnic.h:		do {						\
scsi/libiscsi_tcp.c:	do {							\
scsi/bfa/bfa_svc.c:#define bfa_rport_offline_cb(__rp) do {					\
scsi/bfa/bfa_svc.c:#define bfa_rport_online_cb(__rp) do {					\
scsi/bfa/bfa_svc.c:	do {
scsi/bfa/bfa_cs.h:#define bfa_sm_fault(__mod, __event)	do {				\
scsi/bfa/bfa_cs.h:#define bfa_fsm_set_state(_fsm, _state) do {	\
scsi/bfa/bfad_drv.h:do {									\
scsi/bfa/bfi.h:#define bfi_h2i_set(_mh, _mc, _op, _fn_lpu) do {		\
scsi/bfa/bfi.h:#define bfi_i2h_set(_mh, _mc, _op, _i2htok) do {		\
scsi/bfa/bfi.h:#define bfi_msgq_mhdr_set(_mh, _mc, _mid, _tok, _enet_id) do {        \
scsi/bfa/bfa_ioc.c:	do {
scsi/bfa/bfad_im.h:#define bfad_get_aen_entry(_drv, _entry) do {				\
scsi/bfa/bfad_im.h:#define bfad_im_post_vendor_event(_entry, _drv, _cnt, _cat, _evt) do {	      \
scsi/bfa/bfa.h:#define bfa_reqq_produce(__bfa, __reqq, __mh)  do {			\
scsi/bfa/bfa.h:#define CQ_INCR(__index, __size) do {			\
scsi/bfa/bfa.h:#define bfa_reqq_wait(__bfa, __reqq, __wqe) do {			\
scsi/bfa/bfa.h:#define bfa_cb_queue(__bfa, __hcb_qe, __cbfn, __cbarg) do {	\
scsi/bfa/bfa.h:#define bfa_cb_queue_once(__bfa, __hcb_qe, __cbfn, __cbarg) do {	\
scsi/bfa/bfa.h:#define bfa_cb_queue_status(__bfa, __hcb_qe, __status) do {		\
scsi/bfa/bfa.h:#define bfa_cb_queue_done(__hcb_qe) do {	\
scsi/bfa/bfa.h:#define bfa_isr_reqq_ack(__bfa, __queue) do {				\
scsi/bfa/bfa.h:#define bfa_isr_mode_set(__bfa, __msix) do {				\
scsi/bfa/bfa.h:#define bfa_pending_q_init(__qe, __cbfn, __cbarg, __data) do {	\
scsi/bfa/bfa_fcpim.c:#define bfa_fcpim_delitn(__itnim)	do {				\
scsi/bfa/bfa_fcpim.c:#define bfa_itnim_online_cb(__itnim) do {				\
scsi/bfa/bfa_fcpim.c:#define bfa_itnim_offline_cb(__itnim) do {				\
scsi/bfa/bfa_fcpim.c:#define bfa_itnim_sler_cb(__itnim) do {					\
scsi/bfa/bfa_fcpim.c:#define bfa_ioim_move_to_comp_q(__ioim) do {				\
scsi/bfa/bfa_fcpim.c:#define bfa_ioim_cb_profile_comp(__fcpim, __ioim) do {			\
scsi/bfa/bfa_fcpim.c:#define bfa_ioim_cb_profile_start(__fcpim, __ioim) do {			\
scsi/bfa/bfa_fcpim.c:#define bfa_tskim_qcomp(__tskim, __cbfn) do {				\
scsi/bfa/bfa_fcpim.c:#define bfa_tskim_notify_comp(__tskim) do {				\
scsi/bfa/bfa_fcs.c:#define bfa_fcs_fabric_set_opertype(__fabric) do {			\
scsi/bfa/bfa_defs.h:do {                                                            \
scsi/bfa/bfa_fcpim.h:#define bfa_ioim_update_iotag(__ioim) do {				\
scsi/bfa/bfa_ioc.h:#define bfa_sge_word_swap(__sge) do {					     \
scsi/bfa/bfa_ioc.h:#define bfa_mem_dma_setup(_meminfo, _dm_ptr, _seg_sz) do {	\
scsi/bfa/bfa_ioc.h:#define bfa_mem_kva_setup(_meminfo, _kva_ptr, _seg_sz) do {	\
scsi/bfa/bfa_ioc.h:#define bfa_ioc_notify_init(__notify, __cbfn, __cbarg) do {	\
scsi/bfa/bfa_ioc.h:#define bfa_ioc_isr_mode_set(__ioc, __msix) do {			\
scsi/bfa/bfa_ioc.h:#define bfa_ioc_lpu_read_stat(__ioc) do {			\
scsi/aic7xxx_old.c:  do {                                                               \
scsi/aic7xxx_old.c:    do {                                                             \
scsi/ncr53c8xx.h:#define OUTW_OFF(o, val)	do { writeb((char)((val) >> 8), (char __iomem *)np->reg + ncr_offw(o)); writeb((char)(val), (char __iomem *)np->reg + ncr_offw(o) + 1); } while (0)
scsi/ncr53c8xx.h:	do {					\
scsi/ncr53c8xx.h:	do {					\
scsi/ncr53c8xx.h:do {						\
scsi/osd/osd_uld.c:	do {
scsi/osd/osd_debug.h:#define OSD_DEBUG(fmt, a...) do {} while (0)
scsi/osd/osd_initiator.c:	do { \
scsi/NCR5380.c:#define SPRINTF(args...) do { if(pos < buffer + length-80) pos += sprintf(pos, ## args); } while(0)
scsi/NCR5380.c:	do {
scsi/NCR5380.c:	do {
scsi/NCR5380.c:	do {
scsi/NCR5380.c:	do {
scsi/mpt2sas/mpt2sas_scsih.c:	do {
scsi/mpt2sas/mpt2sas_base.c:	do {
scsi/mpt2sas/mpt2sas_base.c:	do {
scsi/mpt2sas/mpt2sas_base.c:	do {
scsi/mpt2sas/mpt2sas_base.c:	do {
scsi/mpt2sas/mpt2sas_base.c:	do {
scsi/mpt2sas/mpt2sas_base.c:	do {
scsi/mpt2sas/mpt2sas_base.c:		do {
scsi/wd7000.c:			do {
scsi/wd7000.c:		do {
scsi/wd33c93.c:	do {
scsi/wd33c93.c:		do {
scsi/wd33c93.c:		do {
scsi/wd33c93.c:		do {
scsi/aha152x.c:	do { if(HOSTDATA(shpnt)->debug & (when)) printk(msgs); } while(0)
scsi/aha152x.c:	do { \
scsi/aha152x.c:	do { \
scsi/aha152x.c:	do {
scsi/aha152x.c:	do { if(pos < buffer + length) pos += sprintf(pos, ## args); } while(0)
scsi/dc395x.c:	do { \
scsi/dc395x.c:	do {} while (0)
scsi/dc395x.c:	do {
scsi/dc395x.c:			do {
scsi/dtc.h:#define dbNCR5380_write(reg, value) do {                                  \
scsi/dtc.h:#define NCR5380_write(reg, value) do {					\
scsi/3w-9xxx.c:	do {
scsi/3w-xxxx.c:	do {
scsi/mvsas/mv_chips.h:#define mw32_f(reg, val)	do {			\
scsi/mvsas/mv_94xx.c:		do {
scsi/mvsas/mv_94xx.c:		do {
scsi/mvsas/mv_init.c:	do {
scsi/mvsas/mv_64xx.c:		do {
scsi/mvsas/mv_64xx.c:	do {
scsi/mvsas/mv_64xx.c:	do {
scsi/atari_NCR5380.c:	do {							\
scsi/atari_NCR5380.c:	do {							\
scsi/atari_NCR5380.c:	do {									\
scsi/atari_NCR5380.c:	do {						\
scsi/atari_NCR5380.c:	do {
scsi/atari_NCR5380.c:	do {
scsi/ipr.h:#define ipr_remove_trace_file(kobj, attr) do { } while(0)
scsi/ipr.h:#define ipr_remove_dump_file(kobj, attr) do { } while(0)
scsi/gdth_proc.c:            do {
scsi/in2000.c:	do {
scsi/in2000.c:		do {
scsi/in2000.c:		do {
scsi/in2000.c:		do {
scsi/eata_pio.c:		do {
scsi/eata_pio.c:	do {
scsi/ibmvscsi/rpa_vscsi.c:	do {
scsi/ibmvscsi/rpa_vscsi.c:	do {
scsi/ibmvscsi/rpa_vscsi.c:	do {
scsi/ibmvscsi/rpa_vscsi.c:	do {
scsi/ibmvscsi/ibmvscsi.c:	do {
scsi/ibmvscsi/ibmvscsi.c:	do {
scsi/ibmvscsi/ibmvfc.c:#define ibmvfc_trc_start(evt) do { } while (0)
scsi/ibmvscsi/ibmvfc.c:#define ibmvfc_trc_end(evt) do { } while (0)
scsi/ibmvscsi/ibmvfc.c:	do {
scsi/ibmvscsi/ibmvfc.c:	do {
scsi/ibmvscsi/ibmvfc.c:	do {
scsi/ibmvscsi/ibmvfc.c:	do {
scsi/ibmvscsi/ibmvfc.c:	do {
scsi/ibmvscsi/ibmvfc.c:	do {
scsi/ibmvscsi/ibmvstgt.c:do {								\
scsi/ibmvscsi/ibmvstgt.c:	    do {
scsi/ibmvscsi/ibmvstgt.c:	do {
scsi/ibmvscsi/ibmvstgt.c:	do {
scsi/ibmvscsi/ibmvfc.h:#define DBG_CMD(CMD) do { if (ibmvfc_debug) CMD; } while (0)
scsi/ibmvscsi/ibmvfc.h:	do { \
scsi/ibmvscsi/ibmvfc.h:	do { \
scsi/ibmvscsi/ibmvfc.h:#define ibmvfc_remove_trace_file(kobj, attr) do { } while (0)
scsi/nsp32.c:	do {
scsi/nsp32.c:	do {
scsi/nsp32.c:	do { \
scsi/nsp32.c:	do {
scsi/nsp32.c:	do {
scsi/a100u2w.c:	do {
scsi/scsi_scan.c:	do {
scsi/sr.c:	do {
scsi/hptiop.h:#define dprintk(fmt, args...) do { printk(fmt, ##args); } while(0)
scsi/FlashPoint.c:		do {
scsi/FlashPoint.c:	do {
scsi/FlashPoint.c:		do {
scsi/FlashPoint.c:			do {
scsi/FlashPoint.c:		do {
scsi/FlashPoint.c:	do {
scsi/FlashPoint.c:	do {
scsi/fd_mcs.c:	do {
scsi/fd_mcs.c:	do {
scsi/bnx2fc/bnx2fc_io.c:			do {
scsi/bnx2fc/bnx2fc_debug.h:	do {								\
scsi/bnx2fc/bnx2fc_debug.h:			do {						\
scsi/bnx2fc/bnx2fc_debug.h:	do {								\
scsi/bnx2fc/bnx2fc_debug.h:	do {								\
scsi/bnx2fc/bnx2fc_debug.h:	do {								\
scsi/scsi_logging.h:do {								\
scsi/scsi_logging.h:		do {						\
scsi/iscsi_tcp.c:	do {							\
scsi/iscsi_tcp.c:	do {
scsi/scsi_transport_iscsi.c:	do {								\
scsi/scsi_transport_iscsi.c:	do {								\
scsi/scsi_transport_iscsi.c:	do {
scsi/scsi_transport_iscsi.c:		do {
scsi/pcmcia/nsp_cs.c:	do {
scsi/pcmcia/nsp_cs.c:	do {
scsi/pcmcia/nsp_cs.c:	do {
scsi/pcmcia/nsp_cs.c:        do { \
scsi/pcmcia/nsp_message.c:	do {
scsi/pcmcia/nsp_message.c:	do {
scsi/arm/eesox.c:	do {
scsi/arm/eesox.c:	do {
scsi/arm/acornscsi.c:	do {
scsi/arm/acornscsi.c:    do {
scsi/arm/acornscsi.c:    do {
scsi/arm/acornscsi.c:    do {
scsi/arm/acornscsi.c:    do {
scsi/arm/acornscsi.c:    do {
scsi/arm/queue.c:#define SET_MAGIC(q,m)	do { } while (0)
scsi/arm/fas216.c:	do {
scsi/arm/fas216.c:	do {
scsi/arm/fas216.c:	do {
scsi/arm/fas216.c:	do {
scsi/arm/fas216.c:	do {
scsi/libfc/fc_libfc.h:	do {						\
scsi/libfc/fc_libfc.h:			do {				\
scsi/ips.h:	do {				\
scsi/tmscsim.h:#define SET_RES_TARGET(who, tgt) do { who &= ~RES_TARGET; who |= (int)(tgt); } while (0)
scsi/tmscsim.h:#define SET_RES_TARGET_LNX(who, tgt) do { who &= ~RES_TARGET_LNX; who |= (int)(tgt) << 1; } while (0)
scsi/tmscsim.h:#define SET_RES_MSG(who, msg) do { who &= ~RES_ENDMSG; who |= (int)(msg) << 8; } while (0)
scsi/tmscsim.h:#define SET_RES_DID(who, did) do { who &= ~RES_DID; who |= (int)(did) << 16; } while (0)
scsi/tmscsim.h:#define SET_RES_DRV(who, drv) do { who &= ~RES_DRV; who |= (int)(drv) << 24; } while (0)
scsi/NCR5380.h:#define dprintk(a,b)			do {} while(0)
scsi/NCR5380.h:#define NCR5380_dprint(a,b)		do {} while(0)
scsi/NCR5380.h:#define NCR5380_dprint_phase(a,b)	do {} while(0)
scsi/libiscsi.c:	do {							\
scsi/libiscsi.c:	do {								\
scsi/libiscsi.c:	do {								\
scsi/libiscsi.c:	do {
scsi/mvumi.c:	do {
scsi/mvumi.c:	do {
scsi/mvumi.c:	do {
scsi/sg.c:	do {
scsi/scsi_lib.c:	do {
scsi/arcmsr/arcmsr_hba.c:	do {
scsi/arcmsr/arcmsr_hba.c:	do {
scsi/arcmsr/arcmsr_hba.c:	do {
scsi/arcmsr/arcmsr_hba.c:	do {
scsi/arcmsr/arcmsr_hba.c:		do {
scsi/arcmsr/arcmsr_hba.c:		do {
scsi/arcmsr/arcmsr_hba.c:		do {
scsi/arcmsr/arcmsr_hba.c:		do {
scsi/mesh.c:	do {
scsi/mesh.c:	do {
scsi/mesh.c:	do {
scsi/isci/host.c:	do {
scsi/isci/host.c:	do {
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_INTR) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_RESET) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_MSGIN) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_MSGOUT) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_CMDDONE) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_DISCONNECT) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_DATASTART) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_DATADONE) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_RECONNECT) \
scsi/esp_scsi.c:do {	if (esp_debug & ESP_DEBUG_AUTOSENSE) \
scsi/esp_scsi.c:	do {
scsi/aha1542.c:		do {
scsi/aha1542.c:	do {
scsi/aha1542.c:	do {
scsi/aha1542.c:	do {
scsi/be2iscsi/be_main.h:do {							\
scsi/be2iscsi/be_cmds.c:	do {
scsi/be2iscsi/be_cmds.c:	do {
scsi/be2iscsi/be_main.c:		do {
scsi/be2iscsi/be.h:	do {
scsi/megaraid/megaraid_sas_base.c:	do {
scsi/megaraid/megaraid_mbox.c:		do {
scsi/megaraid/megaraid_mbox.c:	do {
scsi/osst.c:	do {
scsi/3w-xxxx.h:#define dprintk(msg...) do { } while(0)
scsi/megaraid.c:		do {
scsi/megaraid.c:	do {
scsi/megaraid.c:	do {
scsi/mac_esp.c:	do {
scsi/mac_esp.c:	do {
scsi/mac_esp.c:	do {
scsi/mac_esp.c:	do {
scsi/mac_esp.c:	do {
scsi/mac_esp.c:	do {
scsi/ppa.c:	do {
scsi/ppa.c:	do {
scsi/ppa.c:		do {
scsi/libsrp.c:do {								\
scsi/fcoe/libfcoe.h:do {							\
scsi/fcoe/libfcoe.h:		do {					\
scsi/fcoe/fcoe.h:do {                                                            	\
scsi/fcoe/fcoe.h:		do {							\
scsi/qlogicpti.c:		do {
scsi/qla4xxx/ql4_os.c:	do {
scsi/qla4xxx/ql4_os.c:	do {
scsi/qla4xxx/ql4_os.c:		do {
scsi/qla4xxx/ql4_os.c:	do {
scsi/qla4xxx/ql4_os.c:	do {
scsi/qla4xxx/ql4_os.c:	do {
scsi/qla4xxx/ql4_nx.c:		do {
scsi/qla4xxx/ql4_nvram.c:	do {
scsi/qla4xxx/ql4_dbg.h:#define DEBUG(x)   do {x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG(x)	do {} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG2(x)      do {if(ql4xextended_error_logging == 2) x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG2_3(x)   do {x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG2(x)	do {} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG3(x)      do {if(ql4xextended_error_logging == 3) x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG3(x)	do {} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG2_3(x)	do {} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG4(x)	do {x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG4(x)	do {} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG5(x)	do {x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG5(x)	do {} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG9(x)	do {x;} while (0);
scsi/qla4xxx/ql4_dbg.h:#define DEBUG9(x)	do {} while (0);
scsi/qla4xxx/ql4_init.c:	do {
scsi/libsas/sas_expander.c:	do {
scsi/libsas/sas_expander.c:	do {
scsi/libsas/sas_expander.c:		do {
scsi/libsas/sas_ata.c:	do {
scsi/libsas/sas_internal.h:#define ASSIGN_SAS_TASK(_sc, _t) do { (_sc)->host_scribble = (void *) _t; } while (0)
scsi/ipr.c:#define ipr_trc_hook(ipr_cmd, type, add_data) do { } while(0)
scsi/ipr.c:#define ipr_get_ioa_dump(ioa_cfg, dump) do { } while(0)
scsi/ipr.c:	do {
scsi/ipr.c:			do {
scsi/ipr.c:	do {
scsi/imm.c:	do {
scsi/imm.c:	do {
scsi/imm.c:	do {
scsi/imm.c:		do {
scsi/3w-sas.c:	do {
scsi/scsi_tgt_priv.h:do {								\
scsi/fdomain.c:   do {
scsi/fdomain.c:   do {
scsi/scsi_priv.h:# define scsi_proc_hostdir_add(sht)	do { } while (0)
scsi/scsi_priv.h:# define scsi_proc_hostdir_rm(sht)	do { } while (0)
scsi/scsi_priv.h:# define scsi_proc_host_add(shost)	do { } while (0)
scsi/scsi_priv.h:# define scsi_proc_host_rm(shost)	do { } while (0)
scsi/scsi_priv.h:# define scsi_exit_procfs()		do { } while (0)
scsi/scsi_priv.h:# define scsi_exit_sysctl()		do { } while (0)
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:		do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_hwi.c:	do {
scsi/pm8001/pm8001_sas.h:do {						\
scsi/pm8001/pm8001_sas.h:		do {					\
scsi/pm8001/pm8001_sas.c:	do {
scsi/scsi_transport_spi.c:	do {
scsi/scsi_transport_spi.c:		do {
scsi/cxgbi/libcxgbi.c:	do {
scsi/cxgbi/libcxgbi.c:	do {
scsi/cxgbi/libcxgbi.h:	do {	\
scsi/cxgbi/libcxgbi.h:#define cxgbi_align_pdu_size(n) do { n = (n) & (~511); } while (0)
scsi/hpsa.c:	do {
scsi/hpsa.c:	do {
scsi/aic7xxx/aic7xxx_core.c:	do {
scsi/aic7xxx/aic7xxx_core.c:	do {
scsi/aic7xxx/aicasm/aicasm_scan.l:	do {
scsi/aic7xxx/queue.h:#define	SLIST_INIT(head) do {						\
scsi/aic7xxx/queue.h:#define	SLIST_INSERT_AFTER(slistelm, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	SLIST_INSERT_HEAD(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	SLIST_REMOVE(head, elm, type, field) do {			\
scsi/aic7xxx/queue.h:#define	SLIST_REMOVE_HEAD(head, field) do {				\
scsi/aic7xxx/queue.h:#define	STAILQ_INIT(head) do {						\
scsi/aic7xxx/queue.h:#define	STAILQ_INSERT_AFTER(head, tqelm, elm, field) do {		\
scsi/aic7xxx/queue.h:#define	STAILQ_INSERT_HEAD(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	STAILQ_INSERT_TAIL(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	STAILQ_REMOVE(head, elm, type, field) do {			\
scsi/aic7xxx/queue.h:#define	STAILQ_REMOVE_HEAD(head, field) do {				\
scsi/aic7xxx/queue.h:#define	STAILQ_REMOVE_HEAD_UNTIL(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	LIST_INIT(head) do {						\
scsi/aic7xxx/queue.h:#define	LIST_INSERT_AFTER(listelm, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	LIST_INSERT_BEFORE(listelm, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	LIST_INSERT_HEAD(head, elm, field) do {				\
scsi/aic7xxx/queue.h:#define	LIST_REMOVE(elm, field) do {					\
scsi/aic7xxx/queue.h:#define	TAILQ_INIT(head) do {						\
scsi/aic7xxx/queue.h:#define	TAILQ_INSERT_AFTER(head, listelm, elm, field) do {		\
scsi/aic7xxx/queue.h:#define	TAILQ_INSERT_BEFORE(listelm, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	TAILQ_INSERT_HEAD(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	TAILQ_INSERT_TAIL(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	TAILQ_REMOVE(head, elm, field) do {				\
scsi/aic7xxx/queue.h:#define	CIRCLEQ_INIT(head) do {						\
scsi/aic7xxx/queue.h:#define	CIRCLEQ_INSERT_AFTER(head, listelm, elm, field) do {		\
scsi/aic7xxx/queue.h:#define	CIRCLEQ_INSERT_BEFORE(head, listelm, elm, field) do {		\
scsi/aic7xxx/queue.h:#define	CIRCLEQ_INSERT_HEAD(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	CIRCLEQ_INSERT_TAIL(head, elm, field) do {			\
scsi/aic7xxx/queue.h:#define	CIRCLEQ_REMOVE(head, elm, field) do {				\
scsi/aic7xxx/aic79xx.h:do {									\
scsi/aic7xxx/aic79xx.h:do {								\
scsi/aic7xxx/aic79xx.h:do {									\
scsi/aic7xxx/aic79xx.h:do {									\
scsi/aic7xxx/aic79xx.h:do {									\
scsi/aic7xxx/aic79xx_core.c:	do {
scsi/aic7xxx/aic79xx_core.c:		do {
scsi/aic7xxx/aic79xx_core.c:	do {
scsi/aic7xxx/aic79xx_core.c:	do {
scsi/aic7xxx/aic79xx_core.c:		do {
scsi/aic7xxx/aic79xx_inline.h:do {								\
scsi/aic7xxx/aic7xxx_93cx6.h:do {								\
scsi/aic7xxx/aic7xxx_93cx6.c:		do {
scsi/qla1280.c:	do { if (ql_debug_level >= level) printk(KERN_ERR format, ##a); } while(0)
scsi/qla1280.c:	do {
scsi/sd.c:	do {
scsi/sd.c:		do {
scsi/sd.c:	do {
scsi/sd.c:	do {
scsi/sd.c:	do {
scsi/sd.c:	do {
scsi/aacraid/src.c:			do {
scsi/aacraid/rx.c:		do {
scsi/aacraid/aachba.c:			do {
scsi/sun3_NCR5380.c:  do { if (pos + strlen(fmt) + 20 /* slop */ < buffer + length) \
scsi/sun3_NCR5380.c:    do {					\
scsi/sun3_NCR5380.c:    do {
scsi/sun3_NCR5380.c:    do {
scsi/gdth.c:    do {
scsi/gdth.c:    do {
scsi/gdth.c:    do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:		do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:	do {
scsi/dpt_i2o.c:	do {
scsi/ch.c:do {									\
scsi/ch.c:do {									\
scsi/sun3x_esp.c:	do { *(volatile u32 *)(esp->dma_regs + (REG)) = (VAL); } while (0)
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_sup.c:		do {
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_sup.c:		do {
scsi/qla2xxx/qla_sup.c:	do {	/* Loop once to provide quick error exit */
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_sup.c:	do {
scsi/qla2xxx/qla_nx.c:	do {
scsi/qla2xxx/qla_nx.c:	do {
scsi/qla2xxx/qla_nx.c:	do {
scsi/qla2xxx/qla_nx.c:	do {
scsi/qla2xxx/qla_nx.c:			do {
scsi/qla2xxx/qla_nx.c:			do {
scsi/qla2xxx/qla_init.c:	do {
scsi/qla2xxx/qla_init.c:	do {
scsi/qla2xxx/qla_init.c:			do {
scsi/qla2xxx/qla_init.c:			do {
scsi/qla2xxx/qla_init.c:			do {
scsi/qla2xxx/qla_mbx.c:	do {
scsi/qla2xxx/qla_inline.h:	do {
scsi/qla2xxx/qla_os.c:		do {
scsi/qla2xxx/qla_isr.c:	do {
scsi/qla2xxx/qla_def.h:do {							\
scsi/qla2xxx/qla_def.h:#define QLA_VHA_MARK_BUSY(__vha, __bail) do {		     \
scsi/qla2xxx/qla_def.h:#define QLA_VHA_MARK_NOT_BUSY(__vha) do {		     \
scsi/scsi_debug.c:		do {
scsi/scsi_debug.c:		do {
scsi/sym53c8xx_2/sym_hipd.c:	do {
scsi/sym53c8xx_2/sym_nvram.c:		do {
scsi/sym53c8xx_2/sym_hipd.h:	do {					\
scsi/sym53c8xx_2/sym_hipd.h:	do {					\
scsi/sym53c8xx_2/sym_hipd.h:	do {							\
scsi/sym53c8xx_2/sym_hipd.h:	do {							\
scsi/sym53c8xx_2/sym_hipd.h:#define set_dac(np)	do { } while (0)
scsi/sym53c8xx_2/sym_hipd.h:do {						\
scsi/sym53c8xx_2/sym_hipd.h:do {									\
scsi/sym53c8xx_2/sym_misc.h:#define sym_que_init(ptr) do { \
scsi/advansys.c:do { \
scsi/advansys.c:do { \
scsi/advansys.c:	do {
scsi/advansys.c:	do {
scsi/advansys.c:				do {
scsi/advansys.c:	do {
scsi/advansys.c:		do {
scsi/aic94xx/aic94xx_sds.c:	do {
scsi/aic94xx/aic94xx_reg.h:	do {
scsi/aic94xx/aic94xx_hwi.c:	do {
scsi/aic94xx/aic94xx_seq.c:	do {
scsi/aic94xx/aic94xx_seq.c:	do {
scsi/aic94xx/aic94xx_seq.c:	do {
scsi/aic94xx/aic94xx_seq.c:	do {
scsi/53c700.h:#define DEBUG(x)	do {} while (0)
scsi/53c700.h:#define DDEBUG(prefix, scmd, fmt, a...) do {} while (0)
scsi/53c700.h:#define CDEBUG(prefix, scmd, fmt, a...) do {} while (0)
sh/intc/handle.c:	do {
sh/intc/handle.c:	do {
sn/ioc3.c:        do {
spi/spi-topcliff-pch.c:	do {
spi/spi-au1550.c:	do {
spi/spi-au1550.c:		do {
spi/spi-au1550.c:		do {
spi/spi-au1550.c:	do {
spi/spi-au1550.c:	do {
spi/spi-au1550.c:	do {
spi/spi-pl022.c:	do {
spi/spi-gpio.c:#define spidelay(nsecs)	do {} while (0)
spi/spi-ppc4xx.c:		do {
spi/spi-omap-100k.c:#define MOD_REG_BIT(val, mask, set) do { \
spi/spi-omap-100k.c:		do {
spi/spi-omap-100k.c:		do {
spi/spi-omap-100k.c:		do {
spi/spi-omap2-mcspi.c:#define MOD_REG_BIT(val, mask, set) do { \
spi/spi-omap2-mcspi.c:		do {
spi/spi-omap2-mcspi.c:		do {
spi/spi-omap2-mcspi.c:		do {
spi/spi-s3c64xx.c:	do {
spi/spi-s3c64xx.c:	do {
spi/spi-s3c64xx.c:		do {
spi/spi-pxa2xx.c:	do {
spi/spi-pxa2xx.c:	do {
spi/spi-coldfire-qspi.c:		do {
spi/spi-coldfire-qspi.c:		do {
spi/spi-dw.c:	do {
spi/spi-stmp.c:	do {								\
spi/spi-orion.c:		do {
spi/spi-orion.c:		do {
ssb/ssb_private.h:# define ssb_printk(fmt, x...)	do { /* nothing */ } while (0)
ssb/ssb_private.h:# define ssb_dprintk(fmt, x...)	do { /* nothing */ } while (0)
ssb/sdio.c:#define GOTO_ERROR_ON(condition, description) do {	\
ssb/pcmcia.c:#define GOTO_ERROR_ON(condition, description) do {	\
staging/crystalhd/crystalhd_hw.c:do {								\
staging/crystalhd/crystalhd_hw.c:	do {
staging/crystalhd/crystalhd_hw.c:	do {
staging/crystalhd/crystalhd_misc.c:	do {
staging/crystalhd/crystalhd_misc.c:	do {
staging/crystalhd/crystalhd_misc.c:	do {
staging/crystalhd/crystalhd_lnx.c:	do {
staging/crystalhd/crystalhd_misc.h:do {									\
staging/crystalhd/crystalhd_misc.h:do {									\
staging/winbond/wb35tx.c:	do {
staging/winbond/wb35reg.c:	do {
staging/winbond/mds.c:	do {
staging/winbond/mds.c:		do {
staging/winbond/wb35rx.c:	do {
staging/winbond/wb35rx.c:	do {
staging/intel_sst/intel_sst_app_interface.c:	do {
staging/intel_sst/intel_sst_app_interface.c:	do {
staging/intel_sst/intel_sst_app_interface.c:	do {
staging/pohmelfs/netfs.h:#define dprintka(f, a...) do {} while (0)
staging/pohmelfs/netfs.h:#define dprintk(f, a...) do {} while (0)
staging/pohmelfs/inode.c:	do {
staging/rtl8712/hal_init.c:		do {
staging/rtl8712/hal_init.c:		do {
staging/rtl8712/rtl8712_xmit.c:			do {
staging/rtl8712/rtl871x_mlme.c:	do {
staging/rtl8712/rtl8712_efuse.c:	do {
staging/rtl8712/rtl8712_efuse.c:	do {
staging/rtl8712/rtl871x_security.h:do { \
staging/rtl8712/rtl871x_security.h:do {\
staging/rtl8712/rtl871x_security.h:do {\
staging/rtl8712/rtl8712_cmd.c:	do {
staging/rtl8712/rtl8712_recv.c:	do {
staging/rtl8712/rtl8712_recv.c:	do {
staging/rtl8712/big_endian.h:#define __cpu_to_be64s(x) do {} while (0)
staging/rtl8712/big_endian.h:#define __be64_to_cpus(x) do {} while (0)
staging/rtl8712/big_endian.h:#define __cpu_to_be32s(x) do {} while (0)
staging/rtl8712/big_endian.h:#define __be32_to_cpus(x) do {} while (0)
staging/rtl8712/big_endian.h:#define __cpu_to_be16s(x) do {} while (0)
staging/rtl8712/big_endian.h:#define __be16_to_cpus(x) do {} while (0)
staging/rtl8712/osdep_service.h:	do {						\
staging/rtl8712/usb_halinit.c:		do {
staging/rtl8712/rtl871x_eeprom.c:	do {
staging/rtl8712/wifi.h:	do {	\
staging/rtl8712/wifi.h:	do {    \
staging/rtl8712/wifi.h:	do {    \
staging/rtl8712/wifi.h:	do {    \
staging/rtl8712/wifi.h:	do {    \
staging/rtl8712/xmit_linux.c:	do {
staging/rtl8712/little_endian.h:#define __cpu_to_le64s(x) do {} while (0)
staging/rtl8712/little_endian.h:#define __le64_to_cpus(x) do {} while (0)
staging/rtl8712/little_endian.h:#define __cpu_to_le32s(x) do {} while (0)
staging/rtl8712/little_endian.h:#define __le32_to_cpus(x) do {} while (0)
staging/rtl8712/little_endian.h:#define __cpu_to_le16s(x) do {} while (0)
staging/rtl8712/little_endian.h:#define __le16_to_cpus(x) do {} while (0)
staging/rtl8712/rtl871x_xmit.h:do { \
staging/rtl8712/rtl871x_xmit.h:do { \
staging/rtl8712/rtl871x_xmit.h:do { \
staging/rtl8712/rtl871x_cmd.h:do {\
staging/octeon/cvmx-spi.c:	do {					\
staging/octeon/cvmx-spi.c:	do {
staging/octeon/cvmx-spi.c:	do {
staging/octeon/cvmx-spi.c:	do {
staging/octeon/cvmx-spi.c:		do {
staging/octeon/cvmx-fpa.c:	do {
staging/octeon/ethernet-mem.c:	do {
staging/octeon/ethernet-mem.c:	do {
staging/octeon/cvmx-mdio.h:	do {
staging/octeon/cvmx-mdio.h:	do {
staging/octeon/cvmx-mdio.h:	do {
staging/octeon/cvmx-mdio.h:	do {
staging/octeon/cvmx-mdio.h:	do {
staging/octeon/cvmx-mdio.h:	do {
staging/octeon/cvmx-helper.c:		do {
staging/rtl8187se/r8180_core.c:	do {
staging/rtl8187se/r8180_core.c:		do {
staging/rtl8187se/ieee80211/ieee80211.h:do { if (ieee80211_debug_level & (level)) \
staging/rtl8187se/ieee80211/ieee80211.h:#define IEEE80211_DEBUG(level, fmt, args...) do {} while (0)
staging/vt6656/rxtx.c:        do {
staging/vt6656/rxtx.c:        do {
staging/usbip/usbip_common.c:	do {
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_COMMON(pack, op_common)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_IMPORT_REQUEST(pack, request)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_IMPORT_REPLY(pack, reply)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_EXPORT_REQUEST(pack, request)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_EXPORT_REPLY(pack, reply)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_UNEXPORT_REQUEST(pack, request)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_UNEXPORT_REPLY(pack, reply)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_DEVLIST_REQUEST(pack, request)  do {\
staging/usbip/userspace/src/usbip_network.h:#define PACK_OP_DEVLIST_REPLY(pack, reply)  do {\
staging/usbip/userspace/src/usbip_network.c:	do {
staging/usbip/userspace/libsrc/usbip_common.c:	do { (object)->name = (type) read_attr_value(dev, to_string(name), format); } while (0)
staging/usbip/userspace/libsrc/usbip_common.h:	do {								\
staging/usbip/userspace/libsrc/usbip_common.h:	do {								\
staging/usbip/userspace/libsrc/usbip_common.h:	do {								\
staging/usbip/userspace/libsrc/usbip_common.h:	do {						\
staging/usbip/usbip_common.h:	do {						\
staging/cptm1217/clearpad_tm1217.c:	do {
staging/rts5139/rts51x_chip.h:do {						\
staging/rts5139/rts51x_chip.h:do {							\
staging/rts5139/rts51x_chip.h:do {							\
staging/rts5139/rts51x_chip.h:do {							\
staging/rts5139/xd.h:	do {	\
staging/rts5139/ms.c:	do {
staging/rts5139/ms.c:	do {
staging/rts5139/rts51x.h:do {						\
staging/rts5139/rts51x_scsi.c:	do { if (pos < buffer+length) pos += sprintf(pos, ## args); } while (0)
staging/rts5139/sd.c:	do {
staging/rts5139/sd.c:	do {
staging/rts5139/trace.h:do {									\
staging/rts5139/trace.h:do {									\
staging/rts5139/trace.h:do {								\
staging/wlags49_h2/hcfdef.h:#define MSF_WAIT(x) do {						\
staging/wlags49_h2/hcfdef.h:#define MSF_WAIT(x) do { } while (0)
staging/wlags49_h2/hcfdef.h:#define DAWA_ACK( mask) do {						\
staging/wlags49_h2/hcfdef.h:#define DAWA_ZERO_FID(reg) do { } while (0)
staging/wlags49_h2/hcfdef.h:#define IF_TALLY(x) do { x; } while (0)
staging/wlags49_h2/hcfdef.h:#define IF_TALLY(x) do { } while (0)
staging/wlags49_h2/hcfdef.h:#define IF_DMA(x)           do { x; } while(0)
staging/wlags49_h2/hcfdef.h:#define IF_NOT_DMA(x)       do { } while(0)
staging/wlags49_h2/hcfdef.h:#define IF_DMA(x)           do { } while(0)
staging/wlags49_h2/hcfdef.h:#define IF_NOT_DMA(x)       do { x; } while(0)
staging/wlags49_h2/hcfdef.h:#define IF_USE_DMA(x)       do { } while(0)
staging/wlags49_h2/hcfdef.h:#define IF_NOT_USE_DMA(x)   do { x; } while(0)
staging/wlags49_h2/hcfdef.h:#define PROT_CNT_INI    do { } while(0)
staging/wlags49_h2/hcfdef.h:#define IF_PROT_TIME(x) do { } while(0)
staging/wlags49_h2/hcfdef.h:#define HCF_WAIT_WHILE( x ) do { } while( (x) && (HCF_YIELD) )
staging/wlags49_h2/hcfdef.h:#define HCF_WAIT_WHILE( x ) do { } while ( x )
staging/wlags49_h2/hcfdef.h:#define IF_PROT_TIME(x) do { x; } while(0)
staging/wlags49_h2/hcfdef.h:#define HCFASSERT(x,q) do { if (!(x)) {mdd_assert(ifbp, __LINE__, q );} } while(0)
staging/wlags49_h2/hcfdef.h:#define HCFLOGENTRY( where, what ) do {					\
staging/wlags49_h2/hcfdef.h:#define HCFLOGEXIT( where ) do {					\
staging/wlags49_h2/hcfdef.h:#define HCFASSERT( x, q ) do { } while(0)
staging/wlags49_h2/hcfdef.h:#define HCFLOGENTRY( where, what ) do { } while(0)
staging/wlags49_h2/hcfdef.h:#define HCFLOGEXIT( where )        do { } while(0)
staging/wlags49_h2/hcfdef.h:#define HCFTRACE(ifbp, where )     do {OPW( HREG_SW_1, where );} while(0)
staging/wlags49_h2/hcfdef.h:#define HCFTRACEVALUE(ifbp, what ) do {OPW( HREG_SW_2, what  );} while (0)
staging/wlags49_h2/hcfdef.h:#define HCFTRACE(ifbp, where )     do { } while(0)
staging/wlags49_h2/hcfdef.h:#define HCFTRACEVALUE(ifbp, what ) do { } while(0)
staging/wlags49_h2/hcf.c:			do { i += p->BUF_CNT; } while ( ( p = p->next_desc_addr ) != NULL );
staging/wlags49_h2/hcf.c:	do {                                    //loop over all available fragments
staging/wlags49_h2/debug.h:#define DBG_ERROR(A, S...) do {						\
staging/wlags49_h2/debug.h:#define DBG_WARNING(A, S...) do {					\
staging/wlags49_h2/debug.h:#define DBG_NOTICE(A, S...)  do {					\
staging/wlags49_h2/debug.h:#define DBG_TRACE(A, S...)   do { \
staging/wlags49_h2/debug.h:#define DBG_ASSERT(C) do { \
staging/spectra/ffsport.h:	do {						\
staging/spectra/lld_nand.c:	do {
staging/spectra/lld_cdma.c:	do {
staging/spectra/flash.c:	do {
staging/spectra/flash.c:	do {
staging/rtl8192u/r8192U.h:do { if(rt_global_debug_component & component) \
staging/rtl8192u/r8192U.h:#define assert(expr) do {} while (0)
staging/rtl8192u/r8192U.h:#define RT_DEBUG_DATA(level, data, datalen) do {} while(0)
staging/rtl8192u/r819xU_firmware.c:	do {
staging/rtl8192u/r819xU_firmware.c:	do {
staging/rtl8192u/r819xU_firmware.c:	do {
staging/rtl8192u/r819xU_firmware.c:	do {
staging/rtl8192u/ieee80211/digest.c:		do {
staging/rtl8192u/ieee80211/michael_mic.c:do {				\
staging/rtl8192u/ieee80211/ieee80211.h:do { if (ieee80211_debug_level & (level)) \
staging/rtl8192u/ieee80211/ieee80211.h:#define IEEE80211_DEBUG(level, fmt, args...) do {} while (0)
staging/rtl8192u/ieee80211/ieee80211.h:#define IEEE80211_DEBUG_DATA(level, data, datalen) do {} while(0)
staging/rtl8192u/ieee80211/ieee80211.h:#define IEEE80211_PRINT_STR(_Comp, _TitleString, _Ptr, _Len)  do {} while (0)
staging/rtl8192u/ieee80211/crypto_compat.h:	do {
staging/rtl8192u/r8192U_core.c:	do {
staging/rtl8192u/r819xU_cmdpkt.c:	do {
staging/serial/68360serial.c:	do {
staging/line6/driver.h:do {				\
staging/line6/driver.h:do {					\
staging/line6/driver.c:	do {
staging/line6/driver.c:	do {
staging/line6/capture.c:	do {
staging/line6/playback.c:	do {
staging/gma500/mmu.c:		do {
staging/gma500/mmu.c:			do {
staging/gma500/mmu.c:	do {
staging/gma500/mmu.c:		do {
staging/gma500/mmu.c:		do {
staging/gma500/mmu.c:			do {
staging/gma500/mmu.c:	do {
staging/gma500/mmu.c:		do {
staging/gma500/mmu.c:		do {
staging/gma500/mmu.c:			do {
staging/gma500/psb_intel_lvds.c:		do {
staging/gma500/psb_intel_lvds.c:		do {
staging/gma500/psb_intel_lvds.c:		do {
staging/gma500/psb_intel_lvds.c:		do {
staging/gma500/mrst_device.c:		do {
staging/gma500/mrst_device.c:	do {
staging/gma500/mrst_device.c:	do {
staging/gma500/psb_irq.c:	do {
staging/gma500/accel_2d.c:	do {
staging/gma500/accel_2d.c:	do {
staging/gma500/mrst_lvds.c:		do {
staging/gma500/mrst_lvds.c:		do {
staging/gma500/psb_lid.c:		do {
staging/gma500/psb_lid.c:		do {
staging/gma500/cdv_intel_crt.c:		do {
staging/gma500/cdv_intel_lvds.c:		do {
staging/gma500/cdv_intel_lvds.c:		do {
staging/keucr/scsiglue.c:	do { if (pos < buffer+length) pos += sprintf(pos, ## args); } while (0)
staging/zcache/tmem.h:#define SET_SENTINEL(_x, _y) do { } while (0)
staging/zcache/tmem.h:#define INVERT_SENTINEL(_x, _y) do { } while (0)
staging/zcache/tmem.h:#define ASSERT_SENTINEL(_x, _y) do { } while (0)
staging/zcache/tmem.h:#define ASSERT_INVERTED_SENTINEL(_x, _y) do { } while (0)
staging/zcache/tmem.c:		do {
staging/zcache/tmem.c:	do {
staging/et131x/et131x.c:		do {
staging/et131x/et131x.c:			do {
staging/et131x/et131x.c:	do {
staging/et131x/et131x.c:	do {
staging/et131x/et131x.c:	do {
staging/et131x/et131x.c:		do {
staging/panel/panel.c:#define w_ctr(x, y)     do { parport_write_control((x)->port, (y)); } while (0)
staging/panel/panel.c:#define w_dtr(x, y)     do { parport_write_data((x)->port, (y)); } while (0)
staging/quatech_usb2/quatech_usb2.c:	do {
staging/bcm/Qos.c:	do {
staging/bcm/led_control.h:#define TURN_OFF_LED(GPIO, index)  do { \
staging/bcm/Debug.h:	do {								\
staging/bcm/Debug.h:#define BCM_DEBUG_PRINT_BUFFER(Adapter, Type, SubType, dbg_level,  buffer, bufferlen) do { \
staging/bcm/Debug.h:#define BCM_SHOW_DEBUG_BITMAP(Adapter)	do { \
staging/bcm/Bcmchar.c:		do {
staging/bcm/Bcmchar.c:		do {
staging/bcm/InterfaceMisc.c:	do {
staging/bcm/InterfaceMisc.c:	do {
staging/sep/sep_dev.h:	do {
staging/rtl8192e/r8192E_firmware.c:	do {
staging/rtl8192e/rtllib.h:#define RT_ASSERT_RET(_Exp) do {} while (0)
staging/rtl8192e/rtllib.h:	do {} while (0)
staging/rtl8192e/rtllib.h:do {								\
staging/rtl8192e/rtllib.h:	do {							\
staging/rtl8192e/r8192E_cmdpkt.c:	do {
staging/rtl8192e/r8192E_phy.c:		do {
staging/rtl8192e/r8192E_phy.c:				do {
staging/rtl8192e/rtl_debug.h:do {\
staging/rtl8192e/rtl_debug.h:do {			\
staging/rtl8192e/rtl_debug.h:	do {								\
staging/rtl8192e/rtllib_softmac.c:		do {
staging/rtl8192e/rtllib_softmac.c:	do {
staging/rtl8192e/rtllib_softmac.c:	do {
staging/rtl8192e/rtllib_softmac.c:		do {
staging/xgifb/XGI_main.h:#define XGIFAIL(x) do { printk(x "\n"); return -EINVAL; } while (0)
staging/xgifb/XGI_main_26.c:		do {
staging/xgifb/vb_setmode.c:	do {
staging/xgifb/vb_init.c:				do {
staging/vt6655/device_main.c:            do {} while (0);
staging/vt6655/device_main.c:            do {} while (0);
staging/vt6655/device_main.c:        do {
staging/vt6655/device_main.c:                do {
staging/vt6655/rxtx.c:        do {
staging/vt6655/card.c:    do {
staging/rts_pstor/rtsx_transport.c:	do {
staging/rts_pstor/rtsx.h:do {							\
staging/rts_pstor/xd.h:do {					\
staging/rts_pstor/ms.c:	do {
staging/rts_pstor/ms.c:	do {
staging/rts_pstor/rtsx.c:	do { if (pos < buffer+length) pos += sprintf(pos, ## args); } while (0)
staging/rts_pstor/sd.c:	do {
staging/rts_pstor/sd.c:	do {
staging/rts_pstor/trace.h:do {													\
staging/rts_pstor/trace.h:do {													\
staging/rts_pstor/rtsx_chip.h:do {						\
staging/rts_pstor/rtsx_chip.h:do {								\
staging/rts_pstor/rtsx_chip.h:do {										\
staging/rts_pstor/rtsx_chip.h:do {										\
staging/slicoss/slicoss.c:#define ASSERT(a) do {							\
staging/slicoss/slicoss.c:	do {
staging/speakup/speakup_audptr.c:		do {
staging/media/go7007/saa7134-go7007.c:	do {
staging/media/go7007/go7007-fw.c:#define CODE_ADD(name, val, length) do { \
staging/media/as102/as102_drv.h:	do { if (debug) {	\
staging/media/lirc/lirc_sir.c:	do {								\
staging/media/lirc/lirc_sir.c:		do {
staging/media/lirc/lirc_sir.c:			do {
staging/media/lirc/lirc_serial.c:	do {							\
staging/media/lirc/lirc_serial.c:		do {
staging/media/lirc/lirc_serial.c:	do {
staging/media/lirc/lirc_igorplugusb.c:	do {							\
staging/media/lirc/lirc_imon.c:	do {
staging/media/lirc/lirc_bt829.c:	do {								 \
staging/media/lirc/lirc_zilog.c:	do {								\
staging/media/lirc/lirc_zilog.c:	do {
staging/media/lirc/lirc_parallel.c:	do {
staging/media/lirc/lirc_parallel.c:	do {
staging/media/lirc/lirc_parallel.c:		do {
staging/media/lirc/lirc_parallel.c:		do {
staging/media/solo6x10/p2m.c:#define run_p2m_test(__solo)	do {} while (0)
staging/media/cxd2099/cxd2099.c:	do {
staging/media/easycap/easycap_low.c:#define GET(X, Y, Z) do { \
staging/media/easycap/easycap_low.c:#define SET(X, Y, Z) do { \
staging/media/easycap/easycap_ioctl.c:			do {
staging/media/easycap/easycap_main.c:			do {
staging/media/easycap/easycap_main.c:				do {
staging/media/easycap/easycap_main.c:			do {
staging/media/easycap/easycap_main.c:			do {
staging/media/easycap/easycap.h:#define SAY(format, args...) do { \
staging/media/easycap/easycap.h:#define SAM(format, args...) do { \
staging/media/easycap/easycap.h:#define JOT(n, format, args...) do { \
staging/media/easycap/easycap.h:#define JOM(n, format, args...) do { \
staging/media/easycap/easycap.h:#define JOT(n, format, args...) do {} while (0)
staging/media/easycap/easycap.h:#define JOM(n, format, args...) do {} while (0)
staging/tidspbridge/dynload/getsection.c:	do {
staging/tidspbridge/dynload/cload.c:	do {			/* read all symbols */
staging/tidspbridge/dynload/cload.c:		do {		/* process symbols in buffer */
staging/tidspbridge/dynload/cload.c:	do {			/* all relocs */
staging/tidspbridge/dynload/cload.c:		do {
staging/tidspbridge/dynload/cload.c:	do {
staging/tidspbridge/dynload/cload.c:		do {
staging/tidspbridge/dynload/cload.c:	do {
staging/tidspbridge/dynload/cload.c:	do {
staging/tidspbridge/dynload/cload.c:	do {
staging/tidspbridge/dynload/cload.c:	do {
staging/tidspbridge/pmgr/dspapi.c:		do {
staging/tidspbridge/core/_tiomap.h:	do {\
staging/tidspbridge/core/io_sm.c:	do {
staging/tidspbridge/core/io_sm.c:		do {
staging/tidspbridge/rmgr/rmm.c:	do {
staging/hv/netvsc.c:	do {
staging/hv/hv_mouse.c:	do {
staging/hv/storvsc_drv.c:	do {								\
staging/hv/storvsc_drv.c:	do {
staging/ste_rmi4/synaptics_i2c_rmi4.c:	do {
staging/ft1000/ft1000-pcmcia/ft1000_hw.c:		do {
staging/ft1000/ft1000-pcmcia/ft1000_hw.c:		do {
staging/comedi/comedidev.h:#define DPRINTK(format, args...)	do {		\
staging/comedi/drivers/s626.c:		do {
staging/comedi/drivers/adl_pci6208.c:		do {
staging/comedi/drivers/adv_pci1710.c:		do {
staging/comedi/drivers/ni_mio_common.c:	do {
staging/comedi/drivers/comedi_bond.c:	do {								\
staging/comedi/drivers/vmk80xx.c:do {                                           \
staging/comedi/drivers/vmk80xx.c:do {                                           \
staging/comedi/drivers/gsc_hpdi.c:		do {
staging/comedi/drivers/am9513.h:	do {							\
staging/comedi/drivers/am9513.h:	do {							\
staging/comedi/drivers/am9513.h:	do {							\
staging/comedi/drivers/am9513.h:	do {							\
staging/comedi/drivers/addi-data/APCI1710_Ssi.c:						do {
staging/comedi/drivers/addi-data/APCI1710_Ssi.c:					do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:			do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:			do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:			do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:			do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:			do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:			do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3200.c:		do {
staging/comedi/drivers/addi-data/hwdrv_apci3120.c:				do {
staging/comedi/drivers/addi-data/hwdrv_apci3120.c:				do {
staging/comedi/drivers/addi-data/hwdrv_apci3120.c:	do {			/* Waiting of DA_READY BIT */
staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c:							do {
staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c:				do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:		do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:			do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:			do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:			do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:			do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:			do {
staging/comedi/drivers/addi-data/addi_amcc_S5920.c:			do {
staging/comedi/drivers/adq12b.c:		do {
staging/comedi/drivers/adl_pci9111.c:#define pci9111_fifo_reset() do { \
staging/comedi/drivers/adl_pci9111.c:	do { \
staging/comedi/drivers/adl_pci9111.c:	do { \
staging/comedi/drivers/adl_pci9111.c:	do { \
staging/comedi/drivers/adl_pci9111.c:#define pci9111_check_trigger_src(src, flags)	do {			\
staging/comedi/drivers/cb_pcidas64.c:	do {
staging/comedi/drivers/cb_pcidas64.c:	do {
staging/comedi/drivers/dt2801.c:	do {
staging/comedi/drivers/dt2801.c:	do {
staging/comedi/drivers/dt2801.c:	do {
staging/comedi/drivers/dt2801.c:	do {
staging/comedi/drivers/dt2801.c:	do {
staging/comedi/drivers/dt282x.c:	do {							\
staging/iio/cdc/ad7746.c:	do {
staging/iio/cdc/ad7152.c:	do {
staging/iio/adc/adt7310.c:	do {
staging/iio/adc/adt7410.c:	do {
staging/iio/trigger/iio-trig-gpio.c:	do {
target/target_core_configfs.c:do {									\
target/iscsi/iscsi_target_parameters.c:	do {
target/iscsi/iscsi_target_parameters.c:		do {
target/iscsi/iscsi_target_parameters.c:			do {} while (0);
target/iscsi/iscsi_target_parameters.c:	do {
target/target_core_tpg.c:		do { ; } while (0);
telephony/ixj.c:#define ixj_perfmon(x)	do { } while(0)
telephony/ixj.c:		do {
thermal/thermal_sys.c:do {    \
thermal/thermal_sys.c:do {	\
tty/nozomi.c:do {								\
tty/nozomi.c:  do {  \
tty/tty_buffer.c:	do {
tty/tty_buffer.c:	do {
tty/hvc/hvc_vio.c:	do {
tty/hvc/hvsi.c:#define dbg_dump_packet(packet) do { } while (0)
tty/hvc/hvsi.c:#define dbg_dump_hex(data, len) do { } while (0)
tty/hvc/hvcs.c:	do {
tty/hvc/hvcs.c:	do {
tty/hvc/hvc_console.c:	do {
tty/hvc/hvc_console.c:	do {
tty/hvc/hvc_opal.c:	do {
tty/moxa.c:	do {
tty/n_tty.c:		do {
tty/ipwireless/hardware.c:		do {
tty/ipwireless/hardware.c:	do {
tty/cyclades.c:	do {
tty/serial/ioc3_serial.c:	do {
tty/serial/ioc3_serial.c:	do {
tty/serial/serial_txx9.c:	do {
tty/serial/serial_txx9.c:	do {
tty/serial/sa1100.c:	do {
tty/serial/sa1100.c:	do {
tty/serial/pmac_zilog.h:#define ZS_CLEARFIFO(port)   do { volatile unsigned char garbage; \
tty/serial/sunzilog.c:#define ZS_WSYNC(channel)	do { } while (0)
tty/serial/sunzilog.c:	do {
tty/serial/cpm_uart/cpm_uart_core.c:	do {
tty/serial/lantiq.c:	do {
tty/serial/sh-sci.c:	do {
tty/serial/sh-sci.c:	do {
tty/serial/sh-sci.c:	do {
tty/serial/sh-sci.c:	do {
tty/serial/mcf.c:#define	mcf_setppdtr(p, v)	do { } while (0)
tty/serial/samsung.h:#define dbg(x...) do { } while (0)
tty/serial/mux.c:	do {
tty/serial/vr41xx_siu.c:	do {
tty/serial/vr41xx_siu.c:	do {
tty/serial/vr41xx_siu.c:	do {
tty/serial/vr41xx_siu.c:		do {
tty/serial/bcm63xx_uart.c:	do {
tty/serial/clps711x.c:	do {
tty/serial/clps711x.c:	do {
tty/serial/apbuart.c:	do {
tty/serial/apbuart.c:	do {
tty/serial/apbuart.c:	do {
tty/serial/ip22zilog.c:#define ZS_WSYNC(channel)	do { } while (0)
tty/serial/ip22zilog.c:	do {
tty/serial/amba-pl011.c:	do {
tty/serial/amba-pl011.c:		do {
tty/serial/amba-pl011.c:	do {
tty/serial/ioc4_serial.c:	do {
tty/serial/crisv10.c:#define DEBUG_LOG(_line, _string, _value) do { \
tty/serial/21285.c:	do {
tty/serial/netx-serial.c:	do {
tty/serial/mpc52xx_uart.c:	do {
tty/serial/pnx8xxx_uart.c:	do {
tty/serial/pnx8xxx_uart.c:	do {
tty/serial/max3107.c:	do {
tty/serial/sunsu.c:	do {
tty/serial/sunsu.c:	do {
tty/serial/sunsu.c:	do {
tty/serial/sunsu.c:	do {
tty/serial/sunsu.c:	do {
tty/serial/sunsu.c:	do {
tty/serial/sunsu.c:#define sunsu_serial_console_init()	do { } while (0)
tty/serial/mfd.c:	do {
tty/serial/mfd.c:	do {
tty/serial/mfd.c:	do {
tty/serial/pch_uart.c:	do {
tty/serial/pch_uart.c:	do {
tty/serial/mrst_max3110.c:	do {
tty/serial/mrst_max3110.c:	do {
tty/serial/mrst_max3110.c:	do {
tty/serial/sunsab.c:#define sunsab_console_init()	do { } while (0)
tty/serial/dz.c:	do {
tty/serial/max3100.c:	do {
tty/serial/sunzilog.h:#define ZS_CLEARERR(channel)    do { sbus_writeb(ERR_RES, &channel->control); \
tty/serial/sunzilog.h:#define ZS_CLEARSTAT(channel)   do { sbus_writeb(RES_EXT_INT, &channel->control); \
tty/serial/sunzilog.h:#define ZS_CLEARFIFO(channel)   do { sbus_readb(&channel->data); \
tty/serial/amba-pl010.c:	do {
tty/serial/amba-pl010.c:		do {
tty/serial/amba-pl010.c:	do {
tty/serial/amba-pl010.c:	do {
tty/serial/ip22zilog.h:#define ZS_CLEARERR(channel)    do { writeb(ERR_RES, &channel->control); \
tty/serial/ip22zilog.h:#define ZS_CLEARSTAT(channel)   do { writeb(RES_EXT_INT, &channel->control); \
tty/serial/ip22zilog.h:#define ZS_CLEARFIFO(channel)   do { readb(&channel->data); \
tty/serial/sn_console.c:#define DPRINTF(x...) do { } while (0)
tty/serial/uartlite.c:	do {
tty/serial/omap-serial.c:	do {
tty/serial/omap-serial.c:	do {
tty/serial/omap-serial.c:	do {
tty/serial/68328serial.c:	 * This do { } while() loop will get ALL chars out of Rx FIFO 
tty/serial/68328serial.c:	do {
tty/serial/nwpserial.c:	do {
tty/serial/nwpserial.c:	do {
tty/serial/pxa.c:	do {
tty/serial/pxa.c:	do {
tty/serial/pxa.c:	do {
tty/serial/8250.c:#define DEBUG_AUTOCONF(fmt...)	do { } while (0)
tty/serial/8250.c:#define DEBUG_INTR(fmt...)	do { } while (0)
tty/serial/8250.c:	do {
tty/serial/8250.c:	do {
tty/serial/8250.c:	do {
tty/serial/8250.c:	do {
tty/serial/atmel_serial.c:	do {
tty/serial/atmel_serial.c:	do {
tty/serial/atmel_serial.c:	do {
tty/serial/m32r_sio.c:#define DEBUG_AUTOCONF(fmt...)	do { } while (0)
tty/serial/m32r_sio.c:#define DEBUG_INTR(fmt...)	do { } while (0)
tty/serial/m32r_sio.c:	do {
tty/serial/m32r_sio.c:	do {
tty/serial/m32r_sio.c:	do {
tty/serial/m32r_sio.c:	do {
tty/serial/m32r_sio.c:	do {
tty/serial/m32r_sio.c:	do {
tty/serial/vt8500_serial.c:	do {
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/rocket_int.h:do { \
tty/n_r3964.c:#define TRACE_M(fmt, arg...) do {} while (0)
tty/n_r3964.c:#define TRACE_PS(fmt, arg...) do {} while (0)
tty/n_r3964.c:#define TRACE_PE(fmt, arg...) do {} while (0)
tty/n_r3964.c:#define TRACE_L(fmt, arg...) do {} while (0)
tty/n_r3964.c:#define TRACE_Q(fmt, arg...) do {} while (0)
tty/vt/vt_ioctl.c:	do {
tty/vt/vt.c:#define FLUSH do { } while(0);
tty/mxser.c:	do {
tty/mxser.c:	do {
tty/mxser.c:			do {
tty/tty_audit.c:	do {
tty/tty_ioctl.c:	do {
tty/ehv_bytechan.c:	do {
tty/ehv_bytechan.c:		do {
tty/ehv_bytechan.c:	do {
tty/synclink_gt.c:	do {
tty/synclink_gt.c:	do {
uio/uio.c:	do {
usb/misc/legousbtower.c:do {									\
usb/misc/emi26.c:	do {
usb/misc/adutux.c:do { 									\
usb/misc/ldusb.c:#define dbg_info(dev, format, arg...) do { if (debug) dev_info(dev , format , ## arg); } while (0)
usb/misc/iowarrior.c:#define dbg( format, arg... ) do { if( debug ) printk( KERN_DEBUG __FILE__ ": " format "\n" , ## arg ); } while ( 0 )
usb/misc/iowarrior.c:	do {
usb/misc/emi62.c:	do {
usb/misc/rio500.c:	do {
usb/misc/sisusbvga/sisusb.c:	do {
usb/misc/sisusbvga/sisusb_init.c:	do {
usb/misc/sisusbvga/sisusb_init.c:		do {
usb/misc/sisusbvga/sisusb.h:	do {						\
usb/renesas_usbhs/fifo.c:	do {
usb/renesas_usbhs/common.c:#define usbhsc_flags_init(p)   do {(p)->flags = 0; } while (0)
usb/renesas_usbhs/mod_gadget.c:#define usbhsg_status_init(gp)   do {(gp)->status = 0; } while (0)
usb/renesas_usbhs/pipe.c:#define usbhsp_flags_init(p)	do {(p)->flags = 0; } while (0)
usb/renesas_usbhs/pipe.c:	do {
usb/renesas_usbhs/pipe.c:	do {
usb/storage/datafab.c:	do {
usb/storage/datafab.c:	do {
usb/storage/ene_ub6250.c:	do {
usb/storage/sierra_ms.c:		do {
usb/storage/shuttle_usbat.c:	do {
usb/storage/shuttle_usbat.c:	do {
usb/storage/jumpshot.c:	do {
usb/storage/jumpshot.c:	do {
usb/storage/jumpshot.c:		do {
usb/storage/sddr55.c:    do {				\
usb/storage/scsiglue.c:	do { if (pos < buffer+length) pos += sprintf(pos, ## args); } while (0)
usb/host/u132-hcd.c:	do {
usb/host/u132-hcd.c:		do {
usb/host/imx21-hcd.c:#define DEBUG_LOG_FRAME(imx21, etd, event) do { } while (0)
usb/host/ohci.h:#	define ohci_vdbg(ohci, fmt, args...) do { } while (0)
usb/host/ohci-pxa27x.c:#define pxa27x_clear_otgph()	do {} while (0)
usb/host/isp1760-hcd.c:	do {
usb/host/xhci-ring.c:	do {
usb/host/xhci-ring.c:	do {
usb/host/xhci-ring.c:	do {
usb/host/xhci-ring.c:	do {
usb/host/xhci-ring.c:	do {
usb/host/xhci-ring.c:	do {
usb/host/ehci-dbg.c:		do {
usb/host/ehci-sched.c:		do {
usb/host/ehci-sched.c:		do {
usb/host/ehci-sched.c:	do {
usb/host/ehci-sched.c:	do {
usb/host/ehci-sched.c:			do {
usb/host/ehci-sched.c:		do {
usb/host/pci-quirks.c:		do {
usb/host/pci-quirks.c:	do {
usb/host/pci-quirks.c:	do {
usb/host/ohci-dbg.c:	do { \
usb/host/ohci-dbg.c:		do {
usb/host/xhci.c:	do {
usb/host/xhci.c:	do {
usb/host/sl811-hcd.c:		do {
usb/host/whci/int.c:	do {
usb/host/ohci-hub.c:	do {
usb/host/ehci-hcd.c:	do {
usb/host/uhci-q.c:		do {
usb/host/oxu210hp-hcd.c:	do {
usb/host/oxu210hp-hcd.c:		do {
usb/host/oxu210hp-hcd.c:		do {
usb/host/oxu210hp-hcd.c:		do {
usb/host/oxu210hp-hcd.c:			do {
usb/host/oxu210hp-hcd.c:		do {
usb/host/oxu210hp-hcd.c:		do {
usb/host/oxu210hp-hcd.c:	do {
usb/host/oxu210hp-hcd.c:	do {
usb/host/xhci-mem.c:	do {
usb/host/sl811.h:	do {
usb/host/sl811.h:	do {
usb/host/ehci.h:#	define COUNT(x) do { (x)++; } while (0)
usb/host/ehci.h:#	define COUNT(x) do {} while (0)
usb/host/isp1362.h:	do { \
usb/host/isp1362.h:#define DUMMY_DELAY_ACCESS do {} while (0)
usb/host/isp1362.h:#define _BUG_ON(x)			do {} while (0)
usb/host/isp1362.h:#define _WARN_ON(x)			do {} while (0)
usb/host/isp1362.h:#define REG_ACCESS_TEST(r)		do {} while (0)
usb/host/isp1362.h:#define REG_WIDTH_TEST(r, w)		do {} while (0)
usb/host/isp1362.h:	do { \
usb/host/isp1362.h:	do { \
usb/host/isp1362.h:#define DBG(fmt...)		do {} while (0)
usb/host/isp1362.h:#    define VDBG(fmt...)	do {} while (0)
usb/host/isp1362.h:#    define RDBG(fmt...)	do {} while (0)
usb/host/isp1362.h:#define URB_DBG(fmt...)		do {} while (0)
usb/host/isp1362.h:#define	isp1362_delay(h, d)	do {} while (0)
usb/host/isp1362.h:#define isp1362_show_reg(d, r)	do {} while (0)
usb/host/isp1362.h:#define dump_ptd(ptd)			do {} while (0)
usb/host/isp1362.h:#define dump_ptd_in_data(ptd, buf)	do {} while (0)
usb/host/isp1362.h:#define dump_ptd_out_data(ptd, buf)	do {} while (0)
usb/host/isp1362.h:#define dump_ptd_data(ptd, buf)		do {} while (0)
usb/host/isp1362.h:#define dump_ptd_queue(epq)		do {} while (0)
usb/host/fhci-tds.c:	do {
usb/host/fhci-tds.c:	do {
usb/host/xhci.h:	do { if (XHCI_DEBUG) dev_dbg(xhci_to_hcd(xhci)->self.controller , fmt , ## args); } while (0)
usb/host/xhci.h:	do { if (XHCI_DEBUG) dev_info(xhci_to_hcd(xhci)->self.controller , fmt , ## args); } while (0)
usb/host/uhci-debug.c:		do {
usb/host/ehci-tegra.c:		do {
usb/host/r8a66597-hcd.c:		do {
usb/host/r8a66597-hcd.c:		do {
usb/host/r8a66597-hcd.c:		do {
usb/host/r8a66597-hcd.c:	do {
usb/host/r8a66597-hcd.c:	do {
usb/host/r8a66597-hcd.c:		do {
usb/image/microtek.c:	do { MTS_DEBUG_GOT_HERE(); \
usb/image/microtek.c:#define MTS_NUL_STATEMENT do { } while(0)
usb/musb/musb_core.h:#define clk_put(clock)		do {} while (0)
usb/musb/musb_core.h:#define clk_enable(clock)	do {} while (0)
usb/musb/musb_core.h:#define clk_disable(clock)	do {} while (0)
usb/musb/davinci.c:		do {
usb/musb/musb_debug.h:	do { printk(facility "%s %d: " format , \
usb/musb/cppi_dma.c:	do {
usb/musb/cppi_dma.c:		do {
usb/musb/cppi_dma.c:		do {
usb/musb/cppi_dma.c:		do {
usb/musb/musb_host.c:	do {
usb/musb/blackfin.h:#define dump_fifo_data(buf, len)	do {} while (0)
usb/early/ehci-dbgp.c:	do {
usb/early/ehci-dbgp.c:	do {
usb/early/ehci-dbgp.c:	do {
usb/early/ehci-dbgp.c:			do {
usb/serial/keyspan.c:	do {
usb/serial/io_ionsp.h:do {									\
usb/serial/io_ionsp.h:do {									\
usb/serial/visor.c:	do { \
usb/serial/ti_usb_3410_5052.c:	do {
usb/serial/usb_wwan.c:			do {
usb/serial/usb-serial.c:	do {								\
usb/serial/iuu_phoenix.c:#define FISH(a, b, c, d) do { \
usb/serial/iuu_phoenix.c:#define SOUP(a, b, c, d)  do { \
usb/serial/cypress_m8.c:		do {
usb/serial/cypress_m8.c:		do {
usb/serial/io_ti.c:	do {
usb/serial/io_ti.c:	do {
usb/otg/langwell_otg.c:	do {
usb/otg/langwell_otg.c:	do {
usb/otg/isp1301_omap.c:#	define toggle(OTG,ISP) do { \
usb/otg/isp1301_omap.c:	do {
usb/otg/otg_fsm.h:#define DBG(fmt, args...)	do {} while (0)
usb/otg/otg_fsm.h:#define VDBG(stuff...)	do {} while (0)
usb/otg/otg_fsm.h:#define MPC_LOC do {} while (0)
usb/class/usbtmc.c:	do {
usb/class/usbtmc.c:		do {
usb/class/usbtmc.c:		do {
usb/class/usbtmc.c:		do {
usb/gadget/f_fs.c:#  define pr_vdebug(...)                 do { } while (0)
usb/gadget/f_fs.c:#  define ffs_dump_mem(prefix, ptr, len) do { } while (0)
usb/gadget/f_fs.c:	do {
usb/gadget/f_fs.c:	do {
usb/gadget/f_fs.c:	do {
usb/gadget/f_fs.c:	do {
usb/gadget/f_fs.c:#define __entity(type, val) do {					\
usb/gadget/f_fs.c:		do {
usb/gadget/f_fs.c:	do { /* lang_count > 0 so we can use do-while */
usb/gadget/f_fs.c:		do { /* str_count > 0 so we can use do-while */
usb/gadget/u_ether.c:	do { } while (0)
usb/gadget/u_ether.c:	do { } while (0)
usb/gadget/f_eem.c:	do {
usb/gadget/ci13xxx_udc.h:do { \
usb/gadget/ci13xxx_udc.h:#define trace(format, args...)      do {} while (0)
usb/gadget/ci13xxx_udc.h:#define dbg_trace(format, args...)  do {} while (0)
usb/gadget/net2280.h:#define net2280_led_init(dev)		do { } while (0)
usb/gadget/net2280.h:#define net2280_led_speed(dev, speed)	do { } while (0)
usb/gadget/net2280.h:#define net2280_led_shutdown(dev)	do { } while (0)
usb/gadget/net2280.h:	do { } while (0)
usb/gadget/net2280.h:	do { } while (0)
usb/gadget/net2280.h:#define ASSERT_OUT_NAKING(ep) do {} while (0)
usb/gadget/pxa27x_udc.c:	do {
usb/gadget/pxa27x_udc.c:	do {
usb/gadget/pxa27x_udc.c:#define pxa27x_clear_otgph()   do {} while (0)
usb/gadget/net2272.c:	do {
usb/gadget/net2272.c:	do {
usb/gadget/fsl_udc_core.c:		do {
usb/gadget/fsl_udc_core.c:	do {
usb/gadget/fsl_udc_core.c:	do {
usb/gadget/fsl_udc_core.c:	do {
usb/gadget/fsl_udc_core.c:#define create_proc_file()	do {} while (0)
usb/gadget/fsl_udc_core.c:#define remove_proc_file()	do {} while (0)
usb/gadget/f_ncm.c:	do {
usb/gadget/langwell_udc.c:#define	print_all_registers(dev)	do { } while (0)
usb/gadget/langwell_udc.c:		do {
usb/gadget/langwell_udc.c:	do {
usb/gadget/langwell_udc.c:	do {
usb/gadget/langwell_udc.c:	do {
usb/gadget/f_mass_storage.c:	do {
usb/gadget/f_mass_storage.c:		do {
usb/gadget/atmel_usba_udc.h:	do {							\
usb/gadget/m66592-udc.c:	do {
usb/gadget/m66592-udc.c:			do {
usb/gadget/imx_udc.c:	do {} while (__raw_readl(imx_usb->base + USB_ENAB) & ENAB_RST);
usb/gadget/imx_udc.c:	do {} while (!(__raw_readl(imx_usb->base + USB_DADR) & DADR_CFG));
usb/gadget/imx_udc.c:	do {} while (!(__raw_readl(imx_usb->base + USB_DADR) & DADR_CFG));
usb/gadget/imx_udc.c:		do {} while (__raw_readl(imx_usb->base + USB_DADR) & DADR_BSY);
usb/gadget/imx_udc.c:				do {} while (__raw_readl(imx_usb->base
usb/gadget/imx_udc.c:	do {} while (__raw_readl(imx_usb->base + USB_DADR) & DADR_CFG);
usb/gadget/imx_udc.c:		do { } while (__raw_readl(imx_usb->base + USB_CTRL)
usb/gadget/imx_udc.c:	do {
usb/gadget/r8a66597-udc.c:	do {
usb/gadget/r8a66597-udc.c:	do {
usb/gadget/r8a66597-udc.c:			do {
usb/gadget/f_uvc.c:	do { \
usb/gadget/f_uvc.c:	do { \
usb/gadget/inode.c:	do { } while (0)
usb/gadget/inode.c:	do { } while (0)
usb/gadget/amd5536udc.h:#define VDBG(udc , args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define D_REQ(dev, args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define D_TRX(dev, args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define D_INI(dev, args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define D_EP0(dev, args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define D_EPX(dev, args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define dump_intr(x, y, z)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_ep_intr(x, y, z, i)	do {} while (0)
usb/gadget/imx_udc.h:	#define dump_ep_stat(x, y)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_usb_stat(x, y)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_req(x, y, z)		do {} while (0)
usb/gadget/imx_udc.h:	#define D_ERR(dev, args...)	do {} while (0)
usb/gadget/imx_udc.h:	#define D_REQ(dev, args...)		do {} while (0)
usb/gadget/imx_udc.h:	#define D_TRX(dev, args...)		do {} while (0)
usb/gadget/imx_udc.h:	#define D_INI(dev, args...)		do {} while (0)
usb/gadget/imx_udc.h:	#define D_EP0(dev, args...)		do {} while (0)
usb/gadget/imx_udc.h:	#define D_EPX(dev, args...)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_ep_intr(x, y, z, i)	do {} while (0)
usb/gadget/imx_udc.h:	#define dump_intr(x, y, z)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_ep_stat(x, y)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_usb_stat(x, y)		do {} while (0)
usb/gadget/imx_udc.h:	#define dump_req(x, y, z)		do {} while (0)
usb/gadget/imx_udc.h:	#define D_ERR(dev, args...)		do {} while (0)
usb/gadget/storage_common.c:#define VLDBG(lun, fmt, args...) do { } while (0)
usb/gadget/storage_common.c:		   /* const u8 * */ buf, /* unsigned */ length) do {	\
usb/gadget/storage_common.c:#  define dump_cdb(fsg) do { } while (0)
usb/gadget/storage_common.c:		   /* const u8 * */ buf, /* unsigned */ length) do { } while (0)
usb/gadget/storage_common.c:#    define dump_cdb(fsg) do { } while (0)
usb/gadget/goku_udc.c:	do {
usb/gadget/goku_udc.h:	do { } while (0)
usb/gadget/goku_udc.h:	do { } while (0)
usb/gadget/ci13xxx_udc.c:	do {
usb/gadget/ci13xxx_udc.c:	do {
usb/gadget/ci13xxx_udc.c:		do {
usb/gadget/ci13xxx_udc.c:		do {
usb/gadget/ci13xxx_udc.c:	do {
usb/gadget/ci13xxx_udc.c:	do {
usb/gadget/omap_udc.c:		do {
usb/gadget/uvc.h:	do { \
usb/gadget/uvc.h:	do { \
usb/gadget/pxa25x_udc.c:#define clk_enable(clk)		do { } while (0)
usb/gadget/pxa25x_udc.c:#define clk_disable(clk)	do { } while (0)
usb/gadget/pxa25x_udc.c:#define clk_put(clk)		do { } while (0)
usb/gadget/pxa25x_udc.c:	do {
usb/gadget/pxa25x_udc.c:			do {
usb/gadget/pxa25x_udc.c:	do { \
usb/gadget/pxa25x_udc.c:	do { \
usb/gadget/pxa25x_udc.c:#define create_debug_files(dev) do {} while (0)
usb/gadget/pxa25x_udc.c:#define remove_debug_files(dev) do {} while (0)
usb/gadget/pxa25x_udc.c:	do {
usb/gadget/pxa25x_udc.c:	do {
usb/gadget/u_serial.c:	do {
usb/gadget/printer.c:	do { } while (0)
usb/gadget/printer.c:	do { } while (0)
usb/gadget/net2280.c:	do {
usb/gadget/net2280.c:		do {
usb/gadget/net2280.c:#define device_remove_file(a,b)	do { } while (0)
usb/gadget/mv_udc_core.c:	do {
usb/gadget/mv_udc_core.c:	do {
usb/gadget/mv_udc_core.c:	do {
usb/gadget/s3c-hsotg.c:	do {
usb/gadget/g_ffs.c:#  define gether_cleanup() do { } while (0)
usb/gadget/fusb300_udc.c:	do {
usb/gadget/fusb300_udc.c:	do { \
usb/gadget/fusb300_udc.c:	do {
usb/gadget/fusb300_udc.c:	do {
usb/core/usb.h:#define usb_autosuspend_device(udev)		do {} while (0)
usb/core/sysfs.c:#define remove_persist_attributes(dev)	do {} while (0)
usb/core/sysfs.c:#define remove_power_attributes(dev)	do {} while (0)
usb/core/hub.c:	do {
usb/core/devio.c:	do {							\
usb/core/devio.c:#define usb_classdev_remove(dev)	do {} while (0)
usb/atm/cxacru.c:	do {
usb/atm/usbatm.h:	do {	\
usb/atm/usbatm.h:	do {} while (0)
usb/atm/usbatm.h:	do {} while (0)
usb/atm/usbatm.h:	do {} while (0)
usb/atm/ueagle-atm.c:	do { \
usb/atm/ueagle-atm.c:	do { \
usb/atm/ueagle-atm.c:	do { \
usb/atm/ueagle-atm.c:	do { \
usb/atm/ueagle-atm.c:		do {
usb/atm/ueagle-atm.c:	do {
usb/wusbcore/wa-rpipe.c:	do {								\
usb/wusbcore/wa-hc.h:	do {
usb/dwc3/gadget.c:	do {
usb/dwc3/gadget.c:	do {
usb/dwc3/gadget.c:	do {
usb/dwc3/core.c:	do {
uwb/i1480/dfu/dfu.c:	do {
uwb/address.c:	do {
vhost/vhost.h:#define vq_err(vq, fmt, ...) do {                                  \
vhost/vhost.c:	do {
vhost/vhost.c:	do {
video/sis/sis.h:#define SISFAIL(x) do { printk(x "\n"); return -EINVAL; } while(0)
video/sis/sis_main.c:	do {
video/sis/sis_main.c:	      do {
video/sis/sis_main.c:    do {
video/sis/sis_main.c:       do {
video/sis/sis_main.c:	do {
video/sis/sis_main.c:        	do {
video/sis/init301.c:   do {
video/sis/init301.c:      do {
video/sis/init301.c:     do {
video/sis/init301.c:  do {
video/sis/init.c:      do {
video/sis/init.c:      do {
video/pm2fb.c:	do {
video/ffb.c:		do {
video/ffb.c:	do {
video/au1200fb.c:#define print_dbg(f, arg...) do {} while (0)
video/au1200fb.c:		do {
video/jz4740_fb.c:	do {
video/atafb_utils.h:        do {
video/matrox/matroxfb_maven.c:			do {
video/matrox/g450_pll.c:	do {
video/matrox/matroxfb_base.h:#define mga_fifo(n)	do {} while ((mga_inl(M_FIFOSTATUS) & 0xFF) < (n))
video/matrox/matroxfb_base.h:#define WaitTillIdle()	do {} while (mga_inl(M_STATUS) & 0x10000)
video/cyber2000fb.c:#define cyber2000fb_i2c_unregister(cfb)	do { } while (0)
video/cyber2000fb.h:#define debug_printf(x...) do { } while (0)
video/gbefb.c:	do {
video/pxafb.c:#define pxafb_check_options(...)	do {} while (0)
video/leo.c:	do {
video/chipsfb.c:#define write_ind(num, val, ap, dp)	do { \
video/chipsfb.c:#define read_ind(num, var, ap, dp)	do { \
video/chipsfb.c:#define write_ar(num, val)	do { \
video/chipsfb.c:#define read_ar(num, var)	do { \
video/msm/mdp_ppp.c:#define DLOG(x...) do {} while (0)
video/msm/msm_fb.c:do { \
video/msm/mddi.c:	do {
video/msm/mddi.c:	do {
video/omap2/omapfb/omapfb.h:	do { \
video/omap2/displays/panel-picodlp.c:	do {
video/omap2/dss/manager.c:	do {
video/fsl-diu-fb.c:	do {
video/pxa3xx-gcu.c:	do {						\
video/pxa3xx-gcu.c:#define QDUMP(msg)	do {} while (0)
video/pxa3xx-gcu.c:	do {						\
video/pxa3xx-gcu.c:	do {								\
video/s3c-fb.c:#define writel(v, r) do { \
video/omap/hwa742.c:#define ADD_PREQ(_x, _y, _w, _h) do {		\
video/omap/blizzard.c:#define ADD_PREQ(_x, _y, _w, _h, _x_out, _y_out, _w_out, _h_out) do {	\
video/vesafb.c:			do {
video/cg6.c:	do {
video/cg6.c:	do {
video/cg6.c:	do {
video/cg6.c:	do {
video/broadsheetfb.c:	do {
video/broadsheetfb.c:	do {
video/broadsheetfb.c:	do {
video/hitfb.c:		do {
video/nvidia/nvidia.c:#define save_vga_x86(x) do {} while (0)
video/nvidia/nvidia.c:#define restore_vga_x86(x) do {} while (0)
video/nvidia/nv_local.h:do {                            \
video/nvidia/nv_local.h:#define reverse_order(l) do { } while(0)
video/nvidia/nv_accel.c:					do {
video/i810/i810_main.h:#define flush_cache() do { } while(0)
video/i810/i810_main.h:#define unset_mtrr(x) do { } while (0)
video/geode/lxfb_ops.c:	do {
video/geode/lxfb_ops.c:	do {
video/geode/suspend_gx.c:	do {
video/geode/video_gx.c:	do {
video/sstfb.c:#  define sst_dbg_print_read_reg(reg, val)	do {} while(0)
video/sstfb.c:#  define sst_dbg_print_write_reg(reg, val)	do {} while(0)
video/n411.c:	do {
video/intelfb/intelfbhw.c:	do {
video/intelfb/intelfbhw.c:		do {
video/intelfb/intelfbhw.c:	do {
video/intelfb/intelfbdrv.c:#define unset_mtrr(x) do { } while (0)
video/intelfb/intelfbdrv.c:#define bailout(dinfo) do {						\
video/intelfb/intelfbhw.h:#define OUT_RING(n)	do {						\
video/intelfb/intelfbhw.h:#define START_RING(n)	do {						\
video/intelfb/intelfbhw.h:#define ADVANCE_RING()	do {						\
video/intelfb/intelfbhw.h:#define DO_RING_IDLE()	do {						\
video/intelfb/intelfbhw.h:	do {								\
video/tdfxfb.c:	do {
video/sticore.h: * we have to spin_lock_irqsave around the do { ret = bla(); } while(ret==1)
video/pm3fb.c:	do {
video/au1100fb.h:#define print_dbg(f, arg...) do {} while (0)
video/kyro/STG4000OverlayDevice.c:	do {
video/vermilion/vermilion.c:	do {
video/acornfb.c:	do {
video/uvesafb.c:			do {
video/mbx/mbxfb.c:#define write_reg(val, reg) do { writel((val), (reg)); } while(0)
video/mbx/mbxfb.c:#define write_reg_dly(val, reg) do { writel((val), reg); udelay(1000); } while(0)
video/mbx/mbxfb.c:#define mbxfb_debugfs_init(x)	do {} while(0)
video/mbx/mbxfb.c:#define mbxfb_debugfs_remove(x)	do {} while(0)
video/sa1100fb.c:		do {} while(0);
video/aty/radeon_pm.c:		do {
video/aty/radeon_base.c:	do {
video/aty/mach64_gx.c:		do {
video/aty/mach64_gx.c:		do {
video/aty/atyfb_base.c:#define FAIL(msg) do { \
video/aty/atyfb_base.c:#define FAIL_MAX(msg, x, _max_) do { \
video/aty/atyfb_base.c:			do {
video/aty/atyfb_base.c:						break;      /* Out of the do { ... } while (0) */
video/aty/atyfb_base.c:		do {
video/aty/atyfb_base.c:		do {
video/aty/radeon_monitor.c:		do {
video/aty/radeon_monitor.c:	do {
video/atafb.c:	do {
video/atafb.c:	do {					\
video/atafb.c:	do {
video/console/fbcon.c:		do {
video/console/fbcon.c:		do {
video/console/fbcon.c:		do {
video/console/fbcon.c:		do {
video/console/vgacon.c:#define vgacon_scrollback_startup(...) do { } while (0)
video/console/vgacon.c:#define vgacon_scrollback_init(...)    do { } while (0)
video/console/vgacon.c:#define vgacon_scrollback_update(...)  do { } while (0)
video/console/fbcon.h:#define fbcon_set_rotate(x) do {} while(0)
video/console/newport_con.c:#define RENDER(regs, cp) do { \
video/console/newport_con.c:		do {
video/console/sticore.c:	do {
video/console/sticore.c:	do {
video/console/sticore.c:	do {
video/console/sticore.c:	do {
video/console/sticore.c:	do {
video/stifb.c:# define WRITE_BYTE(value,fb,reg)	do { if (debug_on) \
video/stifb.c:# define WRITE_WORD(value,fb,reg)	do { if (debug_on) \
video/stifb.c:#define NGLE_LOCK(fb_info)	do { } while (0) 
video/stifb.c:#define NGLE_UNLOCK(fb_info)	do { } while (0)
video/stifb.c:	do {
video/mb862xx/mb862xx-i2c.c:	do {
video/mb862xx/mb862xxfbdrv.c:		do {
video/s1d13xxxfb.c:#define dbg(fmt, args...) do { printk(KERN_INFO fmt, ## args); } while(0)
video/s1d13xxxfb.c:#define dbg(fmt, args...) do { } while (0)
video/s1d13xxxfb.c:#define dbg_blit(fmt, args...) do { printk(KERN_INFO BLIT fmt, ## args); } while (0)
video/s1d13xxxfb.c:#define dbg_blit(fmt, args...) do { } while (0)
video/w100fb.c:	do {
video/w100fb.c:	do {
video/w100fb.c:	do {
video/cobalt_lcdfb.c:	do {
video/asiliantfb.c:#define mm_write_ind(num, val, ap, dp)	do { \
video/tgafb.c:do {									  \
video/tgafb.c:				do {
virtio/virtio_ring.c:	do {							\
virtio/virtio_ring.c:	do {							\
virtio/virtio_ring.c:	do { BUG_ON(!(_vq)->in_use); (_vq)->in_use = 0; } while(0)
virtio/virtio_ring.c:	do {							\
w1/w1_int.c:	do {
w1/w1_log.h:#  define assert(expr) do {} while (0)
w1/slaves/w1_ds2431.c:	do {
w1/masters/ds2490.c:	do {
w1/masters/ds2490.c:	do {
w1/masters/ds2482.c:		do {
watchdog/wdrtas.c:	do {
watchdog/octeon-wdt-main.c:	do {
watchdog/s3c2410_wdt.c:#define DBG(msg...) do { \
watchdog/intel_scu_watchdog.c:	do {
watchdog/pcwd_usb.c:	do { if (debug) printk(KERN_DEBUG PFX format "\n" , ## arg); } while (0)
xen/events.c:	do {
xen/events.c:			do {
xen/balloon.c:#define inc_totalhigh_pages() do {} while (0)
xen/balloon.c:#define dec_totalhigh_pages() do {} while (0)
xen/balloon.c:	do {
xen/xen-pciback/pci_stub.c:		do {
xen/xenbus/xenbus_probe.c:	do {
xen/swiotlb-xen.c:	do {
xen/swiotlb-xen.c:		do {
xen/grant-table.c:	do {
xen/grant-table.c:		do {
xen/pci.c:			do {
zorro/names.c:	do {
