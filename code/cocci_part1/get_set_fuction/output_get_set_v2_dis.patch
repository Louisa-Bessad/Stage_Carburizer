diff -u -p a/scc_pata.c b/scc_pata.c
--- a/scc_pata.c
+++ b/scc_pata.c
@@ -742,7 +742,7 @@ static void __devinit init_iops_scc(ide_
 {
 	struct pci_dev *dev = to_pci_dev(hwif->dev);
 
-	hwif->hwif_data = NULL;
+	ide_set_hwifdata(hwif, NULL);
 	if (pci_get_drvdata(dev) == NULL)
 		return;
 	init_mmio_iops_scc(hwif);
diff -u -p a/siimage.c b/siimage.c
--- a/siimage.c
+++ b/siimage.c
@@ -91,7 +91,7 @@ static inline int is_sata(ide_hwif_t *hw
 
 static unsigned long siimage_selreg(ide_hwif_t *hwif, int r)
 {
-	unsigned long base = (unsigned long)hwif->hwif_data;
+	unsigned long base = (unsigned long)ide_get_hwifdata(hwif);
 
 	base += 0xA0 + r;
 	if (hwif->host_flags & IDE_HFLAG_MMIO)
@@ -114,7 +114,7 @@ static unsigned long siimage_selreg(ide_
 static inline unsigned long siimage_seldev(ide_drive_t *drive, int r)
 {
 	ide_hwif_t *hwif	= drive->hwif;
-	unsigned long base	= (unsigned long)hwif->hwif_data;
+	unsigned long base	= (unsigned long)ide_get_hwifdata(hwif);
 	u8 unit			= drive->dn & 1;
 
 	base += 0xA0 + r;
@@ -196,7 +196,7 @@ static u8 sil_pata_udma_filter(ide_drive
 {
 	ide_hwif_t *hwif	= drive->hwif;
 	struct pci_dev *dev	= to_pci_dev(hwif->dev);
-	unsigned long base	= (unsigned long)hwif->hwif_data;
+	unsigned long base	= (unsigned long)ide_get_hwifdata(hwif);
 	u8 scsc, mask		= 0;
 
 	base += (hwif->host_flags & IDE_HFLAG_MMIO) ? 0x4A : 0x8A;
@@ -247,7 +247,7 @@ static void sil_set_pio_mode(ide_hwif_t
 	u16 speedp		= 0;
 	unsigned long addr	= siimage_seldev(drive, 0x04);
 	unsigned long tfaddr	= siimage_selreg(hwif,	0x02);
-	unsigned long base	= (unsigned long)hwif->hwif_data;
+	unsigned long base	= (unsigned long)ide_get_hwifdata(hwif);
 	const u8 pio		= drive->pio_mode - XFER_PIO_0;
 	u8 tf_pio		= pio;
 	u8 mmio			= (hwif->host_flags & IDE_HFLAG_MMIO) ? 1 : 0;
@@ -302,7 +302,7 @@ static void sil_set_dma_mode(ide_hwif_t
 	static const u16 dma[]	 = { 0x2208, 0x10C2, 0x10C1 };
 
 	struct pci_dev *dev	= to_pci_dev(hwif->dev);
-	unsigned long base	= (unsigned long)hwif->hwif_data;
+	unsigned long base	= (unsigned long)ide_get_hwifdata(hwif);
 	u16 ultra = 0, multi	= 0;
 	u8 mode = 0, unit	= drive->dn & 1;
 	u8 mmio			= (hwif->host_flags & IDE_HFLAG_MMIO) ? 1 : 0;
@@ -363,7 +363,7 @@ static int siimage_mmio_dma_test_irq(ide
 		= (void __iomem *)hwif->sata_scr[SATA_ERROR_OFFSET];
 
 	if (sata_error_addr) {
-		unsigned long base	= (unsigned long)hwif->hwif_data;
+		unsigned long base	= (unsigned long)ide_get_hwifdata(hwif);
 		u32 ext_stat		= readl((void __iomem *)(base + 0x10));
 		u8 watchdog		= 0;
 
@@ -560,7 +560,7 @@ static void __devinit init_mmio_iops_sii
 	 */
 	hwif->host_flags |= IDE_HFLAG_MMIO;
 
-	hwif->hwif_data	= addr;
+	ide_set_hwifdata(hwif, addr);
 
 	/*
 	 *	Now set up the hw. We have to do this ourselves as the
@@ -651,7 +651,7 @@ static void __devinit init_iops_siimage(
 	struct pci_dev *dev = to_pci_dev(hwif->dev);
 	struct ide_host *host = pci_get_drvdata(dev);
 
-	hwif->hwif_data = NULL;
+	ide_set_hwifdata(hwif, NULL);
 
 	/* Pessimal until we finish probing */
 	hwif->rqsize = 15;
