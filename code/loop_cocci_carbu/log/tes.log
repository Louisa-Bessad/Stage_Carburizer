-	while (op_cpu_buffer_get_data(entry, &val))
-	while (i != stop) {
-	while (vq->vring.desc[i].flags & VRING_DESC_F_NEXT) {
-	while (!kthread_should_stop()) {
-	while (vb->num_pages)
-	while (1) {
-		while (*s && (*s)->range < range)
-	while ((dev = next_device(&i)) && !error)
-	while ((drv = next_driver(&i)) && !error)
-			while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-	while (1) {
-		while (requests) {
-			while (req) {
-	while (cur != end) {
-	while (cur != end) {
-	while ((dev = next_device(&i)) && !error)
-				while (--i >= 0)
-	while (dev) {
-	while (--i >= 0)
-	while (1) {
-	while ((dev = class_dev_iter_next(&iter))) {
-	while ((dev = class_dev_iter_next(&iter))) {
-		while ((dev = class_dev_iter_next(&iter)))
-		while ((dev = class_dev_iter_next(&iter)))
-			while (--i >= 0)
-	while (--i >= 0) {
-	while (id->name[0]) {
-	while (count) {
-	while (fw_priv->nr_pages < pages_needed) {
-	while (count) {
-	while (node) {
-	while (*new) {
-	while (next) {
-	while (ws->active) {
-	while ((c = *data++) != 0) {
-	while (entry != &dpm_list) {
-	while (size && entry != &dpm_list) {
-	while (!list_empty(&dpm_noirq_list)) {
-	while (!list_empty(&dpm_suspended_list)) {
-	while (!list_empty(&dpm_prepared_list)) {
-	while (!list_empty(&dpm_suspended_list)) {
-	while (!list_empty(&dpm_prepared_list)) {
-	while (!list_empty(&dpm_list)) {
-	while (!top_kobj->kset && top_kobj->parent)
-			while (--i >= 0)
-			while (--i >= 0)
-				while (--i >= 0)
-	while ((s = strchr(*tmp, '!')))
-	while ((child = next_device(&i)) && !error)
-	while (!list_empty(&devices_kset->list)) {
-		while (!(val & CHAR_RAW_VALID) && i < 10) {
-	while (!(val & CHAR_RAW_VALID) && i < 10) {
-	while (charlcd_4bit_read_bf(lcd) && retries)
-	while (count) {
-	while (count) {
-	while (true) {
-	while (vaddr > fault_vaddr) {
-	while (1) {
-		while (!gru_assign_gru_context(kgts)) {
-	while (gen->istatus >= CBS_ACTIVE) {
-	while (1)  {
-	while (present == MQS_NOOP) {
-	while (n--) {
-	while (num-- > 0) {
-	while (1) {
-	while (1) {
-	while (count) {
-	while (len > 0 && ptr) {
-	while ((waiting_skb = skb_dequeue(&st_gdata->tx_waitq)))
-	while (count) {
-		while ((skb = st_int_dequeue(st_data))) {
-		while (parent) {
-	while (time_before(jiffies, start + HZ)) {
-	while (time_before(jiffies, start + HZ)) {
-	while (count > 0) {
-		while (true) {
-	while (list_empty(used)) {
-		while (ids->type) {
-	while ((*ttl)--) {
-		while (vector > 1) {
-		while (vec--)
-		while (pos < 21) {
-	while (1) {
-	while (1) {
-	while (!((part->sn.uv.remote_act_state == XPC_P_AS_ACTIVATING) ||
-	while (1) {
-	while ((msg = gru_get_next_message(xpc_notify_mq_uv->gru_mq_desc)) !=
-	while (1) {
-	while (!xpc_exiting) {
-	while (part->act_state != XPC_P_AS_DEACTIVATING ||
-		while (n_of_deliverable_payloads(ch) > 0 &&
-	while (needed-- > 0) {
-	while (1) {
-	while ((ret = xpc_pull_remote_vars_part_sn2(part)) != xpSuccess) {
-	while (++get < put && atomic_read(&ch->n_to_notify) > 0) {
-	while (get >= ch_sn2->next_msg_to_pull) {
-	while (1) {
-		while (1) {
-	while (1) {
-	while (1) {
-		while (1) {
-	while (id->name && id->name[0]) {
-	while (reader != writer) {
-	while (event->serial_number < reader->next_serial_number) {
-	while (times_failed < 3) {
-	while (!final_ack)
-	while ((ch = buf[count])) {
-	while (*chk_str != '\0' && *put_str != '\0') {
-	while (ioread8(chip->pch_phub_extrom_base_address +
-	while (parser->cur_pos + sizeof(struct iwmct_fw_sec_hdr)
-	while (sent < sec_size) {
-	while (iwmct_parse_next_section(priv, &pdata, &len, &addr)) {
-	while (!list_empty(&priv->read_req_list)) {
-	while ((token = strsep(&str_buf, ",")) != NULL) {
-		while (isspace(*token))
-		while (isspace(*token))
-	while (irqstat) {
-		while ((js->jtag_state != state) && (count < 9)) {
-			while ((i != 0) || first_time) {
-			while ((i != 0) &&
-	while (!done) {
-				while ((i != 0) &&
-				while (long_idx2 < long_count) {
-				while (tmpptr->next != NULL)
-		while (altera_get_note((u8 *)fw->data, fw->size,
-			while (procptr != NULL) {
-		while ((n & (1 << (SHORT_BITS - 1))) == 0) {
-	while (bits > 0) {
-	while (i < data_length) {
-		while (count--) {
-		while (count--) {
-	while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-	while ((pp = of_get_next_child(node, pp)))
-	while ((pp = of_get_next_child(node, pp))) {
-	while (--i >= 0) {
-	while (cnt < idx - 1) {
-	while (--i >= 0)
 	while (hil_busy())
-	while (len--) {
 		while (hil_busy())
-	while ((event = key_fifo[i++])) {
-	while ((lm8323_read(lm, LM8323_CMD_READ_INT, &ints, 1) == 1) && ints) {
-	while (steps) {
-	while (lm8323_read(lm, LM8323_CMD_READ_INT, data, 1) == 1) {
-	while (i < ARRAY_SIZE(period) - 1 && period[i] < dev->rep[REP_PERIOD])
-	while (j < ARRAY_SIZE(delay) - 1 && delay[j] < dev->rep[REP_DELAY])
-	while ((readl(keypad->reg_base + SKE_RIS) != 0x00000000) && timeout--)
-	while ((readl(keypad->reg_base + SKE_CR) & SKE_KPASON) && --retries)
-	while (1) {
-		while (change) {
-	while (size != ix) {
-	while (udev->head != udev->tail && retval + input_event_size() <= count) {
-	while (--alloc_idx >= 0)
-	while ((dev->data.bits_left + 7 < (sizeof(dev->data.tester) * 8)) &&
-		while ((remote->data.bits_left >= 14 || remote->data.pos < remote->data.len) && !found) {
-	while (i < 91) {
-	while (memcmp(&tm, &tm_last, sizeof(struct rtc_time))) {
-	while (ids->type || ids->proto) {
-	while ((event = serio_get_event())) {
-	while ((child = serio_get_pending_child(serio)) != NULL) {
-		while (s != root) {
-	while (!list_empty(&serio->children)) {
-		while (!list_empty(&s->children))
-	while ((inb(CT82C710_STATUS) & (CT82C710_RX_FULL | CT82C710_TX_IDLE | CT82C710_DEV_IDLE))
-	while (ct82c170_wait()) {
-	while (status & KMIIR_RXINTR) {
-	while ((readb(KMISTAT) & KMISTAT_TXEMPTY) == 0 && --timeleft)
-	while (fiq_buffer[FIQ_KEYS_CNT] > 0) {
-	while ((status = readl(ps2if->base)) & 0xffff0000) {
-	while (gscps2_readb_status(addr) & GSC_STAT_TBNE) {
-	while (gscps2_readb_status(ps2port->addr) & GSC_STAT_RBNE)
-	  while ( (ps2port->buffer[ps2port->append].str =
-	  while (ps2port->act != ps2port->append) {
-	while (!(iomd_readb(IOMD_KCTRL) & (1 << 7)))
-	while (iomd_readb(IOMD_KCTRL) & (1 << 5)) {
-	while (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))
-	while (retval < count && serio_raw_fetch_byte(serio_raw, &c)) {
-	while (count--) {
-	while (--i >= 0)
-	while (mlc->icount < 15 - i) {
-	while (nextidx & HILSEN_SCHED) {
-		while (hilse_donode(mlc) == 0) {
-	while ((last != idx) && (*last == 0))
-	while (idx != last) {
-	while (!(psif_readl(psif, SR) & PSIF_BIT(TXEMPTY)) && timeout--)
-	while (sdc_readb(hp_sdc.status_io) & HP_SDC_STATUS_IBF)
-	while (++curridx != hp_sdc.wcurr) {
-	while (act & HP_SDC_ACT_PRECMD) {
-	    while (act & HP_SDC_ACT_DATAREG) {
-			while (i < 4 && w7[i] == hp_sdc.r7[i])
-			while ((i < 4) && w7[i] == hp_sdc.r7[i])
-	while ((~i8042_read_status() & I8042_STR_OBF) && (i < I8042_CTL_TIMEOUT)) {
-	while ((i8042_read_status() & I8042_STR_IBF) && (i < I8042_CTL_TIMEOUT)) {
-	while (((str = i8042_read_status()) & I8042_STR_OBF) && (i < I8042_BUFFER_SIZE)) {
-	while (i8042_read_status() & I8042_STR_IBF)
-	while (i8042_read_status() & I8042_STR_IBF)
-	while (status & PS2STAT_RXF) {
-	while (maxread--) {
-	while (retval + input_event_size() <= count &&
- fail3:	while (--i >= 0)
-	while (t > 0 && i < length) {
-		while ((gameport_read(gameport) & 1) && t) t--;
         } while (seq[++i]);
-	while (1) {
-	while (tries < 64 && bads < 8) {    /* Reset multiport and try getting a packet */
-	while (!dig_mode && tries < 4) {
- fail3:	while (--i >= 0)
-	while (--i >= 0)
-		while (--i >= 0)
-	while ((~u & 0xf0) && (i < 16) && t) {
-		while (((u = gameport_read(port->gameport)) & port->mask) && t) t--;
-		while ((gameport_read(port->gameport) & port->mask) && (u < t))
-		while ((gameport_read(port->gameport) & port->mask) && (v < t))
- fail3: while (--i >= 0)
-	while (--i >= 0)
-		while (--i >= 0)
-	while (i < BUF_SIZE && t < timeout) {
-	while (t > 0 && i < GUILLEMOT_MAX_LENGTH * 8) {
- fail3: while (--i >= 0) {
-	while (--i >= 0)
-		while (--i >= 0)
-	while (t > 0 && i < length) {
-	while ((timeout > 0 || bitout > 0) && (i < length)) {
-	while (num--) {
-		while ((gameport_read(gameport) & 1) && t) t--;	/* Wait for axis to fall back to 0 */
         } while (seq[++i]);
-	while (t) {						/* Sum */
- fail3:	while (--i >= 0)
-	while (t > 0 && i < length) {
- fail3: while (--i >= 0) {
-	while (ns558_isa_portlist[i])
 	j = jiffies; while (j == jiffies);
-	j = jiffies; while (j == jiffies) { t++; gameport_read(gameport); }
-	while ((inb(L4_PORT) & L4_BUSY) && t > 0) t--;
-			while (--i >= 0) {
-	while (ml_get_combo_effect(ml, handled_bm, &effect))
-	while (i < length) {
-			while (raw_n--) {
-		while (priv->scroll >= 4) {
-		while (priv->scroll <= -4) {
-	while (rates[i] > rate) i++;
-	while (!list_empty(&serio->children)) {
-	while (--i >= 0) {
-		while (mouse->count > 0 && !IS_HDR_BYTE(buf[0])) {
-	while (--i) {
-	while (pos < buf_len) {
-	while (time_after(timeout, jiffies)) {
-	while (!kthread_should_stop()) {
-	while (!(ucb1400_reg_read(ucb->ac97, UCB_ADC_DATA) &
 	 * touch_det keeps coming in after 4ms, while the FIFO contains no value
-	while ((int_sta & (1 << STMPE_IRQ_TOUCH_DET)) && (timeout > 0)) {
-	while (MISR & (1 << 2))
-	while (msg_idx < ts->msg_count) {
-	while (!ts->stopped && get_pendown_state(ts)) {
-	while ((wm97xx_reg_read(wm, AC97_WM97XX_DIGITISER1) & WM97XX_POLL)
-	while (rc != RC_VALID && timeout++ < 5)
 	 * reading touchscreen state; disable penirq while sampling
-	while (eeti_ts_irq_active(priv) && --to)
-	while ((wm97xx_reg_read(wm, AC97_WM9713_DIG1) & WM9713_POLL) &&
-	while ((wm97xx_reg_read(wm, AC97_WM9713_DIG1) & WM9713_POLL)
-	while (!(tsc_readl(tsc, LPC32XX_TSC_STAT) &
-	while (idx < 4 &&
-	while ((wm97xx_reg_read(wm, AC97_WM97XX_DIGITISER1) & WM97XX_POLL)
-	while ((wm97xx_reg_read(wm, AC97_WM97XX_DIGITISER1) & WM97XX_POLL)
-	while (!ts->stopped && tsc2007_is_pen_down(ts)) {
-	while (val & TPS6507X_REG_TSC_INT) {
-	while (pos < fw->size) {
-	while (retval + sizeof(struct js_event) <= count &&
-	while (retval + sizeof(struct js_event) <= count &&
 	 * Simple array search: even if they add an eventfd while we do this,
-	while (!cpu->lg->dead) {
-	while (msg->len && !err) {
-		while (mlen) {
-	while (atomic_read(&sl->refcnt)) {
-	while ( !last_device && (slave_count++ < dev->max_slave_count) ) {
-	while (!kthread_should_stop()) {
-	while (atomic_read(&fent->refcnt)) {
-	while (len--)
-	while (atomic_read(&dev->refcnt)) {
-	while (max_trying--) {
-	while (todo > 0) {
-	while (len > 0) {
-	while (retries--) {
-	while (retries--) {
-	while (retries--) {
-		while (--i >= 0)
-	while (idx < count) {
-	while (true) {
-	while (1) {
-	while (timeout_cnt--) {
-		while (((*status = hdq_reg_in(hdq_data, offset)) & flag)
-		while (!((*status = hdq_reg_in(hdq_data, offset)) & flag)
-		while (!(hdq_data->hdq_irqstatus
-	while (itr_size >= sizeof(*hdr)) {
-		while (d != ptr && r < size)
-	while (size > 0) {
-	while (hdr) {
-	while (data_itr < data_top) {
-	while (size > 0) {
-	while (1) {
-	while (itr < top) {
-	while (itr < buffer_size) {
-	while (size > 0) {
-	while(sisbios_mode[i++].mode_no[0] != 0) {
-	while(sisbios_mode[i].mode_no[0] != 0) {
-	while(sis_crt2type[i].type_no != -1) {
-	while(sis_tvtype[i].type_no != -1) {
-		while(mycustomttable[i].chipID != 0) {
-			while(mycustomttable[i].chipID != 0) {
-	while((sisfb_vrate[i].idx != 0) && (sisfb_vrate[i].xres <= xres)) {
-	while( (sisbios_mode[ivideo->sisfb_mode_idx].mode_no[0] != 0) &&
-	while( (sisbios_mode[search_idx].mode_no[0] != 0) &&
-		while(sisbios_mode[search_idx].mode_no[0] != 0) {
-	while(pohThis != &memheap->oh_free) {
-	while(poh_freed != &memheap->oh_used) {
-	while(pohThis != &memheap->oh_free) {
-				while((p2_01 <= 0) || (p2_02 <= 0)) {
-	while((this_opt = strsep(&options, ",")) != NULL) {
-		while((!(ivideo->video_vbase = ioremap(ivideo->video_base, (*mapsize))))) {
-	while((pdev = pci_get_class(PCI_CLASS_BRIDGE_HOST, pdev))) {
-			while((ranksize >>= 1)) reg += 0x10;
-		while((countvideo = countvideo->next) != NULL)
-       while(SiS_Pr->SiS_EModeIDTable[j].Ext_ModeID != 0xff) {
-   while (delaytime-- > 0)
-   while(delay--) {
-   while(delay--) {
-   while(nonscalingmodes[i] != 0xff) {
-  while(*dataptr) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-    while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((i < MAX_DUM_CHANNELS) && (dum_data.fb_owning_channel[i] != -1))
-	while (DUM_CTRL & BAC_ENABLED)
-	while (pm2_RD(p, PM2R_IN_FIFO_SPACE) < a)
-	while (i--) {
-	while (pm2_RD(p, PM2R_RESET_STATUS) & PM2F_BEING_RESET)
-		while (pm2_RD(par, PM2R_OUT_FIFO_WORDS) == 0)
 	} while (pm2_RD(par, PM2R_OUT_FIFO) != PM2TAG(PM2R_SYNC));
-	while (height--) {
-		while (width--) {
-		while (pos < (1024 + PM2VI_RD_CURSOR_PATTERN)) {
-			while (j-- > 0)
-			while (j-- > 0)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (width >= 32) {
-		while (!req.complete)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-		while (tmio_ioread16(par->lcr + LCR_CCS) > ccs) {
-	while (tmio_ioread16(par->lcr + LCR_BBES) & 2) { /* blit active */
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (dbeVTimings[min_mode].width == dbeVTimings[test_mode].width) {
-	while (par->cmap_fifo == 0)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-		while (n--) {
-		while (j--) {
-		while ((lcd->intstatus & LCD_INT_SS) == 0) {
-		while ((this_opt = strsep(&options,",")) != NULL) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while (lcdc_readl(sinfo, ATMEL_LCDC_PWRCON) & ATMEL_LCDC_BUSY)
-	while (lcdc_readl(sinfo, ATMEL_LCDC_DMACON) & ATMEL_LCDC_DMABUSY)
-	while (lcdc_readl(sinfo, ATMEL_LCDC_DMACON) & ATMEL_LCDC_DMABUSY)
-	while (count) {
-	while (count) {
-	while (!kthread_should_stop()) {
-	while (1) {
-			while (height--) {
-			while (height--) {
-			while (height--) {
-			while ((nl = mga_inl(0x3C48) & 0xFFF) >= lastl) {
-	while (divider & 3) {
-	while (divider > 8) {
-		while (*width) {
-			while (m1) {
-				while (m2 >= m1) m2 -= m1;
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-		while (p && (tvco > vcomax)) {
-		while (sptr >= sarray) {
 				   frequency to higher - with <= lowest wins, while
-		while (vga_rgfx(cinfo->regbase, CL_GR31) & 0x03)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (vga_rgfx(regbase, CL_GR31) & 0x08)
-	while (name != NULL) {
-	while (cyber2000fb_readb(CO_REG_CONTROL, cfb) & CO_CTRL_BUSY) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while (in_be16(fb_regs + 0x6002) & 0x4) udelay(1);
-	while (in_be16(fb_regs + 0x6002) & 0x4) udelay(1);
-	while ((this_opt = strsep(&options, ","))) {
-		while (n >= 8) {
-		while (n--)
-		while (n >= 4) {
-		while (n--) {
-		while (n >= 8) {
-		while (n--)
-		while (n >= 4) {
-		while (n--) {
-		while (height--) {
-		while (height--) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (fbi->n_smart_cmds & 1)
-	while (!kthread_should_stop()) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (next) {
-		while (!(readl(engine + VIA_REG_STATUS) &
-	while ((readl(engine + VIA_REG_STATUS) & mask) && (loop < MAXLOOP)) {
-	while (regset->regnum != VGA_REGSET_END_VAL) {
-		while (bitnum <= regset->highbit) {
-	while (regset->regnum != VGA_REGSET_END_VAL) {
-		while (bitnum <= regset->highbit) {
-	while (regset->regnum != VGA_REGSET_END_VAL) {
-	while ((ar > pll->r_min) && (f_vco > pll->f_vco_max)) {
-	while ((am <= pll->m_max) && (an <= pll->n_max)) {
-	while (frm->bits_per_pixel != SVGA_FORMAT_END_VAL)
-			while (i < priv->used_meram_cache_regions - 1) {
-	while (abs((int)(ip64 >> 33)) > 4)
-	while (n > 1) {
-	while (n > 1) {
-	while (n > 1) {
-	while (actual_count--) {
-	while (size > 0) {
-	while ((pixel_end > pixel) &&
-		while (pixel < cmd_pixel_end) {
-				while ((pixel < cmd_pixel_end)
-	while (next_pixel < line_end) {
-	while (tries--) {
-		while (desc < desc_end) {
-	while (count--) {
-	while (i < count) {
-	while(default_cmode > CMODE_8 &&
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (readl(&par->neo2200->bltStat) & 1)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-		while (n >= 8) {
-		while (n--)
-		while (n >= 4) {
-		while (n--) {
-		while (n >= 8) {
-		while (n--) {
-		while (n >= 4) {
-		while (n--) {
-		while (height--) {
-		while (height--) {
-	while (readmmr(par, STATUS) & 0xFA800000)
-	while (t_inb(par, STATUS) & 0x80) {
-	while (readmmr(par, 0x2164) & 0xF0000000)
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while (len >= 2) {
-	while (left <= right) {
-	while (distance > 0) {
-	while (distance > 0) {
-	while (distance > 0) {
-	while (1) {
-	while (!r && (this_opt = strsep(&options, ",")) != NULL) {
-		while (p < buf + len) {
-		while (p < buf + len) {
-	while (buf_used < size) {
-	while (!gpio_get_value(picodlp_pdata->emu_done_gpio)) {
-	while (dss_read_reg(DSS_SDI_STATUS) & (1 << 6)) {
-	while (!(dss_read_reg(DSS_SDI_STATUS) & (1 << 5))) {
-	while (!(dss_read_reg(DSS_SDI_STATUS) & (1 << 2))) {
-	while ((attr = display_sysfs_attrs[i++]) != NULL) {
-	while ((attr = display_sysfs_attrs[i++]) != NULL)
-	while ((dssdev = omap_dss_get_next_device(dssdev)) != NULL) {
-	while (REG_GET(dsidev, idx, bitnum, bitnum) != value) {
-	while (FLD_GET(dsi_read_reg(dsidev, DSI_CLK_CTRL), 29, 28) != state) {
-	while (FLD_GET(dsi_read_reg(dsidev, DSI_COMPLEXIO_CFG1),
-	while (true) {
-	while (REG_GET(dsidev, DSI_VC_CTRL(channel), 20, 20)) {
-	while (REG_GET(dsidev, DSI_VC_CTRL(channel), 20, 20)) {
-	while (1) {
-	while (1) {
-	while (!list_empty(&manager_list)) {
-	while (venc_read_reg(VENC_F_CONTROL) & (1<<8)) {
-	while (val != REG_GET(base_addr, idx, b2, b1)) {
-		while (REG_GET(base, HDMI_CORE_DDC_STATUS, 2, 2) == 1) {
-	while (!list_empty(&overlay_list)) {
-			while (--i >= 0)
-		while (dev_p < dev_end) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-			while (n >= 8) {
-			while (n--)
-			while (n >= 4) {
-			while (n--) {
-			while (n >= 8) {
-			while (n--)
-			while (n >= 4) {
-			while (n--) {
-		while (height--) {
-		while (height--) {
-	while (running) {
-	while (ready) {
-	while (priv->shared->hw_running) {
-	while (!priv->free) {
-	while (buffer) {
-	while (size > 0) {
-	while ((long) size > 0) {
-	while (size > 0) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (len >= 4) {
-	while (len >= 2) {
-	while (len) {
-	while (len >= 4) {
-	while (len >= 2) {
-	while (len) {
-		while (1) {
-	while (size < PAGE_SIZE && plane < OMAPFB_PLANE_NUM) {
-	while (size < PAGE_SIZE && plane < OMAPFB_PLANE_NUM) {
-	while (!r && (this_opt = strsep(&options, ",")) != NULL) {
-		while (!(dispc_read_reg(DISPC_SYSSTATUS) & 1)) {
-	while (!list_empty(&hwa742.pending_req_list)) {
-	while (1) {
-	while (!(blizzard_read_reg(BLIZZARD_MEM_BANK0_STATUS) & 0x01)) {
-	while (blizzard_read_reg(BLIZZARD_NDISP_CTRL_STATUS) & (1 << 7)) {
-	while (blizzard_read_reg(BLIZZARD_NDISP_CTRL_STATUS) & (1 << 4)) {
-	while (!list_empty(&blizzard.pending_req_list)) {
-	while (!(blizzard_read_reg(BLIZZARD_PLL_MODE) & (1 << 1))) {
-	while (!(blizzard_read_reg(BLIZZARD_PLL_DIV) & (1 << 7)))
-	while ((wbuf[i] & DEFMASK) != ENDDEF) {
-	while ((wbuf[i] & DEFMASK) != ENDDEF) {
-	while ((wbuf[i] & DEFMASK) != ENDDEF) {
-	while ((readl(regbase + GE_STATUS_OFF) & 4) && --loops)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((this_opt = strsep(&options, " ")) != NULL) {
-	while (1) {
-		while (width >= 32) {
-	while (count != 0)
-	while (count != 0)
-	while (i++ < 500) {
-	while (size > 0) {
-	while (start_line < height) {
-	while (tries--) {
-	while (count--) {
-	while (i < count) {
-	while (bytecount) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (found != 1) {
-		while (b >>= 1)
-	while (found != 1) {
-		while (b >>= 1)
-    while(burst_size >>= 1) (*burst)++;
-		while (b >>= 1)
-	while (par->dmaFree < size && --count && !par->lockup) {
-	while (dsize >= RECT_EXPAND_TWO_COLOR_DATA_MAX_DWORDS) {
-	while (count--) {
-	while (dsize--) 
-	while(!((1000000 * p_divisor)/(16 * 24 * target_freq)) && 
-	while (diff_min && mod_min && (n_target < n_target_max)) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (length--)
-	while (wfm_idx < size) {
-			while (((v = mem[wfm_idx++]) != wfm_hdr->swtb) &&
-	while (map->vmode != -1) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-			while (n >= 8) {
-			while (n--)
-			while (n >= 4) {
-			while (n--) {
-			while (n >= 8) {
-			while (n--)
-			while (n >= 4) {
-			while (n--) {
-			while (n >= 8) {
-			while (n--)
-			while (n >= 4) {
-			while (n--) {
-		while (n >= 8) {
-		while (n--)
-		while (n >= 4) {
-		while (n--)
-	while (1) {
-	while (color) {
-	while (height--) {
-	while (1) {
-	while (1) {
-		while (height--) {
-		while (height--) {
-    while (1) {
-		while (height--) {
-		while (--words >= 0)
-		while (--words >= 0) {
-				while (line >= 512) {
-					while (line >= 512) {
-	while (loop) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while ((this_opt = strsep(&options, ","))) {
-	while(1) {
-	while (((1 << p) * freq > VCO_MAX) && (p >= 0))
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while (dinfo->ring_space < n) {
-	while (ndwords--) {
-	while (p[i] && p[i] != ' ' && p[i] != ',')
-	while ((this_opt = strsep(&options, ","))) {
-		while (dvo) {
-	while ((ioread32(mipi->linkbase + CMTSRTREQ) & 1) && --cnt)
-	while ((tdfx_inl(par, STATUS) & 0x1f) < size - 1)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-		while (!req.complete)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-    while (1)
-        while (b >>= 1)
-    while (found != 1)
-        while (b >>= 1)
-    while(found != 1) {
-        while (b >>= 1)
-        while (b >>= 1)
-	while (size >= 16) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (PM3_READ_REG(par, PM3InFIFOSpace) < n)
-		while ((PM3_READ_REG(par, PM3OutFIFOWords)) == 0)
 	} while ((PM3_READ_REG(par, PM3OutputFifo)) != PM3Sync_Tag);
-	while (height--) {
-		while (width >= PM3_FIFO_SIZE) {
-			while (i--) {
-		while (width--) {
-		while (pos < PM3RD_CursorPattern(1024))
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-			while (n >= 8) {
-			while (n--)
-			while ((n >= 4) && !bswapmask) {
-			while (n--) {
-			while (n >= 8) {
-			while (n--)
-			while ((n >= 4) && !bswapmask) {
-			while (n--) {
-		while (height--) {
-		while (height--) {
-	while (ulBits) {
-		while (((ulBits * ulApplied) +
-		while (ulScale > 0x800) {
-	while ((this_opt = strsep(&options, ","))) {
-		while (R <= STG4K3_PLL_MAX_R) {
-			while ((F >= STG4K3_PLL_MIN_F) &&
-	while (ip < end)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-		while (requested > (PAGE_SIZE << order) && order < MAX_ORDER)
-	while (list != &global_no_mode) {
-	while ((opt = strsep(&options, ",")) != NULL) {
-	while (virtual_start < virtual_end) {
-	while (height--) {
-			while (w >= 32) {
-		while (--i >= 0)
-	while (*mode != 0xffff) {
-	while (*mode != 0xffff) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((lcdc_read(priv, reg_offs) & mask) != until)
-			while (1) {
-		while (n--) {
-		while (j--) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((ndev = nubus_find_type(NUBUS_CAT_DISPLAY,
-	while (((multiplier | divider) & 1) == 0) {
-		while (ecp > par->pll_limits.ecp_max && ecp_div < 2) {
-	while (rinfo->has_CRTC2) {
-	while ((this_opt = strsep (&options, ",")) != NULL) {
-		while (MHz100 < MIN_FREQ_2595) {
-		while (mhz100 < (mach64MinFreq << 3)) {
-		while (mhz100 < (mach64MinFreq << 3)) {
-		while (mhz100 < (mach64MinFreq << 3)) {
-	while ((Remainder = Multiplier % Divider)) {
-					while (--Index >= 0) {
-						while (--Index >= 0) {
-		while (*lcdmodeptr != 0) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (db) {
-	while (x) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((count > 0) &&
-		while (*name) {
-		while (height--) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((options = strsep(&this_opt, ",")) != NULL) {
-	while (count--) {
-	while (count--) {
-	while (count--) {
-	while (count--) {
-	while (count) {
-	while (cnt--) {
-		while (--i >= 0)
-	while (cnt--) {
-	while (count) {
-		while (size--)
-		while (size--)
-	while (count--) {
-	while (count--) {
-	while (cnt--) {
-	while (count) {
-		while (size--)
-		while (size--)
-    while (count--) {
-    while (count--) {
-	while (cnt--) {
-	while (cnt--) {
-	while (count) {
-		while (size--)
-		while (size--)
-	while (cnt--) {
-	while (cnt--) {
-	while (count) {
-		while (size--)
-		while (size--)
-		while (count--) {
-		while (count--) {
-	while (count >= 4) {
-	while (count) {
-	while (i<MAX_STI_ROMS && str && *str) {
-	while (raw_font->next_font) {
-	while (size--) {
-	while (count) {
-		while (raw_font->next_font) {
-	while (--i && ((ioread16(par->base + LDPMMR) & 3) != val))
-		while (bit) {
-{	while (cnt < numslots) 			\
-	while (count--)
-	while ((inreg(dram_ctrl, GC_DCTL_RSV0_STATES) & GC_DCTL_STATES_MSK)) {
-	while (total < count) {
-	while (i < height) {
-	while (i < height) {
-	while (i < height) {
-	while (height--) {
-			while (w >= 16) {
-	while (s1d13xxxfb_readreg(info->par, S1DREG_BBLT_CTL0) & bit) {
-	while ((s1d13xxxfb_readreg(s1dfb, S1DREG_PS_STATUS) & 0x01))
-	while(timeout > 0) {
-                while (height--) {
-				while (height--) {
-				while (height--) {
-                while (height--) {
-                while (height--) {
-				while (height--) {
-				while (height--) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while ((sid = search_tc_card("PMAG-AA")) >= 0) {
-	while ((sid = search_tc_card("PMAG-AA")) >= 0) {
-  while (i-- && (*--s == 0x20)) *s = 0;
-	while (pos < edid[2]) {
-	while (Ftarget < 100000000) {
-	while (base < 449) {
-		while ((this_opt = strsep(&arg, ","))) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while(len)
-		while(not_useful(p,map))
-	while(len)
-	while(len)
-		while(not_useful(p,map))
-	while(len)
-	while(len)
-	while (itor) {
-	while (itor) {
-	while (itor) {
-	while (nubus_readdir(dir, ent) != -1) {
-	while (nubus_readdir(&dir, &ent) != -1)
-	while(nubus_readdir(&dir, &ent) != -1)
-	while(nubus_readdir(&dir, &ent) != -1)
-	while(nubus_readdir(&dir, &ent) != -1)
-	while (nubus_readdir(&dir, &ent) != -1) {
-	while (dev) {
-	while (nubus_readdir(dir, &ent) != -1) {
-	while (nubus_readdir(root, &ent) != -1) {
-	while (*c) {
-	while (fgets(line, sizeof(line)-1, stdin)) {
-					while (*c == ' ')
-			while (*c == ' ')
-	while (ids->id) {
-	while (ids->id) {
-		while (i > 0) {
-	while (start < end) {
-	while (1) {
-	while (1) {
-	while (!pvt->branchmap_werrors || !pvt->fsb_error_regs) {
-	while (1) {
-	while (1) {
-	while ((cpunode = of_get_next_child(cpus, cpunode)) != NULL) {
-	while (--i >= 0)
-	while (dev) {
-	while ((pdev = pci_get_device(PCI_VENDOR_ID_INTEL,
 	 * and while we are looking at it have its reference count
-	while ((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {
-	while (sysfs_attrib) {
-	while (sysfs_attrib) {
-	while (table && table->descr) {
-	while ((b = pci_find_next_bus(b)) != NULL) {
-	while (table && table->descr) {
-		while (sysfs_attrib->attr.name != NULL) {
-		while (sysfs_attrib->attr.name != NULL) {
-		while (mci_pdev == NULL && id->vendor != 0) {
-	while (table && table->descr) {
-	while (p[0] || p[1])
-	while (count && pos < sel->area_length) {
-	while (count && pos < sel->area_length) {
-	while (ssfw->pos + sizeof(*sa) <= ssfw->fw->size) {
-	while (!packet_data_temp_buf) {
-	while (!done) {
-	while (!list_empty(ptemp_list)) {
-	while (!list_empty(ptemp_list)) {
-	while (*s++ != 0 && length < maxlength)
-	while (1) {
-	while (offset <= len - sizeof(*node) &&
-	while (&efivars->walk_entry->list != &efivars->list) {
-	while (1) {
-		while (1) {
-	while (*data++ != 0 && length < maxlength)
-	while (--i >= 0)
-		while (s > 0 && *bp) {
-	while ((i < num) && (data - buf + sizeof(struct dmi_header)) <= len) {
-		while ((data - buf < len - 1) && (data[0] || data[1]))
-		while ((cmd_status = inb(PCAT_APM_STATUS_PORT))
-		while (apm_cmd->status == ESM_STATUS_CMD_UNSUCCESSFUL) {
-			while (--i >= 0)
-	while (--i >= 0)
-			while (--i >= 0) {
-			while (--i >= 0) {
-	while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-	while (--i >= 0)
-			while (--i >= 0)
-	while (--i >= 0)
-	while (desc->min + desc->step*i < min_vol &&
-	while (desc->min + desc->step*i < min_vol &&
-		while (buck12_voltage_map_desc.min +
-		while (buck12_voltage_map_desc.min +
-		while (buck12_voltage_map_desc.min +
-		while (buck12_voltage_map_desc.min +
-		while (buck12_voltage_map_desc.min +
-		while (buck12_voltage_map_desc.min +
-	while (--i >= 0)
-	while (eff[i].uA_load_min != -1) {
-	while (*mode) {
-		while (rdev->open_count--)
-	while (desc->min + desc->step * i < min_vol &&
-	while (--i >= 0)
-	while (--i >= 0)
-	while (len >= sizeof(uint32_t)) {
 	/* Wait for a while for the channel to halt before releasing */
-		while (debugfs_file_list[i].ptr != NULL) {
-		while (debugfs_file_list[i].file != NULL) {
-	while (prop) {
-	while (cplen > 0) {
-	while (matches->name[0] || matches->type[0] || matches->compatible[0]) {
-	while (sz--)
-	while (*next) {
-	while (*next) {
-	while (*next) {
-		while (isdigit(*(end-1)) && end > start)
-	while(tail) {
-	while (1) {
-	while (compat && *compat && cplen > 0) {
-	while (of_address_to_resource(np, num_reg, &temp_res) == 0)
-	while (cplen > 0) {
-	while (*compat) {
-	while (1) {
-		while (*p1) {
-	while (tag == OF_DT_BEGIN_NODE || tag == OF_DT_NOP) {
-	while (be32_to_cpup((__be32 *)p) == OF_DT_NOP)
-	while ((endp - reg) >= (dt_root_addr_cells + dt_root_size_cells)) {
-	while (na--)
-	while (dn) {
-	while (ipar != NULL) {
-		while (imaplen > (addrsize + intsize + 1) && !match) {
-	while (of_irq_to_resource(dev, nr, NULL))
-	while (!list_empty(&intc_desc_list)) {
-	while (ts->nsec >= NSEC_PER_SEC) {
-	while (ts->nsec < 0) {
-	while (num--) {
-	while (len) {
-	while (cnt < sprom_size_words) {
-	while (tuple) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-	while (1) {
-	while (1) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-	while (1) {
-	while (j < 7*cmd->cmd_num) {
-	while (ret == 0) {
-			while (list->head == list->tail) {
-	while (cnt > 0 && (buf[cnt-1] == '\n' || buf[cnt-1] == '\r'))
-	while (cnt > 0 && (buf[cnt-1] == ' ' || buf[cnt-1] == '\n'))
-	while (s > 0) {
-	while (s > 0) {
-	while (s > 0) {
-		while (list != &report_enum->report_list) {
-	while (ret == 0) {
-			while (list->head == list->tail) {
-	while (*pkeys != 0) {
-	while (retval == 0) {
-			while (list->head == list->tail) {
-		while (list->head != list->tail &&
-		while (pidff->pool[PID_SIMULTANEOUS_MAX].value[0] < 2) {
-	while (ret) {
-	while (wdata->head != wdata->tail) {
-		while (reader->cbuf_start == device->cbuf_end) {
-		while (--idx > 1) {
-	while (usage->code <= max && test_and_set_bit(usage->code, bit))
-	while ((start = fetch_item(start, end, &item)) != NULL) {
-	while (n--) {
-	while ((fifo_size-- > 0) && (actual < len)) {
-	while (iir) {
-	while (count) {
-	while (pkts_to_be_removed) {
-	while (count) {
-	while ((skb = __skb_dequeue_tail(&bcsp->unack)) != NULL) {
-	while (count) {
-	while (count) {
-	while (count) {
-	while ((fifo_size-- > 0) && (actual < len)) {
-	while (iir) {
-	while ((urb = usb_get_from_anchor(&data->deferred))) {
-	while (actual < len) {
-	while (size < avail) {
-	while (count) {
-	while ((skb = skb_dequeue(&ll->tx_wait_q)))
-	while (count) {
-	while ((skb = skb_dequeue(&data->txq))) {
-	while (tuple) {
-	while (n < len) {
-	while ((skb = hci_uart_dequeue(hu))) {
-	while ((skb = skb_dequeue(&data->pending_q))) {
-	while ((urb = bfusb_get_completed(data)))
-		while ((atomic_read(&data->pending_tx) < BFUSB_MAX_BULK_TX) &&
-	while (count) {
-	while (count) {
-	while (count) {
-		while (wait_remove_device == devfreq) {
-	while (n) {
-	while (*n) {
-	while ((skb = __skb_dequeue(&path->queue)))
-	while (n) {
-		while ((skb = __skb_dequeue(&path->queue)))
-			while ((skb = __skb_dequeue(&neigh->queue)))
-	while ((skb = __skb_dequeue(&skqueue))) {
-	while ((skb = __skb_dequeue(&neigh->queue))) {
-	while (!list_empty(&priv->cm.passive_ids)) {
-	while (!list_empty(&priv->cm.rx_error_list) ||
-		while ((skb = __skb_dequeue(&p->neigh->queue)))
-	while ((skb = __skb_dequeue(&skqueue))) {
-		while ((int) p->tx_tail - (int) p->tx_head < 0) {
-	while ((int) p->tx_tail - (int) p->tx_head < 0) {
-	while (!list_empty(&priv->cm.start_list)) {
-	while (!list_empty(&priv->cm.reap_list)) {
-	while ((skb = skb_dequeue(&priv->cm.skb_queue))) {
-	while (!list_empty(&priv->cm.passive_ids)) {
-	while (!skb_queue_empty(&mcast->pkt_queue)) {
-	while (n) {
-	while (*n) {
-	while (!skb_queue_empty(&mcast->pkt_queue)) {
-		while (!skb_queue_empty(&mcast->pkt_queue)) {
-	while (1) {
-	while (n) {
-	while (n--) {
-	while (n--) {
-	while (done < budget) {
-	while (priv->tx_head != priv->tx_tail || recvs_pending(dev)) {
-			while ((int) priv->tx_tail - (int) priv->tx_head < 0) {
-	while (!list_empty(&priv->dead_ahs)) {
-	while (ib_poll_cq(cq, 1, &wc) == 1) {
-	while (ib_poll_cq(cq, 1, &wc) == 1) {
 	/* Send data-out PDUs while there's still unsolicited data to send */
-	while (iscsi_task_has_unsol_data(task)) {
-	while (1) {
-	while (req->nfmr--)
 	while (ib_poll_cq(target->send_cq, 1, &wc) > 0)
-	while (dma_len) {
-	while (ib_poll_cq(cq, 1, &wc) > 0) {
-	while (ib_poll_cq(cq, 1, &wc) > 0) {
-	while ((p = strsep(&sep_opt, ",")) != NULL) {
-		while (ah->av.ib.stat_rate > IB_RATE_2_5_GBPS + MLX4_STAT_RATE_OFFSET &&
-		while (ah->av.eth.stat_rate > IB_RATE_2_5_GBPS + MLX4_STAT_RATE_OFFSET &&
-		while (path->static_rate > IB_RATE_2_5_GBPS + MLX4_STAT_RATE_OFFSET &&
-	while (get_sw_cqe(cq, i & cq->ibcq.cqe))
-	while ((cqe->owner_sr_opcode & MLX4_CQE_OPCODE_MASK) != MLX4_CQE_OPCODE_RESIZE) {
-	while ((int) --prod_index - (int) cq->mcq.cons_index >= 0) {
-	while (start < end) {
-			while (e != 0)
 	 * pioavail updates while we re-initialize
-	while (clock_cycles_left--) {
 		/* SDA seen high, issue START by dropping it while SCL high */
-	while (i2c_chains[idx].probe_dev != IPATH_NO_DEV) {
-	while (len-- > 0) {
-	while (len > 0) {
-		while (i2c_startcmd(dd, icd->eeprom_dev | READ_CMD)) {
-	while (len--)
-	while (n) {
-	while (*n) {
-	while (1) {
-	while ((diff = ipath_cmp24(ack_psn, wqe->lpsn)) >= 0) {
-	while (length) {
-	while (length) {
-	while (length) {
-	while (length) {
-	while (!list_empty(last)) {
 	/* XXX What if timer fires again while this is running? */
-	while (resend != NULL) {
-	while (rnr != NULL) {
-	while (1) {
-			while (l >= sizeof(u32)) {
-	while (!list_empty(list)) {
-	while (qplist != NULL) {
-		while (piolen >>= 1)
-		while (tail != head) {
-		while (tail != head) {
-	while (idx < niov && npkts < maxpkts) {
-		while (pktnwc < pktnw && idx < niov) {
-	while (!list_empty(pktlist)) {
-	while (dim) {
-	while (reg_addr < reg_end) {
-	while (reg_addr < reg_end) {
-	while (reg_addr < reg_end) {
-	while (reg_addr < reg_end) {
-	while (length) {
-	while (i) {
-	while (i) {
-	while (i)
-	while (i)
-	while (off >= mr->map[m]->segs[n].length) {
-	while (off >= mr->map[m]->segs[n].length) {
-		while (qp->s_rnr_timeout >= nqp->s_rnr_timeout) {
-	while (sqp->s_len) {
-	while (dd->ipath_sdma_descq_head != dmahead) {
-	while (dwords) {
-	while (tail != dd->ipath_sdma_descq_tail) {
-	while (j) {
-	while (sqp->s_len) {
-		while (qp->r_sge.num_sge) {
-			while (qp->r_sge.num_sge) {
-		while (qp->s_rdma_read_sge.num_sge) {
-			while (qp->s_rdma_read_sge.num_sge) {
-		while (qp->r_sge.num_sge) {
-	while (!(piobuf = get_7220_link_buf(ppd, &pnum))) {
-	while (idx < niov && npkts < maxpkts) {
-		while (pktnwc < pktnw && idx < niov) {
-	while (!list_empty(pktlist)) {
-	while (dim) {
-	while (n) {
-	while (*n) {
-	while (1) {
-	while (len--)
-		while (piolen >>= 1)
-		while (off >= mr->map[m]->segs[n].length) {
-		while (off >= mr->map[m]->segs[n].length) {
-		while (tries > 0 && sofar < cnt) {
-	while (sofar < len) {
-	while (sofar < len) {
-	while (length) {
-	while (qp->r_sge.num_sge) {
-	while (qp->r_sge.num_sge) {
-	while (cnt < len) {
-	while (cnt < len) {
-	while (first < next) {
-	while (bidx < QSFP_DEFAULT_HDR_CNT) {
-		while (tail != head) {
-	while (clock_cycles_left--) {
-	while (len-- > 0) {
-	while (len > 0) {
-		while (qib_twsi_wr(dd, dev | READ_CMD, QIB_TWSI_START)) {
-			while (idx != txp->next_descq_idx) {
-	while (ppd->sdma_descq_head != hwhead) {
-	while (dwords) {
-		while (tdc) {
-	while (dd->diag_client)
-	while (client_pool) {
-	while (reg_addr < reg_end) {
-	while (reg_addr < reg_end) {
-	while (reg_addr < reg_end) {
-	while (reg_addr < reg_end) {
-	while (olp) {
-	while (olp) {
-	while (qp->s_last != qp->s_acked) {
-	while ((diff = qib_cmp24(ack_psn, wqe->lpsn)) >= 0) {
-	while (qib_cmp24(psn, wqe->lpsn) > 0) {
-		while (qp->r_sge.num_sge) {
-	while (start < end) {
-	while (i)
-	while (i)
-	while (i)
-	while (i)
-	while (length) {
-	while (length) {
-	while (length) {
-	while (length) {
-	while (j) {
-	while (1) {
-			while (l >= sizeof(u32)) {
-	while (!list_empty(list)) {
-	while (!list_empty(&dev->txreq_free)) {
-	while (!list_empty(&dev->txreq_free)) {
-	while (errs && msp && msp->mask) {
-		while (errs & msp->mask) {
-				while (lmask & msp->mask) {
-	while (!(piobuf = qib_7322_getsendbuf(ppd, pbc, &pnum))) {
-		while (1) {
-	while (*nxt && nxt[1]) {
-	while (wait) {
-	while (chan_done &&
 	 * pioavail updates while we re-initialize.  This is mostly
-	while (i < ARRAY_SIZE(dd->pioavailshadow))
-		while (qp->s_rdma_read_sge.num_sge) {
-	while (qp->r_sge.num_sge) {
-		while (qp->s_last != qp->s_head) {
-		while (tail != head) {
-	while (src < end)
-	while (src < end)
-	while (count > 0) {
-	while (readl(c2dev->regs + PCI_BAR0_ADAPTER_HINT) & 0x80000000)
-	while (ib_wr) {
-	while (ib_wr) {
-	while (msg == NULL) {
-		while (priv != be16_to_cpu(*q->shared)) {
-	while ((qp =
-	while (pbl_depth) {
-	while (root) {
-	while (head) {
-	while (wqe_count--) {
-	while (c2dev->hints_read != be16_to_cpu(*c2dev->hint_count)) {
-	while (offset < optionsize) {
-		while (((nes_read32(nesdev->regs+NES_SOFTWARE_RESET) & 0x00000040) == 0) && i++ < 10000)
-		while ((nes_read_indexed(nesdev, NES_IDX_INT_CPU_STATUS) != 0x80) && i++ < 10000)
-	while (((nes_read32(nesdev->regs+NES_SOFTWARE_RESET) & 0x00000040) == 0) && i++ < 10000)
-	while (((u32temp = (nes_read_indexed(nesdev, NES_IDX_ETH_SERDES_COMMON_STATUS0)
-		while (((u32temp = (nes_read_indexed(nesdev, NES_IDX_ETH_SERDES_COMMON_STATUS1)
-		while (((u32temp = (nes_read_indexed(nesdev, NES_IDX_ETH_SERDES_COMMON_STATUS0)
-			while (((u32temp = (nes_read_indexed(nesdev, NES_IDX_ETH_SERDES_COMMON_STATUS1)
-	while (nesvnic->nic.rq_head != nesvnic->nic.rq_tail) {
-	while (nesvnic->nic.sq_head != nesvnic->nic.sq_tail) {
-	while ((!list_empty(&nesdev->cqp_pending_reqs)) &&
-	while (nesdev->netdev_count > 0) {
-	while (1) {
-	while (1) {
-		while (tmpskb != (struct sk_buff *)&nesqp->pau_list) {
-	while (!kthread_should_stop()) {
-		while ((skb_queue_len(&nesvnic->mgt_skb_list)) && !kthread_should_stop()) {
-	while (skb_queue_len(&nesvnic->mgt_skb_list)) {
-	while (skb_queue_len(&nesqp->pau_list)) {
-	while (1) {
-		while (mgtvnic->mgt.rq_head != mgtvnic->mgt.rq_tail) {
-				while (wqe_fragment_index < 5) {
 			while (i < mc_count && nesvnic->mcrq_mcast_filter &&
-			while (nesadapter->pft_mcast_map[mc_index] < 16 &&
-		while (((nes_read32(nesdev->regs+NES_SOFTWARE_RESET)
-		while (num_ascii < 17) {
-	while (sq_pbl_entries--)
-	while (rq_pbl_entries--)
-	while (le32_to_cpu(nescq->hw_cq.cq_vbase[cq_head].cqe_words[NES_CQE_OPCODE_IDX]) & NES_CQE_VALID) {
-	while (ib_wr) {
-	while (wqe_count) {
-	while (ib_wr) {
-	while (wqe_count) {
-	while (cqe_count < num_entries) {
-			while (i > 0) {
-	while (size > 0) {
-	while (size > 0) {
-	while (size > 0) {
-	while (size > 0) {
-	while (size > 0) {
-	while (size > 0) {
-	while (i < d->nmtus - 1 && d->mtus[i + 1] <= mtu)
-	while ((skb = skb_dequeue(&rxq))) {
-	while (pbl_start < rdev_p->rnic_info.pbl_top) {
-	while (wr) {
-	while (wr) {
-	while ((count+1) != 0 && fw_riwrh_opcode((struct fw_riwrh *)wqe) == T3_WR_RCV) {
-		while (Q_PTR2IDX((rptr+1), cq->size_log2) != ret)
-		while (!CQ_VLD_ENTRY(rptr, cq->size_log2, cqe)) {
-	while (ptr++ != wq->rq_wptr) {
-	while (ptr != wq->sq_wptr) {
-	while (cqe) {
-	while (!Q_EMPTY(ptr, cq->sw_wptr)) {
-	while (!Q_EMPTY(ptr, cq->sw_wptr)) {
-	while (Q_PTR2IDX(rptr, wq->sq_size_log2) != wptr) {
-		while (rem) {
-	while (rem) {
-	while (wr) {
-	while (wr) {
-	while (pbl_start < pbl_top) {
-	while (rqt_start < rqt_top) {
-	while (start < top) {
-	while (in_use--) {
-	while (in_use--) {
-	while (!ret) {
-	while (ptr != cq->sw_pidx) {
-	while (ptr != cq->sw_pidx) {
-	while (rptr != wq->sq.pidx) {
 		} while (err == -EAGAIN);
-		while (hwentries > T4_MAX_IQ_SIZE) {
-	while (!list_empty(&timeout_list)) {
-	while ((skb = skb_dequeue(&rxq))) {
-		while (t & ((1 << shift) - 1)) {
-		while ((bridge = pci_get_device(mdev->pdev->vendor,
-	while (o > order) {
-	while (test_bit(seg ^ 1, buddy->bits[order])) {
-	while (list_len > 0) {
-	while (list_len > 0) {
-	while ((eqe = next_eqe_sw(eq))) {
-	while ((int) --prod_index - (int) cq->cons_index >= 0) {
-	while (npolled < num_entries) {
-		while (go_bit(dev) && time_before(jiffies, end)) {
-	while (go_bit(dev) && time_before(jiffies, end)) {
-	while (npages > 0) {
-		while (1 << cur_order > npages)
-	while (i > start) {
-	while (send_wr) {
-	while (send_wr) {
-	while (recv_wr) {
-	while ((nr < num_entries) && (qmap_entry->reported == 0)) {
-	while (f < nr_of_pages) {
-	while (eqe) {
-	while (!list_empty(&cct->cq_list)) {
-	while (!kthread_should_stop()) {
-	while (!list_empty(&list)) {
-	while (wqe->optype != 0xff && wqe->wqef != 0xff) {
-	while (tail_idx != wqe_idx) {
-	while (!(hwpage_size & shca->hca_cap_mr_pgsize))
-	while (page < page_count) {
-	while (i < number) {
-		while (pginfo->next_hwpage < offs_hw + num_hw) {
-	while (pfn < end_pfn) {
-	while (list_empty(&file->recv_list)) {
-	while (--i >= s)
-	while (new_buf && (get_seg_num(new_buf) == rmpp_recv->seg_num + 1)) {
-	while (count--) {
-	while (!empty) {
-	while (!list_empty(&xrcd->tgt_qp_list)) {
-	while (!list_empty(&ctx->events)) {
-	while (list_empty(&file->events)) {
-	while (!list_empty(&file->ctxs)) {
-	while (list_empty(&file->event_list)) {
-	while (--i >= 0)
-	while (--i >= 0)
-	while (node) {
-	while (*link) {
-	while (!list_empty(&group->active_list)) {
-	while (!list_empty(&group->pending_list) ||
-	while (list_empty(&file->event_list)) {
-	while (*p) {
-	while (p) {
-	while (resp.count < cmd.ne) {
-	while (wr) {
-	while (wr) {
-	while (wr) {
-	while (wr) {
-	while (!list_empty(&id_priv->listen_list)) {
-	while (!list_empty(&id_priv->mc_list)) {
-	while (!list_empty(&cma_dev->id_list)) {
-	while (npages) {
-		while (ret) {
-	while (*link) {
-	while (node) {
-	while (*link) {
-	while (node) {
-	while (*link) {
-	while (*link) {
-	while ((work = cm_dequeue_work(cm_id_priv)) != NULL)
-	while (!ret && !atomic_add_negative(-1, &cm_id_priv->work_count)) {
-	while (i--)
-	while (--i) {
-	while (ib_poll_cq(port_priv->cq, 1, &wc) == 1) {
-	while (!list_empty(&mad_agent_priv->local_list)) {
-	while (!list_empty(&mad_agent_priv->wait_list)) {
-	while (!list_empty(&qp_info->recv_queue.list)) {
-	while (i >= start) {
-	while (nents) {
-	while(card->next) {
-		while (p->parent->parent)
-	while(byte_cnt > chain_size) {
-	while(byte_cnt > 0) {
-	while(size > 0) {
-	while(sg_dma_len(sglist) && nents--) {
-	while (ioc != NULL) {
-	while (ioc != NULL) {
-	while (idx < ioc->res_size) {
-	while (cur != NULL) {
-	while (rcnt < BITS_PER_LONG) {
-	while (rptr < rptr_end) {
-		while (rcnt) {
-	while (nents-- > 0) {
-		while(res_ptr < res_end)
-	while (size > 0) {
-		while (cnt--) {
-	while (sg_dma_len(sglist) && nents--) {
-			while (pdir_order < (19-12)) {
-			while (p_start < p_end)
-	while (tmp && tmp->end < start)
-	while (len<HPEE_PORT_INIT_MAX_LEN) {
-	while ((pos < maxlen) && (num_func <= es->num_functions)) {
-	while (host->io_pos && length) {
-	while (!(STATUS_FIFO_EMPTY & readl(host->addr + STATUS))) {
-	while (host->io_pos > 4 && length) {
-	while (host->io_pos && length) {
-		while (host->io_pos < 4 && length) {
-	while (!(STATUS_FIFO_FULL & readl(host->addr + STATUS))) {
-	while (host->io_pos < 4 && length) {
-	while (host->io_pos < 8 && length) {
-	while (length) {
-	while (host->io_pos && length) {
-	while (!(TIFM_MS_STAT_EMP & readl(sock->addr + SOCK_MS_STATUS))) {
-		while (host->io_pos < 4 && length) {
-	while (!(TIFM_MS_STAT_FUL & readl(sock->addr + SOCK_MS_STATUS))) {
-	while (length) {
-	while (time_before(jiffies, timeout)) {
-	while (len >= 4) {
-	while (len >= 4) {
-	while (!kthread_should_stop()) {
-	while (!error && dev->req) {
-	while (chunk) {
-	while (1) {
-		while ((req = blk_fetch_request(q)) != NULL)
-		while (ids->match_flags) {
-	while (1) {
-	while(inb(G2STAT(base)) & G2STAT_INTPEND) {
-	while (!in_irq() && falcon_got_lock && stdma_others_waiting())
-	while (!falcon_got_lock) {
-	while (time_before(jiffies, end))
-	while (sp_len > 1 && sp_model[sp_len - 1] == ' ')
-	while (d < h->buff + len) {
-		while (pring->txcmplq_cnt) {
 	/* while there are valid entries */
-	while (q->hba_index != q->host_index) {
 	/* while there are valid entries */
-	while (q->hba_index != q->host_index) {
-	while (!found) {
-	while (!list_empty(iocblist)) {
-		while ((iocb = lpfc_sli_next_iocb_slot(phba, pring)) &&
-	while (!list_empty(&hbq_buf_list)) {
-	while (!list_empty(&hbq_buf_list)) {
-	while (pring->rspidx != portRspPut) {
-	while (pring->rspidx != portRspPut) {
-	while (!list_empty(&phba->sli4_hba.sp_queue_event)) {
-	while (((status & mask) != mask) &&
-	while (++i < 500) {
-	while ((i++ < 30) && !(ha_copy & HA_ERATT)) {
-	while ((status & (HS_FFRDY | HS_MBRDY)) != (HS_FFRDY | HS_MBRDY)) {
-	while (resetcount < 2 && !done) {
 	while (++fcp_eqidx < phba->cfg_fcp_eq_count);
-		while (rsrc_id < (rsrc_start + rsrc_size)) {
-		while (((word0 & OWN_CHIP) == OWN_CHIP) ||
-	while (phba->sli.mbox_active) {
-	while ((iocb = lpfc_sli_next_iocb_slot(phba, pring)) &&
-	while (!list_empty(&completions)) {
-	while (!list_empty(&completions)) {
-		while (phba->sli.mbox_active) {
-	while (!list_empty(&phba->sli4_hba.sp_fcp_xri_aborted_work_queue)) {
-	while (!list_empty(&phba->sli4_hba.sp_els_xri_aborted_work_queue)) {
-		while ((cqe = lpfc_sli4_cq_get(cq))) {
-		while ((cqe = lpfc_sli4_cq_get(cq))) {
-	while ((cqe = lpfc_sli4_cq_get(cq))) {
-	while ((eqe = lpfc_sli4_eq_get(speq))) {
-	while ((eqe = lpfc_sli4_eq_get(fpeq))) {
-	while (!list_empty(&queue->page_list)) {
-	while (offset < data_size) {
-		while ((offset < data_size) &&
-	while (!list_empty(&mbox_cmd_list)) {
-	while (pring->txq_cnt) {
-	while (i > 0) {
-	while (i > 0) {
-	while (i > 0) {
-	while (index > 0) {
-	while (index > 0) {
-	while (esize > 0) {
-	while (len < LPFC_QUE_ACC_SIZE - pque->entry_size) {
-				while (num > 1) {
-			while (num > 1) {
-		while (!list_empty(&completions)) {
-	while (phba->work_hs & HS_FFER1) {
-	while (!finished && (index < (len - 4))) {
-			while (Length > 0) {
-				while(i--) {
-				while(i--) {
-				while(i--) {
-				while(i--) {
-				while(i--) {
-	while (cnt > 0) {
-	while (!list_empty(&vport->fc_nodes)) {
-	while (phba->sli.mbox_active) {
-	while (!list_empty(&phba->sli4_hba.sp_asynce_work_queue)) {
-		while (pagecnt) {
-		while (pagecnt) {
 	} while (++fcp_qidx < phba->cfg_fcp_eq_count);
-	while (!list_empty(&cqelist)) {
-	while (!fcp_xri_cmpl || !els_xri_cmpl) {
-	while (phba->sli.sli_flag & LPFC_SLI_MBOX_ACTIVE) {
-	while (true) {
-		while (offset < fw->size) {
-	while (true) {
-		while (payload_len) {
-		while (i > 0) {
-	while (time_before(jiffies, wait_time_max)) {
-			while (vport->unreg_vpi_cmpl == VPORT_INVAL && timeout)
-		while (check_count < ((phba->fc_ratov * 3) + 3) &&
-				while (vport->ct_flags && timeout)
-			while (vport->unreg_vpi_cmpl == VPORT_INVAL && timeout)
-	while (!list_empty(&evt->events_to_get)) {
-	while (!list_empty(&evt->events_to_see)) {
-	while (pring->txcmplq_cnt) {
-		while (phba->link_state != LPFC_LINK_DOWN) {
-			while (phba->link_state != LPFC_HBA_READY) {
-	while (phba->link_state != LPFC_LINK_DOWN) {
-		while (phba->link_state != LPFC_HBA_READY) {
-	while (size) {
-	while (size) {
-		while (Cnt >= sizeof (uint32_t)) {
-	while (sgde) {
-	while (sgde) {
-		while (!list_empty(&sblist)) {
-		while (!list_empty(&sblist)) {
-		while (!pgdone) {
-	while (time_after(later, jiffies)) {
-	while (time_after(later, jiffies) && cnt) {
-	while (!list_empty(&phba->work_list)) {
-	while (!kthread_should_stop()) {
-			while (!((new_fcf_record->vlan_bitmap[i] >> j) & 1)) {
-				while (j < numalpa) {
-	while ((offset + rec_length * sizeof(uint32_t) + sizeof(uint32_t))
-	while (i--)
-	while ((skb = skb_dequeue(&fnic->frame_queue))) {
-	while ((skb = skb_dequeue(&fnic->tx_queue))) {
-	while ((type = ioread8(&r->type)) != RES_TYPE_EOL) {
 	} while (csum != words[0]);
-	while (vnic_rq_desc_used(rq) > 0) {
-	while (vnic_wq_desc_used(wq) > 0) {
-		while (time_before(jiffies, wait_host_tmo)) {
-	while(len && timeout)
-			while(time_before(jiffies, i) && (inb(base + PIO_INT_REG) & EMPTY) && timeout)
-	while(len && timeout)
-	while(time_before(jiffies, i) && !(inb(base + STATUS_REG) & SCI))
-		while((idev=pnp_find_dev(NULL, id_table[i].vendor,
-	while (!list_empty(&shost->free_list)) {
-		while (--ticks_remaining >= 0)
-	while (list->next != &shost->__devices) {
-	while (!iscsi_tcp_segment_done(tcp_conn, segment, 1, copy)) {
-	while (kfifo_out(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {
-	while (1) {
-	while (count && qe) {
-	while ((uf = bfa_uf_get(uf_mod)) != NULL) {
-		while (num_entries > 0) {
-	while ((qe != qh) && (i < nrports)) {
-	while ((qe != qh) && (i < *nrports)) {
-	while (qe != qh) {
-	while (iocmd->adapter_hwpath[i] != '.')
-	while (i < iocmd->attr.total_vc_count) {
-	while ((struct bfa_ioim_s *) cmnd->host_scribble == hal_io) {
-	while (!list_empty(&bfad->active_aen_q)) {
-	while ((r32 & 1) && (cnt < BFA_SEM_SPINCNT)) {
-	while (!list_empty(&mod->cmd_q))
-	while (bfa_ioc_mbox_cmd_pending(ioc) && fwsync_iter > 0)
-	while (qe != qh) {
-	while (!list_empty(&timedout_q)) {
-	while (!kthread_should_stop()) {
-	while (ci != pi) {
-	while (!list_empty(comp_q)) {
-	while (!list_empty(&itnim->pending_q)) {
-	while (!list_empty(&itnim->pending_q)) {
-	while (desc < buf + vpd_len) {
-		while ((edev = enclosure_find(&sdev->host->shost_gendev, prev)) != NULL) {
-	while ((edev = enclosure_find(&sdev->host->shost_gendev, prev)) != NULL) {
 	while (!(readb(base+T_STATUS_REG_OFFSET) & T_ST_RDY)) barrier();
-    while (!(readb(base+T_STATUS_REG_OFFSET) & T_ST_RDY)) barrier();
 	while (!(readb(base+T_STATUS_REG_OFFSET) & T_ST_RDY)) barrier();
-    while (!(readb(base+T_STATUS_REG_OFFSET) & T_ST_RDY)) barrier();
-	while (sense_len > 0) {
-			while (len >= sizeof(*pattr)) {
-	while( n-- > 0)
-	while(time_before(jiffies, end))
-	while (probe_irq == SCSI_IRQ_NONE && time_before(jiffies, timeout))
-		while (((tmp = NCR5380_read(BUS_AND_STATUS_REG)) & BASR_ACK) || (NCR5380_read(STATUS_REG) & SR_REQ)) {
-	while (sges_in_segment) {
-		while (sges_in_segment) {
-	while (sges_left) {
-	while (!(mpt2sas_config_get_raid_volume_pg1(ioc, &mpi_reply,
-	while (!(mpt2sas_config_get_raid_volume_pg1(ioc, &mpi_reply,
-	while (!(mpt2sas_config_get_sas_device_pg0(ioc, &mpi_reply,
-	while (!(mpt2sas_config_get_raid_volume_pg1(ioc, &mpi_reply,
-		while (!(mpt2sas_config_get_phys_disk_pg0(ioc, &mpi_reply,
-	while (!(mpt2sas_config_get_expander_pg0(ioc, &mpi_reply, &expander_pg0,
-	while (!(mpt2sas_config_get_expander_pg0(ioc, &mpi_reply, &expander_pg0,
-	while (!(mpt2sas_config_get_phys_disk_pg0(ioc, &mpi_reply,
-			while (_scsih_add_device(ioc, handle, retry_count++,
-	while (!(mpt2sas_config_get_raid_volume_pg1(ioc, &mpi_reply,
-	while (!(mpt2sas_config_get_sas_device_pg0(ioc, &mpi_reply,
-			while (_scsih_add_device(ioc, handle, retry_count++,
-		while (scsi_host_in_recovery(ioc->shost))
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (1) {
-	while (ioc_state != MPI2_IOC_STATE_OPERATIONAL) {
-	while (!list_empty(cmd_list)) {
-	while (!list_empty(&tmp_list)) {
-	while (!kthread_should_stop()) {
-	while (count > 0 && !retry_eot) {
-		while (stp != NULL) {
-	while (s->cmpConsIdx != s->cmpProdIdx) {
-	while (pvscsi_msg_pending(adapter)) {
-	while ((req = blk_fetch_request(q)) != NULL) {
-	while (time_before_eq(jiffies, WAITtimeout)) {
-		while (len--) {
-	while (freescbs < needed) {
-	while (!mail_out(host, scb))
-	while (icb.phase) {
-	while (!(__raw_readl(zalon + IO_MODULE_IO_STATUS) & IOSTATUS_RY))
-				while ((inb(tmport) & 0x01) != 0x01) {
-			while ((inb(tmport) & 0x01) != j) {
-			while (adrcnt != 0) {
-				while ((inb(tmport) & 0x01) != 0x01) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0)
-		while ((inb(tmport) & 0x80) == 0)
-		while ((inb(tmport) & 0x80) == 0)
-		while ((inb(tmport) & 0x80) == 0)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00)
-		while (inb(tmport) != 0x8e)
-		while ((inb(tmport) & 0x80) == 0) {
-		while ((inb(tmport) & 0x80) == 0x00)
-		while ((inb(tmport) & 0x80) == 0x00) {
-		while ((inb(tmport) & 0x80) == 0x00)
-	while (cmd) {
-					while (1)
-		while (cmd) {
-		while ((read_aux_stat(regs) & ASR_BSY) && busycount++ < 100)
-	while (tmp) {
-		while ((asr & ASR_CIP) && timeout-- > 0)
-	while (tmp) {
-	while (*p1 && (i < MAX_SETUP_ARGS)) {
-		while (i)
-			while (',' == *bp || ' ' == *bp)
-		while (cmd) {
-		while (cmd) {
-	while (idx < 7 && eeprom_index_to_delay_map[idx] < delay)
-		while (tag_mask & dcb->tag_mask
-			while (left_io) {
-				while (len) {
-			while (left_io) {
-				while (len--) {
-	while (bval < 7 && (srb->msgin_buf[3] > clock_period[bval]
-	while (1) {
-	while (pages--) {
-		while (i < srbs_per_page && srb_idx < DC395x_MAX_SRB_CNT)
-	while (((status_reg_value & TW_STATUS_RESPONSE_QUEUE_EMPTY) == 0) && (count < TW_MAX_RESPONSE_DRAIN)) {
-		while ((response_que_value & TW_9550SX_DRAIN_COMPLETED) != TW_9550SX_DRAIN_COMPLETED) {
-		while (tw_dev->pending_request_count > 0) {
-		while ((status_reg_value & TW_STATUS_RESPONSE_QUEUE_EMPTY) == 0) {
-	while ((status_reg_value & flag) != flag) {
-	while ((status_reg_value & flag) != 0) {
-	while (tries < TW_MAX_RESET_TRIES) {
-	while ((status_reg_value & flag) != flag) {
-	while ((status_reg_value & flag) != 0) {
-	while ((status_reg_value & TW_STATUS_RESPONSE_QUEUE_EMPTY) == 0) {
-	while (tries < TW_MAX_RESET_TRIES) {
-	while (sha->sas_port[i]) {
-			while (sha->sas_phy[j]) {
-	while (sha->sas_port[i]) {
-				while (sha->sas_phy[j]) {
-	while (sha->sas_phy[i]) {
-	while (sas_ha->sas_phy[i]) {
-	while (phy != &mvi->phy[phy_no]) {
-	while (mvi->rx_cons != rx_prod_idx) {
-	while (i-- > 0) {
-	while (waits--) {
-	while ((resp & HRRQ_TOGGLE_BIT) ==
-	while ((req = readl(&hba->u.itl.iop->outbound_queue)) !=
-		while ((tag = mv_outbound_read(hba->u.mv.mu)))
-            while (!cmndinfo->wait_for_completion)
-	while ((key = strsep(&ips_str, ",."))) {
-	while ((item) && (item->scsi_cmd != SC))
-	while ((item) && (item->scsi_cmd != SC))
-		while ((scb = ips_removeq_scb_head(&ha->scb_activelist))) {
-		while ((scsi_cmd = ips_removeq_wait_head(&ha->scb_waitlist))) {
-		while ((scb = ips_removeq_scb_head(&ha->scb_activelist))) {
-		while ((scsi_cmd = ips_removeq_wait_head(&ha->scb_waitlist))) {
-	while ((scb = ips_removeq_scb_head(&ha->scb_activelist))) {
-	while (TRUE) {
-	while (TRUE) {
-	while ((ha->num_ioctl < IPS_MAX_IOCTL) &&
-	while ((p) && (scb = ips_getscb(ha))) {
-	while ((p) && (item != p->q_next))
-	while ((p) && (item != (struct scsi_cmnd *) p->host_scribble))
-	while ((p) && (item != p->next))
-	        while ((time > 0) && (!done)) {
-	while (TRUE) {
-	while (reset_counter < 2) {
-	while (reset_counter < 2) {
-	while (reset_counter < 2) {
-	while ((val =
-	while ((val = readl(ha->mem_ptr + IPS_REG_CCCR)) & IPS_BIT_SEM) {
-	while ((time > 0) && (!done)) {
-	while (days < 0 || days >= year_lengths[yleap = IPS_IS_LEAP_YEAR(year)]) {
-	while (timeout > 0) {
-		while (timeout > 0) {
-	while (timeout > 0) {
-		while (timeout > 0) {
-		while (timeout > 0) {
-		while (timeout > 0) {
-	while (i--)
-			while (i--)
-				while (i--)	/* write 32 dummy bytes */
-				while (j--)
-		while (i--)
-					while (1)
-		while (cmd) {
-	while (!(READ_AUX_STAT() & ASR_INT))
-	while (tmp) {
-		while ((asr & ASR_CIP) && timeout-- > 0)
-	while (*p1 && (i < MAX_SETUP_ARGS)) {
-		while (cmd) {
-		while (cmd) {
-	while (!list_empty(&cmds)) {
-					while ((cmd->SCp.Status) && ((z > 0) || (odd))) {
-					while (z > 0) {
-					while ((cmd->SCp.Status) && ((z > 0) || (odd))) {
-					while (z > 0 || odd) {
-	while (!(inb(base + HA_RSTATUS) & HA_SDRQ))
-	while (!(inb(base + HA_RSTATUS) & HA_SDRQ))
-	while (inb(base + HA_RSTATUS) & HA_SBUSY)
-		while (inb(base + HA_RSTATUS) & HA_SDRQ)
 		while (!(inb(base + HA_RSTATUS) & HA_SDRQ))
-	while (inb(base + HA_RSTATUS) & HA_SDRQ)
-	while ((dev = pci_get_device(PCI_VENDOR_ID_DPT, PCI_DEVICE_ID_DPT, dev)) != NULL) {
-	while (!done) {
-		while ((crq = crq_queue_next_crq(&hostdata->queue)) != NULL) {
-	while (!list_empty(&hostdata->sent)) {
-	while (1) {
-	while (!done) {
-		while ((async = ibmvfc_next_async_crq(vhost)) != NULL) {
-		while ((crq = ibmvfc_next_crq(vhost)) != NULL) {
-	while (1) {
-	while (!done) {
-		while ((crq = next_crq(&vport->crq_queue)) != NULL) {
-	while((siop = ffz(sir)) < p->siops) {
-	while (tmpid) {
-	while (time_before_eq(jiffies, the_time))
-		while ((inb(host->addr + TUL_Int) & XABT) == 0)
-	while (!((host->jsint = inb(host->addr + TUL_SInt)) & TSS_SCSIRST_INT))
-	while (first != NULL) {
-	while (tmp != NULL) {
-	while (tmp != NULL) {
-	while (tmp != NULL) {
-	while (tmp != NULL) {
-	while (tmp != NULL) {
-		while ((scb = initio_find_done_scb(host)) != NULL) {	/* find done entry */
-			while (wait_tulip(host) != -1) {
-			while (wait_tulip(host) != -1) {
-			while (inb(host->addr + TUL_XStatus) & XPEND)
-			while ((inb(host->addr + TUL_Int) & XABT) == 0)
-		while ((inb(host->addr + TUL_Int) & 0x04) == 0)
-	while ((scb = initio_pop_busy_scb(host)) != NULL) {
-	while ((scb = initio_pop_busy_scb(host)) != NULL) {
-	while ((scb = initio_pop_busy_scb(host)) != NULL) {
-	while (tmp != NULL) {
-	while (!((host->jsstatus0 = inb(host->addr + TUL_SStatus0))
-	while (!((host->jsstatus0 = inb(host->addr + TUL_SStatus0)) & TSS_INT_PENDING))
-	while (!((host->jsstatus0 = inb(host->addr + TUL_SStatus0))
-		while (!shost->hostt->scan_finished(shost, jiffies - start))
-   while (pDCB->TargetID != id || pDCB->TargetLUN != lun)
-	while (psrb && psrb->pNextSRB != pSRB)
-		while (time_before(jiffies, timeout) && !((dstate = DC390_read8 (DMA_Status)) & DMA_XFER_DONE)) {
-		while (time_before(jiffies, timeout) && !((dstate = DC390_read8 (DMA_Status)) & DMA_XFER_DONE)) {
-	    while( bval & 0x1f )
-	while (pSRB->TotalXferredLen + (unsigned long) sg_dma_len(psgl) < pSRB->Saved_Ptr)
-    id = 0; while (lun >>= 1) id++;
-		while (pPrevDCB->pNextDCB != pDCB)
-		while (!(regs->ISTR & ISTR_FE_FLG))
-	while (inb(config.ogm_address - 1) != 0 && config.aborted[mscp_index] == 0xff)
-    while ((inb(LCL_DOORBELL_INTR(config.doorbell_address)) & (config.slot ? 2 : 1))  && config.aborted[mscp_index] == 0xff)
-		while (MCA_NOTFOUND != (slot = mca_find_adapter(fd_mcs_adapters[loop].id, slot))) {
-	while ((shpnt = hosts[i++])) {
-		while ((data_count = FIFO_Size - inw(FIFO_Data_Count_port)) > 512) {
-		while ((data_count = inw(FIFO_Data_Count_port)) > 0) {
-	while (size > s) {
-	while (!h[j].next) {
-		while (j > i) {
-	while (size > s) {
-	while (1) {
-		while (q->next && q->next != (m_link_s *) b) {
-	while (*vbpp && (*vbpp)->vaddr != m)
-	while (*pp && *pp != p)
-		while (vp && (m_addr_t) vp->vaddr != a)
-	while (cur != NULL && (pc = strchr(cur, ':')) != NULL) {
-	while (cur != NULL && (pc = strchr(cur, ':')) != NULL) {
-				while (*pe && *pe != ARG_SEP && 
-	while ((c = *p++) != 0) {
-	while (src < end) {
-			while (relocs--) {
-	while (--i >= 0) {
-	while (lcmd) {
-	while (maxn-- && lp->queuedccbs < lp->queuedepth) {
-	while ((cp=np->ccb->link_ccb) != NULL) {
-	while (1) {
-	while (cp) {
-	while (cp) {
-	while (cp && (CCB_PHYS (cp, phys) != dsa))
-		while (cp && (CCB_PHYS (cp, phys) != dsa))
-		while (qp != &lp->busy_ccbq) {
-		while (cp && (CCB_PHYS (cp, phys) != dsa))
-		while (!(INB(nc_stest4) & LCKFRQ) && --i > 0)
-	while (!(INW(nc_sist) & GEN) && ms++ < 100000) {
-		while (wcmd->next_wcmd)
-	while (*pcmd) {
-	while ((wcmd = waiting_list) != NULL) {
-	while (!kthread_should_stop()) {
-		while ((skb = __skb_dequeue(&bg->fcoe_rx_list)) != NULL) {
-	while (!kthread_should_stop()) {
-		while (!list_empty(&p->work_list)) {
-	while (!test_bit(ADAPTER_STATE_UP, &hba->adapter_state) && i--)
-	while (!interface->ctlr.sel_fcf) {
-	while ((skb = __skb_dequeue(&bg->fcoe_rx_list)) != NULL)
-	while (sg_len) {
-	while (((wqe = cqe->wqe) & FCOE_CQE_TOGGLE_BIT) ==
-	while (i < num_cqe) {
-			while (--i >= 0) {
-	while (*pbl && *(pbl + 1)) {
-	while ((tgt->num_active_ios.counter != 0) && (i++ < BNX2FC_WAIT_CNT))
-	while (hba->tgt_ofld_list[conn_id] != NULL) {
-	while (num_pages--) {
-	while (num_pages--) {
-	while (inb(iobase + REG_AUX_STATUS) & ABSY_ASSERTED) {
-		while (!(inb(iobase + REG_STATUS) & DRQ_ASSERTED)) {
-	while ((dev = pci_get_class(PCI_CLASS_STORAGE_SCSI << 8, dev))) {
-	while ((dev = pci_get_class(PCI_CLASS_STORAGE_SCSI << 8, dev))) {
-	while (cur && (pc = strchr(cur, ':'))) {
-	while (cur && isdigit(*cur) && i < MAX_INT_PARAM) {
-	while ((jiffies - time) < (10 * HZ) && limit++ < 200000)
-	while (1) {
-	while (1) {
-		while (!got_interrupt(shpnt))
-		while (!got_interrupt(shpnt))
-		while (!got_interrupt(shpnt))
-		while (!got_interrupt(shpnt))
-		while (!got_interrupt(shpnt))
-		while (reset_status(shpnt) == IM_RESET_IN_PROGRESS && --ticks) {
-	while (immediate_feature(shpnt, speedrun, adapter_timeout) == 2) {
-		while ((token = strsep(&str, ",")) != NULL) {
-			while (ld(shpnt)[next_ldn(shpnt)].cmd) {	/* search for a occupied, but not in */
-	while (1) {
 	 * interrupt will not be executed, while we are in here! */
-	while (reset_status(shpnt) == IM_RESET_IN_PROGRESS && --ticks && ((inb(IM_INTR_REG(shpnt)) & 0x8f) != 0x8f)) {
-	while (cur && isdigit(*cur) && i < IM_MAX_HOSTS) {
-	while (!iscsi_tcp_segment_done(tcp_conn, segment, 0, r)) {
-	while (1) {
-	while (iscsi_sw_tcp_xmit_qlen(conn)) {
-	while (session->state != ISCSI_SESSION_LOGGED_IN) {
-	while (skb->len >= NLMSG_SPACE(0)) {
-	while(tmp != 0) {
-	while ((time_out-- != 0) &&
-	while ((time_out-- != 0) &&
-	while (reqlen) {
-				while (len--) {
-	while (reqlen && !(i & 0x40)) {
-				while (len--) {
-		while (*mqp)
-		while (length > 256) {
-			while (length > 0) {
-			while (length >= 256) {
-			while (length > 0) {
-    while (time_before(jiffies, target_jiffies)) barrier();
-    while (len > 0) {
-    while (len > 0) {
-	while (my_ptr < len) {
-	while ((msg = msgqueue_getmsg(&host->scsi.msgs, msgnr++)) != NULL) {
-	while ((s = strsep(&str, ",")) != NULL) {
-	while ((msg = msgqueue_getmsg(&info->scsi.msgs, msgnr++)) != NULL) {
-	while (bytes_transferred != 0) {
-		while (fifo && info->scsi.SCp.ptr) {
-		while ((msg = msgqueue_getmsg(&info->scsi.msgs, msgnr++)) != NULL) {
-		while ((msg = msgqueue_getmsg(&info->scsi.msgs, msgnr++)) != NULL) {
-		while ((msg = msgqueue_getmsg(&info->scsi.msgs, msgnr++)) != NULL) {
-	while (!info->internal_done) {
-	while (fas216_readb(info, REG_STAT) & STAT_INT)
-  while(1)
     while (((status = readw(base + STAT)) & 0x100)==0);
-  while(len > 0)
-    while (((status = readw(base + STAT)) & 0x100)==0)
-  while(len >= 32)
-  while(len > 0)
-  while(len >= 32)
-  while(len > 0)
-			while (length >= 256) {
-		while (length > 0) {
-	while ((BlockSize -= sizeof(struct BusLogic_CCB)) >= 0) {
-	while (HostAdapter->AllocatedCCBs < HostAdapter->InitialCCBs) {
-	while ((CCB = NextCCB) != NULL) {
-	while (HostAdapter->AllocatedCCBs - PreviouslyAllocated < AdditionalCCBs) {
-	while (--TimeoutCounter >= 0) {
-	while (ParameterLength > 0 && --TimeoutCounter >= 0) {
-	while (--TimeoutCounter >= 0) {
-	while (LastInterchange > 0) {
-	while ((PCI_Device = pci_get_device(PCI_VENDOR_ID_BUSLOGIC, PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER, PCI_Device)) != NULL) {
-	while ((PCI_Device = pci_get_device(PCI_VENDOR_ID_BUSLOGIC, PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER_NC, PCI_Device)) != NULL) {
-	while ((PCI_Device = pci_get_device(PCI_VENDOR_ID_BUSLOGIC, PCI_DEVICE_ID_BUSLOGIC_FLASHPOINT, PCI_Device)) != NULL) {
-				while (ProbeInfo->HostAdapterBusType != BusLogic_PCI_Bus)
-	while (--TimeoutCounter >= 0) {
-	while (--TimeoutCounter >= 0) {
-	while (--TimeoutCounter >= 0) {
-	while ((CompletionCode = NextIncomingMailbox->CompletionCode) != BusLogic_IncomingMailboxFree) {
-	while (HostAdapter->FirstCompletedCCB != NULL) {
-	while (*Keyword != '\0') {
-	while (true) {
-		while (*OptionsString != '\0' && *OptionsString != ';') {
-	while (time_before(jiffies, i) && !priv->qabort &&
-	while (time_before(jiffies, k) && !priv->qabort &&
-	while (inb(qbase + 5))
-	while (!priv->qabort && ((i & 0x20) != 0x20)) {
-	while (priv->qlcmd != NULL) {
-	while (inb(qbase + 0xf) & 4)
-	while (len >= plen) {
-	while (remaining > 0 && sg) {
-	while (!fc_fcp_lport_queue_ready(lport) && time_before(jiffies,
-	while (fc_exch_ptr_get(pool, index)) {
-	while (fc_cpu_mask < nr_cpu_ids) {
-	while (remaining > 0 && sg) {
-	while (plen >= sizeof(*np)) {
-	while (hba->status_tail != hba->status_head) {
-	while (count < hba->sts_count) {
-		while (readl(base + OMR0) != MU_HANDSHAKE_SIGNATURE) {
-	while (readl(base + OMR0) != MU_HANDSHAKE_SIGNATURE) {
-	while ((readl(base + YIOA_STATUS) & SS_MU_OPERATIONAL) == 0) {
-	while (!(le32_to_cpu(*scratch) & SS_STS_HANDSHAKE)) {
-	while (hba->out_req_cnt > 0) {
-	while (hba->mu_status == MU_STATE_RESETTING) {
-	while (hba->ccb[tag].req_type & PASSTHRU_REQ_TYPE) {
-	while (hostdata->eh_complete != NULL) {
-		while (!list_empty(&fc_host_rport_bindings(shost))) {
-	while (rport->port_state == FC_PORTSTATE_BLOCKED &&
-	while (1) {
-		while (1) {
-	while (!list_empty(&conn->mgmtqueue)) {
-	while (!list_empty(&conn->cmdqueue)) {
-	while (!list_empty(&conn->requeue)) {
-	while (!list_empty(&mhba->cmd_pool)) {
-	while (!list_empty(&mhba->cmd_pool)) {
-	while ((tmp != HANDSHAKE_READYSTATE) && (tmp != HANDSHAKE_DONESTATE)) {
-	while (!list_empty(&mhba->free_ob_list)) {
-	while (!list_empty(&mhba->waiting_req_list)) {
-		while (1) {
-			while (1) {
-				while (resp->nextrp)
-		while ((rp = prev_rp->nextrp)) {
-	while (sfp->headrp)
-	while(pos != NULL && (next = strchr(pos, ':')) != NULL) {
-	while (len) {
-		while (hregs->ctrl & HPC3_SCTRL_ACTIVE)
-	while (start < end) {
-	while (!list_empty(&starved_list)) {
-	while (1) {
-	while (sdev->device_busy) {
-	while (reqlen) {
-				while (len--) {
-	while (reqlen && !(i & 0x40)) {
-				while (len--) {
-	while (time_after(i, jiffies) && !(inb(STAT_REG) & 0x80))
-		while(((flag_ccb = readl(&reg->outbound_queueport)) != 0xFFFFFFFF)
-		while ((readl(&reg->host_int_status) & ARCMSR_HBCMU_OUTBOUND_POSTQUEUE_ISR) && (i++ < ARCMSR_MAX_OUTSTANDING_CMD)) {
-		while (iop_len > 0) {
-		while ((acb->wqbuf_firstindex != acb->wqbuf_lastindex) && \
-	while ((flag_ccb = readl(&reg->outbound_queueport)) != 0xFFFFFFFF) {
-	while ((flag_ccb = readl(&reg->done_qbuffer[index])) != 0) {
-	while (readl(&phbcmu->host_int_status) &
-		while ((wqbuf_firstindex != wqbuf_lastindex) && (allxfer_len < 124)) {
-		while ((acb->rqbuf_firstindex != acb->rqbuf_lastindex)
-			while (iop_len > 0) {
-				while (user_len > 0) {
-	while (count){
-	while (count){
-	while(count){
-	while (count) {
-	while (count) {
-	while (1) {
-	while(1){
-	while (1) {
-	while ((acb->rqbuf_firstindex != acb->rqbuf_lastindex)
-		while (iop_len > 0) {
-			while (user_len > 0) {
-	while(in_8(&mr->fifo_count))
-	while (ms->phase == idle) {
-	while ((in_8(&mr->bus_status1) & BS1_BSY) == 0) {
-	while ((cmd = ms->request_q) != NULL) {
-		while ((in_8(&mr->bus_status1) & BS1_RST) != 0)
 		/* wait a little while until the fifo drains */
-		while (t > 0 && in_8(&mr->fifo_count) != 0
-		while ((in_8(&mr->bus_status0) & BS0_REQ) == 0 && --t >= 0)
-			while ((in_8(&mr->bus_status0) & BS0_REQ) == 0) {
-	while(ms->phase != idle) {
-	while (!list_empty(&list)) {
-	while (parity_check != 0) {
-	while (lower_32_bits(uf_control->address_table.array[frame_get]) == 0 &&
-	while (uf_control->buffers.array[frame_get].state == UNSOLICITED_FRAME_RELEASED) {
-		while (phy_index < SCI_MAX_PHYS) {
-	while (phy_index < SCI_MAX_PHYS) {
-		while (++phy_index < SCI_MAX_PHYS) {
-	while (
-		while (sg) {
-		while (total_len > 0) {
-		while (i--) {
-		while (esp_read8(ESP_FFLAGS) & ESP_FF_FBYTES) {
-	while (fcnt--) {
-	while (!intr_done)
-	while (sreset & BE2_SET_RESET) {
-	while (sreset & BE2_SET_RESET) {
-	while (num_loop) {
-	while ((compl = be_mcc_compl_get(phba))) {
-	while (eqe->dw[offsetof(struct amap_eq_entry, valid) / 32]
-		while (eqe->dw[offsetof(struct amap_eq_entry, valid) / 32]
-		while (eqe->dw[offsetof(struct amap_eq_entry, valid) / 32]
-		while (eqe->dw[offsetof(struct amap_eq_entry, valid) / 32]
-		while (eqe->dw[offsetof(struct amap_eq_entry, valid) / 32]
-	while ((*pep_read_ptr) != cq_index) {
-	while (mcc_compl->flags & CQE_FLAGS_VALID_MASK) {
-	while (sol->dw[offsetof(struct amap_sol_cqe, valid) / 32] &
-	while ((i) || (j)) {
-	while (idx < mem_descr_sglh->num_elements) {
-	while (idx < mem_descr_sg->num_elements) {
-		while (eqe->dw[offsetof(struct amap_eq_entry, valid) / 32]
-	while ((dev = next_scsi_device(dev))) {
-		while ((dev = pnp_find_dev(NULL, ISAPNP_VENDOR('D', 'T', 'C'), ISAPNP_FUNCTION(0x436e), dev))) {
-	while (1) {
-		while (NCR5380_read(C400_CONTROL_STATUS_REG) & CSR_HOST_BUF_NOT_RDY)
-	while (1) {
-	while ((d_val.u.low != UINT_MAX) && (d_val.u.high != UINT_MAX)) {
-			while (!(host_diag & HOST_DIAG_WRITE_ENABLE)) {
-			while (host_diag & HOST_DIAG_RESET_ADAPTER) {
-			while ((abs_state <= MFI_STATE_FW_INIT) &&
-	while ( !( HostDiag & DIAG_WRITE_ENABLE) ) {
-	while ( ( HostDiag & DIAG_RESET_ADAPTER) ) {
-	while (consumer != producer) {
-		while (!list_empty(&clist_local)) {
-	while (!list_empty(&clist_local)) {
-	while (fw_state != MFI_STATE_READY) {
-	while (!list_empty(&adapter->pend_list)) {
-	while (!mbox->numstatus && mbox->cmd == 0xFF) {
-	while ( STp->buffer->syscall_result && time_before(jiffies, startwait + timeout*HZ) &&
-	while ( STp->buffer->syscall_result && time_before(jiffies, startwait + timeout*HZ) &&
-	while (time_before (jiffies, startwait + to*HZ))
-		while (retval && time_before (jiffies, startwait + 5*60*HZ)) {
-	while (1) {
-	while (++retries < 10) {
-				while ( !flag && time_before(jiffies, startwait + 60*HZ) ) {
-	while (attempts && time_before(jiffies, startwait + 60*HZ)) {
-	while (cnt != mt_count) {
-	while (1) {
-		while (1) {
-		while (cnt != mt_count) {
-	while (count--) {
-	while (count--) {
-	while ((STp->buffer)->buffer_bytes + count > write_threshold)
-	while (stp != NULL) {
-		while((volatile u8)mbox->m_in.numstatus == 0xFF)
-		while( (volatile u8)mbox->m_in.poll != 0x77 )
-		while(RDINDOOR(adapter) & 0x2)
-		while (!((byte = irq_state(adapter)) & INTR_VALID))
-		while((nstatus = (volatile u8)adapter->mbox->m_in.numstatus)
-		while((nstatus = (volatile u8)adapter->mbox->m_in.numstatus)
-		while( RDINDOOR(adapter) & 0x02 )
-	while (atomic_read(&adapter->pend_cmds) > 0 ||
-		while (1) {
-		while (esp_count) {
-	while (r != (unsigned char) 0xf0) {
-    while ( !(inb(instance->io_port + P_STATUS_REG_OFFSET) & P_ST_RDY) )
-    while ( !((inb(instance->io_port + P_STATUS_REG_OFFSET)) & P_ST_RDY) )
-			while ((skb = __skb_dequeue(&p->fcoe_rx_list)) != NULL)
-			while ((skb = __skb_dequeue(&p->fcoe_rx_list)) != NULL)
-		while ((skb = __skb_dequeue(&p->fcoe_rx_list)) != NULL)
-	while ((skb = __skb_dequeue(&p->fcoe_rx_list)) != NULL)
-	while (!kthread_should_stop()) {
-		while ((skb = __skb_dequeue(&p->fcoe_rx_list)) == NULL) {
-	while (rlen > 0) {
-	while (rlen > 0) {
-	while (rlen >= sizeof(*desc)) {
-	while ((skb = skb_dequeue(&fip->fip_recv_list)))
-	while (rlen > 0) {
-		while (len > 0) {
-	while ((skb = __skb_dequeue(&port->fcoe_pending_queue)) != NULL) {
-	while (port->fcoe_pending_queue.qlen) {
-		while (--cp >= ifname && *cp == '\n')
-		while(1) {
-	while (--loop_count && (sbus_readw(qpti->qregs + HCCTRL) & HCCTRL_HIRQ)) {
-	while (--loop_count &&
-	while (--loop_count &&
-	while (--loop_count && (sbus_readw(qpti->qregs + MBOX0) == 0x04))
-	while (--loop_count && ((sbus_readw(qpti->qregs + MBOX0) & 0xff) == 0x04))
-	while (--timeout && (sbus_readw(qpti->qregs + SBUS_CTRL) & SBUS_CTRL_RESET))
-		while(qlink->next)
-		while(qlink->next != qpti)
-		while (sg_count > 0) {
-	while (out_ptr != in_ptr) {
-	while (len > 0) {
-		while (NCR5380_read(DTC_CONTROL_REG) & CSR_HOST_BUF_NOT_RDY)
-	while (!(NCR5380_read(DTC_CONTROL_REG) & D_CR_ACCESS))
-		while (NCR5380_read(DTC_CONTROL_REG) & CSR_HOST_BUF_NOT_RDY)
-	while (!(NCR5380_read(DTC_CONTROL_REG) & D_CR_ACCESS))
-	while (!(NCR5380_read(TARGET_COMMAND_REG) & TCR_LAST_BYTE_SENT))
-	while (!time_after_eq(jiffies, wtime)) {
-			while ((readw(&ha->reg->ctrl_status) &
-	while ((!test_bit(AF_ONLINE, &ha->flags)) &&
-	while (time_before(jiffies, wait_online)) {
-	while (fn > 0) {
-	while (!done) {
-	while (!done) {
-	while (!done) {
-	while (done == 0) {
-	while ((qla4_8xxx_rom_lock(ha) != 0) && (loops < 50000)) {
-	while ((state != PHAN_PEG_RCV_INITIALIZED) && (loops < 30000)) {
-	while (drv_state != drv_active) {
-	while (1) {
-	while ((qla4_8xxx_rom_lock(ha) != 0) && (loops < 50000)) {
-	while ((ha->response_ptr->signature != RESPONSE_PROCESSED)) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (ha->aen_out != ha->aen_in) {
-	while (wait_count--) {
-		while (test_bit(AF_MBOX_COMMAND_DONE, &ha->flags) == 0) {
-	while (drvr_wait) {
-	while (!kthread_should_stop() &&
-	while (1) {
-	while (res == 0 && dev) {
-			while (!list_empty(&sata_q))
 	} while (ap);
-	while (i && buf[i] == ' ')
-	while (delay < max_delay) {
-	while (delay < IPR_LDUMP_MAX_SHORT_ACK_DELAY_IN_USEC) {
-	while (bytes_copied < length &&
-	while(ioa_cfg->in_reset_reload) {
-	while(ioa_cfg->in_reset_reload) {
-	while (count) {
-	while(ioa_cfg->in_reset_reload) {
-	while (1) {
-		while ((be32_to_cpu(*ioa_cfg->hrrq_curr) & IPR_HRRQ_TOGGLE_BIT) ==
-	while(ioa_cfg->in_reset_reload) {
-	while(ioa_cfg->in_reset_reload) {
-	while (length) {
-	while (i-- > 0) {
-	while(ioa_cfg->in_reset_reload) {
-	while(ioa_cfg->in_reset_reload) {
 	 * while (device is not ready to send status byte)
-	while (r != (unsigned char) 0xb8) {
-	while (!found) {
-	while (reg & TWL_HISTATUS_RESPONSE_INTERRUPT) {
-        while ((reg_value & value) != result) {
-	while (tries < TW_MAX_RESET_TRIES) {
-		while (i < TW_Q_LENGTH) {
-      while ((data_count = FIFO_Size - inw(port_base + FIFO_Data_Count)) > 512) {
-      while ((data_count = inw(port_base + FIFO_Data_Count)) > 0) {
-			while ((max > 0) && *vendor == ' ') {
-			while ((max > 0) && *model == ' ') {
-			while ((max > 0) && *vendor == ' ') {
-			while ((max > 0) && *model == ' ') {
-	while (&devinfo_table->scsi_dev_info_list == dl->bottom) {
-	while (sizeRead < pm8001_ha->fw_image->size) {
-	while (pdev) {
 		} while (mult > 0);
-	while (skb->len >= NLMSG_SPACE(0)) {
-		while (transports[tport].refcnt != 0) {
-			while (driver->refcnt != 0) {
-	while(pos != NULL && (next = strchr(pos, ':')) != NULL) {
-	while (csk->wr_cred && (skb = skb_peek(&csk->write_queue)) != NULL) {
-	while (csk->wr_cred && (skb = skb_peek(&csk->write_queue)) != NULL) {
-	while (credits) {
-	while (i < csk->cdev->nmtus - 1 && csk->cdev->mtus[i + 1] <= mtu)
-	while ((skb = cxgbi_sock_dequeue_wr(csk)) != NULL)
-	while (skb) {
-	while (i < ddp->nppods) {
-	while (!err) {
-	while (i < h->ndevices) {
-	while (count < HPSA_TUR_RETRY_LIMIT) {
-	while (left) {
-	while (!list_empty(&h->reqQ)) {
-	while (interrupt_pending(h)) {
-		while (raw_tag != FIFO_EMPTY)
-	while (raw_tag != FIFO_EMPTY)
-	while (interrupt_pending(h)) {
-		while (raw_tag != FIFO_EMPTY) {
-	while (raw_tag != FIFO_EMPTY) {
-	while (!list_empty(list)) {
-	while (1) {
-	while (1) {
-	while (--wait && ((SEEPROM_STATUS_INB(sd) & sd->sd_RDY) == 0)) {
-	while (ahc->qoutfifo[ahc->qoutfifonext] != SCB_LIST_NULL) {
-				while (--wait != 0) {
-		while (!ahc_is_paused(ahc))
-	while (syncrate->rate != NULL) {
-	while (index < ahc->msgout_len) {
-		while ((sg_map = SLIST_FIRST(&scb_data->sg_maps))!= NULL) {
-	while (qinpos != qintail) {
-	while (next != SCB_LIST_NULL) {
-		while (next_scb != NULL) {
-	while (next != SCB_LIST_NULL) {
-	while (scbp_next != NULL) {
-		while ((ahc_le32toh(sg->len) & AHC_DMA_LAST_SEG) == 0) {
-	while (lstate->event_r_idx != lstate->event_w_idx
-	while (cur_patch < last_patch && start_instr == cur_patch->begin) {
-	while (printed_mask != 0xFF) {
-	while (qinpos != qintail) {
-	while (scb_index != SCB_LIST_NULL && i++ < 256) {
-	while (scb_index != SCB_LIST_NULL && i++ < 256) {
-	while (ahc->qoutfifo[qoutpos] != SCB_LIST_NULL && i++ < 256) {
-	while (scb_index != SCB_LIST_NULL && i++ < 256) {
-	while ((cmd = &ahc->targetcmds[ahc->tqinfifonext])->cmd_valid != 0) {
-		while (symtable->seq(symtable, &key, &data, R_FIRST) == 0) {
-	while(curnode != NULL) {
-		while (1) {
-	while (node1 != NULL) {
-	while((node = SLIST_FIRST(symlist_src2)) != NULL) {
-	while (num_tabs-- > 0)
-	while (symtable->seq(symtable, &key, &data, flag) == 0) {
-	while (SLIST_FIRST(&masks) != NULL) {
-	while (SLIST_FIRST(&aliases) != NULL) {
-	while (SLIST_FIRST(&registers) != NULL) {
-	while (SLIST_FIRST(&constants) != NULL) {
-	while (SLIST_FIRST(&exported_labels) != NULL) {
-	while ((ch = getopt(argc, argv, "d:i:l:n:o:p:r:I:")) != -1) {
-	while (cur_scope != NULL) {
-			while (1) {
-		while (line < cur_instr->srcline) {
-	while(fgets(buf, sizeof(buf), ifile) != NULL)
-	while (cur_patch != NULL && start_instr == cur_patch->begin) {
-	while (cur_scope != NULL) {
-	while ((ahd_inb(ahd, LQISTAT2) & LQIGSAVAIL) != 0) {
-	while (((ccscbctl = ahd_inb(ahd, CCSCBCTL)) & (CCARREN|CCSCBEN)) != 0) {
-	while (!SCBID_IS_NULL(scbid)) {
-	while (!SCBID_IS_NULL(scbid)) {
-	while (!SCBID_IS_NULL(scbid)) {
-		while (!ahd_is_paused(ahd))
-	while (index < ahd->msgout_len) {
-	while (--wait && !(ahd_inb(ahd, MDFFSTAT) & FIFOFREE))
-	while ((sg_list_size + sg_list_increment) <= PAGE_SIZE)
-	while ((sg_list_size + sg_list_increment) <= max_list_size
-		while ((sns_map = SLIST_FIRST(&scb_data->sense_maps)) != NULL) {
-		while ((sg_map = SLIST_FIRST(&scb_data->sg_maps)) != NULL) {
-		while ((hscb_map = SLIST_FIRST(&scb_data->hscb_maps)) != NULL) {
-	while (qinpos != qintail) {
-	while (scbp_next != NULL) {
-		while ((ahd_inb(ahd, DFCNTRL) & HDMAENACK) != 0)
-		while ((ahd_le32toh(sg->len) & AHD_DMA_LAST_SEG) == 0) {
-	while (lstate->event_r_idx != lstate->event_w_idx
-	while (powerof2(sg_prefetch_align) == 0)
-	while (sg_prefetch_cnt < sg_size)
-	while (cur_patch < last_patch && start_instr == cur_patch->begin) {
-	while (1) {
-	while (printed_mask != 0xFF) {
-	while (!SCBID_IS_NULL(scb_index) && i++ < AHD_SCB_MAX) {
-	while (!SCBID_IS_NULL(scb_index) && i++ < AHD_SCB_MAX) {
-	while (!SCBID_IS_NULL(scb_index) && i++ < AHD_SCB_MAX) {
-	while (!SCBID_IS_NULL(scb_index) && i++ < AHD_SCB_MAX) {
-	while ((ahd_inb(ahd, SEESTAT) & (SEEARBACK|SEEBUSY)) != 0 && --cnt)
-	while ((ahd_inb(ahd, BRDCTL) & FLXARBACK) == 0 && --cnt)
-	while ((cmd = &ahd->targetcmds[ahd->tqinfifonext])->cmd_valid != 0) {
-	while (usec > 0) {
-	while (!done) {
-	while ((p = strsep(&s, ",.")) != NULL) {
-	while (usec > 0) {
-	while (!done) {
-	while ((p = strsep(&s, ",.")) != NULL) {
-	while (!test_bit(ADAPTER_STATE_UP, &hba->adapter_state) && i--)
-	while (hba->ofld_conns_active) {
-	while (!list_empty(&adapter_list)) {
-		while (buf_off >= (cur_offset + bd_tbl->buffer_length)) {
-	while (ec_div >>= 1)
-	while (lpcnt--) {
-	while ((bnx2i_ep->state == EP_STATE_CONNECT_START) &&
-	while (val) {
-	while (num_pages--) {
-	while (num_pages--) {
-	while (num_pages--) {
-	while (!kthread_should_stop()) {
-		while (!list_empty(&p->work_list)) {
-	while (1) {
-	while (i < num_cqe) {
-	while (!list_empty(done_q)) {
-	while (risc_code_size > 0) {
-		while (remseg > 0) {
-		while (remseg > 0) {
-	while (ha->rsp_ring_index != mailbox[5]) {
-		while (ha->flags.reset_marker) {
-	while (cp && (ptr = strchr(cp, ':'))) {
-	while ((l = l->prev) != &sht->legacy_hosts)
-		while (dma_read32(DMA_CSR) & DMA_PEND_READ) {
-	while (dma_read32(DMA_CSR) & DMA_FIFO_ISDRAIN) {
-		while ((val = dma_read32(DMA_CSR)) & DMA_PEND_READ) {
-		while (offset < len) {
-		while (entry != &dev->fib_list) {
-	while (entry != &dev->fib_list) {
-	while (!list_empty(&fibctx->fib_list)) {
-	while(entry != &dev->fib_list) {
-	while (((i = fib_map_alloc(dev)) == -ENOMEM)
-		while (!aac_get_entry(dev, qid, &entry, index, nonotify)) {
-		while (!aac_get_entry(dev, qid, &entry, index, nonotify)) {
-			while (down_trylock(&fibptr->event_wait)) {
-	while ((command = command_list)) {
-	while (entry != &aac->fib_list) {
-	while (1) {
-		while(!list_empty(&(dev->queues->queue[HostNormCmdQueue].cmdq))) {
-				while (entry != &dev->fib_list) {
-					while (hw_fib_p < &hw_fib_pool[num]) {
-				while (entry != &dev->fib_list) {
-				while (hw_fib_p < &hw_fib_pool[num]) {
 			} while (index != old_index);
-	while (time_before(jiffies, start+30*HZ)) {
-	while (!((status = src_readl(dev, MUnit.OMR)) &
-	while (time_before(jiffies, start+30*HZ)) 
-	while (!((status = rx_readl(dev, MUnit.OMRx[0])) & KERNEL_UP_AND_RUNNING))
-		while (*cp && *cp != ' ')
-		while (*cp == ' ')
-		while (*cp && *cp != ' ')
-	while(aac_consumer_get(dev, q, &entry))
-	while(aac_consumer_get(dev, q, &entry))
-		while (*sp == ' ')
-		while (scsicmd->device == scsidev)
-	while (*a != (char)0)
-			while (*cp && *cp != ' ' && --c)
-			while (*cp && *cp != ' ')
-		while (*cp == ' ')
-	while(time_before(jiffies, start+30*HZ))
-	while (!(sa_readl(dev, Mailbox7) & KERNEL_UP_AND_RUNNING)) {
-    while (inb(eisa_adr+EDOORREG) != 0xff) {
-        while (inb(eisa_adr+EDOORREG) != 0xfe) {
-    while (readb(&dp2_ptr->u.ic.S_Status) != 0xff) {
-    while (readb(&dp2_ptr->u.ic.S_Status) != 0xfe) {
-        while (readb(&dp6_ptr->u.ic.S_Status) != 0xff) {
-        while (readb(&dp6_ptr->u.ic.S_Status) != 0xfe) {
-        while (readb(&dp6c_ptr->u.ic.S_Status) != 0xff) {
-        while (readb(&dp6c_ptr->u.ic.S_Status) != 0xfe) {
-        while( ((int)readb(&dp6m_ptr->i960r.sema0_reg) ) & 3 )
-        while (readb(&dp6m_ptr->u.ic.S_Status) != 0xff) {
-        while (readb(&dp6m_ptr->u.ic.S_Status) != 0xfe) {
-        while (readb(&dp6m_ptr->u.ic.S_Status) != 0xfd) {
     } while (--time);
-    while (gdth_test_busy(ha))
     } while (rtc[0] != CMOS_READ(0));
-        while (nscp && gdth_cmnd_priv(nscp)->priority <= priority) {
-                while (gdth_test_busy(ha))
-            while (gdth_test_busy(ha))
-            while (gdth_test_busy(ha))
-            while (gdth_test_busy(ha))
-    while (argv && (cur_str = strchr(argv, ':'))) {
-    while (cur && isdigit(*cur) && i < MAXHA) {
-                while (gdth_test_busy(ha))
-        while (gdth_test_busy(ha))
-	while ((pDev = pci_get_device( PCI_DPT_VENDOR_ID, PCI_ANY_ID, pDev))) {
-			while(d){
-	while(*status == 0){
-		while(sg_index) {
-	while((volatile u32) pHba->state & DPTI_STATE_RESET )
-	while( readl(pHba->irq_mask) & I2O_INTERRUPT_PENDING_B) {
-			while(pDev) {
-					while (pDev->next_lun) {
-			while(pDev) {
-	while(m == EMPTY_QUEUE){
-	while(status_block[87]!=0xff){
-	while (dma_read32(DMA_CSR) & DMA_FIFO_ISDRAIN) {
-	while ((val = dma_read32(DMA_CSR)) & DMA_PEND_READ) {
-		while (data & NVR_BUSY) {
-		while ((data & BIT_0) == 0) {
-	while (left != 0) {
-		while ((iter < iend) && !do_next) {
-		while ((iter > istart) && !do_next) {
-		while ((iter > istart) && !do_next) {
-			while (iter <= vend) {
-	while (pos < end && *pos != 0x78) {
-	while (!done) {
-	while (!done) {
-	while (!done) {
-	while (done == 0) {
-	while (done == 0) {
-	while ((qla82xx_rom_lock(ha) != 0) && (loops < 50000)) {
-	while ((done != 0) && (ret == 0)) {
-	while ((qla82xx_rom_lock(ha) != 0) && (loops < 50000)) {
-	while (tot_dsds) {
-		while (avail_dsds) {
-		while (RD_REG_DWORD(ha->nxdb_rd_ptr) != dbval) {
-		while (RD_REG_DWORD(ha->nxdb_rd_ptr) != dbval) {
-	while (drv_state != drv_active) {
-	while (drv_state != drv_active &&
-	while (1) {
-	while ((test_bit(FCOE_CTX_RESET_NEEDED, &vha->dpc_flags) ||
-	while (count-- > 0)
-	while (chksum >> 32)
-	while (test_bit(LOOP_RESYNC_ACTIVE, &vha->dpc_flags) ||
-		while (en > st) {
-	while (cnt--)
-	while (cnt--)
-		while (qla2x00_is_reserved_id(vha, dev->loop_id))
-	while (vha->rscn_out_ptr != vha->rscn_in_ptr ||
-	while (cnt--)
-	while (cnt--)
-	while (segments && rval == QLA_SUCCESS) {
-		while (risc_size > 0 && rval == QLA_SUCCESS) {
-	while (*seg && rval == QLA_SUCCESS) {
-		while (risc_size > 0 && rval == QLA_SUCCESS) {
-	while (segments && rval == QLA_SUCCESS) {
-		while (risc_size > 0 && rval == QLA_SUCCESS) {
-	while (cnt--)
-	while (cnt--)
-		while (!ha->flags.mbox_int) {
-			while (dwords--)
-			while (dwords--)
-	while (count--) {
-	while (count--)
-	while (count--)
-			while (RD_REG_DWORD(ha->nxdb_rd_ptr) != dbval) {
-	while (qla24xx_get_one_block_sg(prot_int, &sgx, &partial)) {
-			while (qla24xx_get_one_block_sg(
-	while (CMD_SP(cmd) && wait_iter--) {
-	while (((test_bit(ISP_ABORT_NEEDED, &base_vha->dpc_flags)) ||
-	while (((test_bit(ISP_ABORT_NEEDED, &base_vha->dpc_flags)) ||
-	while (((test_bit(ISP_ABORT_NEEDED, &base_vha->dpc_flags)) ||
-	while (ha->cur_vport_count) {
-	while (!kthread_should_stop()) {
-	while (fn > 0) {
-	while (ha->flags.mbox_busy && retries--)
-	while (atomic_read(&vha->vref_count)) {
-	while (rsp->ring_ptr->signature != RESPONSE_PROCESSED) {
-	while (rsp->ring_ptr->signature != RESPONSE_PROCESSED) {
-	while (lba < end) {
-	while (lba < end) {
-   while (inb(iobase + REG_LCL_INTR) & BSY_ASSERTED) {
-   while ((jiffies - time) < HZ && limit++ < 20000) udelay(100L);
-   while (cur && (pc = strchr(cur, ':'))) {
-   while (cur && isdigit(*cur) && i < MAX_INT_PARAM) {
-   while ((jiffies - time) < (10 * HZ) && limit++ < 200000) udelay(100L);
-	while (n-- > 0)
-		while (!(INB(np, nc_stest4) & LCKFRQ) && --i > 0)
-	while (!(INW(np, nc_sist) & GEN) && ms++ < 100000)
-		while (div > 0) {
-	while (--i >= 0) {
-	while (maxn--) {
-	while (1) {
-	while ((qp = sym_remque_head(&np->comp_ccbq)) != NULL) {
-	while (i != np->squeueput) {
-	while ((qp = sym_remque_head(&qtmp)) != NULL) {
-		while (dp_sg > dp_sgmin) {
-		while (dp_sg < SYM_CONF_MAX_SG) {
-	while (cp) {
-		while ((qp = sym_remque_head(&np->free_ccbq)) != NULL) {
-	while (cur < end) {
-		while (relocs--) {
-	while (size > s) {
-	while (!h[j].next) {
-		while (j > i) {
-	while (size > s) {
-	while (1) {
-		while (q->next && q->next != (m_link_p) b) {
-	while (*vbpp && (*vbpp)->vaddr != m)
-	while (*pp && *pp != p)
-		while (vp && vp->vaddr != a)
-	while (p && (xi < 8)) {
-		while (len > 0) {
-		while (len > 0) {
-	while (size-- > 0)
-	while (sector_addr < flash_addr+size) {
-	while (1) {
-	while ((l1 || l2) && cnt) {
-	while ((l0y || l0uv || l1y || l1uv) && count) {
-	while (reg_data != BC_BIT(4)) {
-		while ((reg_data & BC_BIT(0)) != BC_BIT(0)) {
-	while (tmp != (struct crystalhd_elem *)&ioq->head) {
-	while ((ioq->count == 0) && count) {
-	while (sts == BC_STS_BUSY) {
-	while (i > 0) {
-	while (i > MASTER_MINOR) {
-	while (i > SLAVE_MINOR) {
-	while (reg->EP0vm_state != VM_STOP)
-	while (reg->EP0vm_state != VM_STOP)
-	while (reg_queue) {
-	while (SizeLeft) {
-		while (CopySize) {
-		while (!(ltmp & 0x20) && loop--) {
-		while (BufferSize >= 4) {
-	while (!hal_idle(pHwData))
-	while (((seed+1)*(step+1)) <= next) {
-	while (((seed+1)*(step+1)) <= next) {
-	while (((seed+1)*(step+1)) <= next) {
-	while (((seed+1)*(step+1)) <= next) {
-	while (((seed+1)*(step+1)) <= next) {
-	while (loop > 0) {
-	while (loop > 0) {
-	while ((copy_out_done == false) && (copy_in_done == false)) {
-					while (bytes_left) {
-		while (sst_drv_ctx->mmap_len > 0) {
-	while (retry) {
-	while (size) {
-	while (!kthread_should_stop()) {
-	while (!list_empty(head)) {
-	while (!list_empty(&psb->crypto_active_list) || !list_empty(&psb->crypto_ready_list)) {
-	while (!t) {
-	while (!done && (index <= end)) {
-	while (!list_empty(&parent->sync_create_list)) {
-	while (!PageUptodate(page)) {
-	while ((pi = pohmelfs_get_inode_from_list(psb, &psb->drop_list, &count))) {
-		while (count--)
-			while (count--)
-	while ((p = strsep(&options, ",")) != NULL) {
-	while (count--)
-	while ((pi = pohmelfs_get_inode_from_list(psb, &psb->drop_list, &count)))
-	while (n) {
-	while (*n) {
-	while (size && !err) {
-		while (cmd->size) {
-		while (total_size) {
-	while (!kthread_should_stop()) {
-	while (!kthread_should_stop())
-	while (n) {
-	while (*n) {
-	while (n) {
-	while (n) {
-	while (*n) {
-	while (d && d != root && !IS_ROOT(d)) {
-	while (count-- > 0) {
-	while (offs < count && odev->buf_offs < max_offs) {
 		} while (imem_sz > 0);
-		while (((tmp16 & _IMEM_CODE_DONE) == 0) && (i > 0)) {
 		} while (emem_sz > 0);
-		while (((tmp16 & _EMEM_CODE_DONE) == 0) && (i > 0)) {
-		while (((tmp16 & _IMEM_RDY) == 0) && (i > 0)) {
-		while (((tmp16 & _DMEM_CODE_DONE) == 0) && (i > 0)) {
-		while (((tmp16 & _FWRDY) == 0) && (i > 0)) {
-		while ((end_of_queue_search(sta_phead, sta_plist)) == false) {
-	while (plist != phead) {
-	while (end_of_queue_search(phead, plist) == false) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (i < in_len) {
-	while (cnt < in_len) {
-			while (true) {
-			while (true) {
-	while (!(0x80 & r8712_read8(padapter, EFUSE_CTRL+3)) && (tmpidx < 100))
-	while ((0x80 &  r8712_read8(padapter, EFUSE_CTRL+3)) && (tmpidx < 100))
-		while (!(0x80 & r8712_read8(padapter, EFUSE_CTRL+3)) &&
-		while ((0x80 & r8712_read8(padapter, EFUSE_CTRL+3)) &&
-	while (bContinual && efuse_one_byte_read(padapter, efuse_addr,
-	while (efuse_addr < efuse_available_max_size) {
-	while (addr < header_addr) {
-	while (efuse_addr < efuse_available_max_size) {
-		while (efuse_one_byte_read(padapter, efuse_addr,
-	while (end_of_queue_search(phead, plist) == false) {
-	while (nbytes > 0) {
-	while (pmicdata->nBytesInM != 0)
-	while (pnetwork->network.SupportedRates[i] != 0) {
-			while (cnt < ielen) {
-		while ((c < 14) && (f != frequency_list[c]))
-	while (1) {
-	while (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY|_FW_UNDER_LINKING)) {
-	while (1) {
-		while (1) {
-		while ((pcur_bss->SupportedRates[i] != 0) &&
-	while (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY|_FW_UNDER_LINKING)) {
-	while (1) {
-	while (1) {
-	while (end_of_queue_search(phead, plist) == false) {
-		while ((r8712_read32(padapter, IOCMD_CTRL_REG)) &&
-	while ((0 != r8712_read32(pAdapter, IOCMD_CTRL_REG)) &&
-	while (1) {
-			while (check_cmd_fifo(padapter, wr_sz) == _FAIL) {
-	while ((end_of_queue_search(phead, plist)) == false) {
-		while ((end_of_queue_search(phead, plist)) == false) {
-	while ((end_of_queue_search(phead, plist)) == false) {
-	while (end_of_queue_search(phead, plist) == false) {
-	while (a_len > ETH_HLEN) {
-	while (end_of_queue_search(phead, plist) == false) {
-	while (!is_list_empty(phead)) {
-	while (NULL != (pskb = skb_dequeue(&precvpriv->rx_skb_queue))) {
-	while (rate[i] != 0) {
-	while (rate[i] != 0) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (cnt < in_len) {
-	while (cnt < in_len) {
-	while (dev_id)
-	while ((val = dc_read(sc->addr, SBE_2T3E3_21143_REG_STATUS)) &
-		while (!(sc->ether.rx_ring[current_read].rdes0 &
-	while (!(sc->ether.rx_ring[current_read].rdes0 &
-	while (current_read != current_write) {
-		while (port < num_ports) {
-		while (port < num_ports) {
-			while (skb_to_free > 0) {
-			while (to_free_list) {
-	while (skb_to_free > 0) {
-	while (to_free_list) {
-		while (skb_queue_len(&priv->tx_free_list[qos]))
-	while (segments--) {
-	while (num_blocks--) {
-	while (remaining_bytes) {
-		while (data_address < end_of_data) {
-	while (freed) {
-	while (freed) {
-	while (align < buffer_size)
-	while (num_ports--) {
-	while (num_ports--) {
-			while (i < work->len - 1) {
-	while (rx_count < budget) {
-				while (segments--) {
-				while (true) {
-			while (true) {
-	while (true)	{
-			while (priv->RFChangeInProgress)	{
-	while (tmp->next != (*buffer))
 	/* while there are filled descriptors */
-	while (!(*(priv->rxringtail) & (1<<31))) {
-	while (remain != 0) {
-	while(1)
-     	while(1)
-	while (tag+1 < skbend){
-					while (left >= sizeof(struct ieee80211_info_element_hdr)) {
-		while (!ieee->queue_stop && (skb = dequeue_mgmt(ieee))){
-	while (left >= sizeof(struct ieee80211_info_element_hdr)) {
-		while (i >= 0)
-			while ((c < 14) && (f != ieee80211_wlan_frequencies[c]))
-	while (i >= 0) {
-    while (((PBYTE)pItem) < (pFrame->pBuf + pFrame->len)) {
-    while (((PBYTE)pItem) < (pFrame->pBuf + pFrame->len)) {
-    while (((PBYTE)pItem) < (pFrame->pBuf + pFrame->len)) {
-    while (((PBYTE)pItem) < (pFrame->pBuf + pFrame->len)) {
-    while (((PBYTE)pItem) < (pFrame->pBuf + pFrame->len)) {
-                while (!ChannelValid(pDevice->byZoneType, pMgmt->uScanChannel) &&
-                while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[0].sTxPSQueue)) != NULL) {
-                    while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[ii].sTxPSQueue)) != NULL) {
-              while(pDevice->bWPADEVUp==TRUE) {
-    while(--length >= 0) {
-  while (str1_len >= str2_len) {
-  while(*tmp_p != 0x00) {
-	while (nBytes > 0) {
-	while (nBytesInM != 0)
-	while (cbByte--) {
-    while (ui > RATE_1M) {
-    while (ui > RATE_11M) {
-    while ((pDevice->Flags & fMP_POST_READS) &&
-    while (pDevice->NumRecvMngList!=0)
-    while ( wLength2 > 0 ) {
-    while ( wLength3 > 0 ) {
-        while ( wLength2 > 0 ) {
-      	    while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[*puNodeIndex].sTxPSQueue)) != NULL)
-    while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[uNodeIndex].sTxPSQueue)) != NULL)
-                while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[ii].sTxPSQueue)) != NULL){
-		while((c < 14) && (f != frequency_list[c]))
-    while (--count >= 0)
-    while (--count >= 0)
-    while (count--)
-    while (--index >= 0)
-    while (--size >= 0)
-    while (--size >= 0)
-    while ((pdev = pci_get_device (PCI_VENDOR_ID_CONEXANT,
-    while (count-- != 0)
-    while (1)
-            while (status & MUSYCC_TX_OWNED)
-    while (ci)
-    while (i > 0)
-    while (ci)
-	while (!kthread_should_stop()) {
-	while ((priv = dequeue_from_priv_tx(vdev)) != NULL) {
-	while ((unlink = dequeue_from_unlink_tx(vdev)) != NULL) {
-	while (!kthread_should_stop()) {
-	while ((priv = stub_priv_pop(sdev))) {
-	while ((priv = dequeue_from_priv_tx(sdev)) != NULL) {
-	while ((unlink = dequeue_from_unlink_tx(sdev)) != NULL) {
-	while (!kthread_should_stop()) {
-	while (usbip_event_happened(ud)) {
-	while (!kthread_should_stop()) {
-	while (retries > 0) {
-	while (*c != '\0') {
-	while (*c != '\0') {
-	while (fgets(buf, sizeof(buf), f)) {
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-			while (isspace(*cp))
-			while (isspace(*cp))
-			while (isspace(*cp))
-			while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-			while (isspace(*cp))
-			while (isspace(*cp))
-			while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-                        while (isspace(*cp))
-	while (bit) {
-	while (!kthread_should_stop()) {
-	while (dev->ring_head == dev->ring_tail) {
-	while ((c < count) && (dev->ring_tail != dev->ring_head)) {
-	while (total_sec_cnt) {
 	} while (!(val & INT_REG_CED));
-	while (i < (MAX_DEFECTIVE_BLOCK + 2)) {
-	while (total_sec_cnt) {
-	while ((N < min_N) && (div < max_div)) {
-	while (desc_cnt) {
-	while (cnt < buflen && sg) {
-		while (sglen > 0) {
-		while (io->entries--)
-	while (i < entries && !io->status) {
-        while ( ( p = hcf_dma_rx_get( &lp->hcfCtx ) ) != NULL ) {
-        while ( ( p = hcf_dma_tx_get( &lp->hcfCtx ) ) != NULL ) {
-	while ( n-- ) {
-	while ( n-- ) {
-	while ( n-- ) {
-	while ( n-- ) {
-					while ( p ) {
-		while ( ( p->BUF_SIZE & DESC_EOP ) == 0 && p->next_desc_addr ) {
 			do { i += p->BUF_CNT; } while ( ( p = p->next_desc_addr ) != NULL );
-		} else while ( ifbp->IFB_MICRxCarry < 4 && len ) {      //note for hcf_16 applies: 0xFFFF > 4
-		while ( ifbp->IFB_MICRxCarry == 4 ) {   //contrived so we have only 1 call to calc_mic so we could bring it in-line
-		} else while ( ifbp->IFB_MICTxCarry < 4 && len ) {      /* note for hcf_16 applies: 0xFFFF > 4 */
 		                                //.  while accu contains complete double word
-		while ( ifbp->IFB_MICTxCarry == 4 ) {
-            while( numAPs >= 1 ) {
-		while( (*p).scan_complete == FALSE && ret == HCF_SUCCESS ) {
-	while (p->len && i == NULL) {					/* check the MFI ranges */
-		while (p->len && i == NULL) {			/* check the CFI ranges */
-		while (p->len) {
-	while ((rc == HCF_SUCCESS) && ((ltvp = pp->ltvp) != NULL)) {
-		while (rc == HCF_SUCCESS && p->len) {
-		while (readline(file_desc, buffer))
-		while ((result = read(filedesc, &buffer[bytes_read], 1)) == 1) {
-	while (value[value_offset] != '\0') {
-		while (( hcf_status != HCF_SUCCESS ) && (retries < 10)) {
-			while( num_aps >= 1 ) {
-			while( num_aps >= 1 ) {
 		while (!(ioread32(FlashReg + intr_status[i]) &
-	while (dv_window < 8) {
-	while (((acc_clks * CLK_X) - Trea[mode]) < 3)
-		while (((cs_cnt * CLK_X) + Trea[mode]) < Tcea[mode])
-		while (page_count > MAX_PAGES_PER_RW) {
-		while (1) {
 				while (!ioread32(FlashReg + intr_status))
-		while (page_count > MAX_PAGES_PER_RW) {
-		while (page_count > 0) {
-		while (page_count > 0) {
-		while (1) {
 				while (!ioread32(FlashReg + intr_status))
-		while (page_count > MAX_PAGES_PER_RW) {
-		while ((status != FAIL) && (page_count > 0)) {
-		while ((status != FAIL) && (page_count > 0)) {
-	while (1) {
 		while (!ioread32(FlashReg + intr_status))
-	while (1) {
-	while (1) {
 		while (!ioread32(FlashReg + intr_status))
-	while (1) {
-	while (!kthread_should_stop()) {
-	while (PageCount) {
-	while (PageCount) {
-	while (PageCount) {
-	while (page_count) {
-	while (PageCount) {
-			while ((j > FIRST_BT_ID) &&
-				while ((j > FIRST_BT_ID) && (BTBLOCK_INVAL ==
-			while (g_pBTBlocks[j - FIRST_BT_ID] == BTBLOCK_INVAL)
-			while ((j < LAST_BT_ID) && (BTBLOCK_INVAL !=
-			while ((search_result == PASS) && (FAIL == wResult)) {
-	while (go_on == PASS) {
-	while ((i < DeviceInfo.wDataBlockNum) && (discard_cnt > 0) &&
-	while ((i < DeviceInfo.wDataBlockNum) && (discard_cnt > 0)) {
-			while(RF3_Final_Value!=RegValueToBeCheck && RetryTimes!=0)
-			while(RF3_Final_Value!=RegValueToBeCheck && RetryTimes!=0)
-			while(RF3_Final_Value!=RegValueToBeCheck && RetryTimes!=0)
-			while(RF3_Final_Value!=RegValueToBeCheck && RetryTimes!=0)
-		while (nbytes > walk->len_this_page) {
-	while(1)
-	while (tag+1 < skbend){
-		while (!ieee->queue_stop && (skb = dequeue_mgmt(ieee))){
-	while(pList->next != &pTS->RxPendingPktList)
-	while(!list_empty(&pTS->RxPendingPktList)) {
-		while(skb->len > ETHERNET_HEADER_SIZE) {
-	while (length >= sizeof(*info_element)) {
-		while (i >= 0)
-		while (true)
-			while ((c < 14) && (f != ieee80211_wlan_frequencies[c]))
-	while (len >= 4) {
-	while (i >= 0) {
-		while(!list_empty(&pRxTs->RxPendingPktList))
-		while(!list_empty(&pRxTS->RxPendingPktList))
-	while (read_nic_dword(dev, QPNR)&0x80000000)
-	while (read_nic_dword(dev, QPNR)&0x80000000)
-	while (read_nic_dword(dev, QPNR)&0x80000000)
-	while(!rtl8192_phy_SwChnlStepByStep(dev,channel,&priv->SwChnlStage,&priv->SwChnlStep,&delay))
 	//sometimes, the length is zero while we do not type key value
-	while (skb_queue_len(&priv->rx_queue) < MAX_RX_URB) {
-	while (skb_queue_len(&priv->rx_queue) < MAX_RX_URB + 3) {
-	while ((skb = __skb_dequeue(&priv->rx_queue))) {
-		while((i--)>=0)
-			while (agg_skb->len>=GetRxPacketShiftBytes819xUsb(&stats, true)) {
-	while (NULL != (skb = skb_dequeue(&priv->skb_queue))) {
-	while (total_length > 0 || exe_cnt++ >100)
-		while (i-- > 0) {
-	while (1) {
-			while (1) {
-	while (1) {
-		while (i-- > 0)
-	while (1) {
-	while (ptr && (count < PAGE_SIZE)) {
-	while (*ptr)
-	while (*ptr) {
-	while (ptr) {
-	while (*ptr) {
-	while (!pt) {
-	while (gtt_pages--) {
-	while ((timeout < 20000) && (REG_READ(gen_fifo_stat_reg) & DSI_FIFO_GEN_HS_DATA_FULL)) {
-	while ((timeout < 20000) && (REG_READ(gen_fifo_stat_reg) & DSI_FIFO_GEN_HS_CTRL_FULL)) {
-        while ((timeout < 20000) && ((REG_READ(gen_fifo_stat_reg) & DPI_FIFO_EMPTY)
-        while ((timeout < 20000) && (!(REG_READ(intr_stat_reg) & DSI_INTR_STATE_SPL_PKG_SENT))) {
-		while (!(REG_READ(pipeconf_reg) & PIPECONF_DSIPLL_LOCK))
-			while ((pipe != 2) && (timeout < 20000) && !(REG_READ(pipeconf_reg) & PIPECONF_DSIPLL_LOCK)) {
-	while ((timeout < 20000) && !(REG_READ(pipeconf_reg) & PIPECONF_DSIPLL_LOCK)) {
-		while (!(REG_READ(pipeconf_reg) & PIPECONF_DSIPLL_LOCK))
-	while(!(REG_READ(MIPIA_INTR_STAT_REG + reg_offset) & DSI_INTR_STATE_SPL_PKG_SENT)) {
-		while(!(REG_READ(MIPIA_INTR_STAT_REG + reg_offset) & DSI_INTR_STATE_SPL_PKG_SENT)) {
-	while (i2c_dev->status != I2C_TRANSACTION_DONE)
-	while (true) {
-	while (true) {
-	while (index < total) {
-			while ((timeout < 20000) && !(PSB_RVDC32(pipeconf_reg) & PIPECONF_DSIPLL_LOCK)) {
-	while (avail < size) {
-	while (size > 0) {
-	while (status & 1) {
-	while (retry--) {
-	while (retry--) {
-	while (!list_empty(&sender->pkg_list)) {
-	while (retry && !(REG_READ(sender->mipi_intr_stat_reg) & (1 << 29))) {
-		while (retry &&
-		while (retry &&
-	while (i--)
-					while (time_before_eq(jiffies,
-					while (time_before_eq(jiffies,
-	while (retry--) {
-	while (count) {
-	while (count) {
-	while (1) {
-		while (qt_port != NULL) {
-	while(1)
-	while(1)
-	while (Media.Sector<CIS_SEARCH_SECT)
-	while (cnt < buflen && sg) {
-		while (sglen > 0) {
-	while (d) { /* If d=0 finish counting */
-	while (kp->nr < ARRAY_SIZE(kp->objnodes)) {
-		while (kp->nr) {
-	while (rbnode) {
-	while (*new) {
-		while (rbnode != NULL) {
-	while (height > 0) {
-			while (index > tmem_objnode_tree_h2max[height])
-	while (height > 0) {
 	} while (height > 0);
-	while (pathp->objnode) {
-				while (obj->objnode_tree_height > 0 &&
-	while (i2c_wack) {
-	while (!list_empty(&rx_ring->recv_list)) {
-	while (count < NUM_PACKETS_HANDLED) {
-	while (tcb != NULL && freed < NUM_TCB) {
-	while (tcb &&
-	while (tcb &&
-		while (*esc && cgoffset < 8) {
-		while (*esc) {
-		while (max_len-- && keypad_buflen < KEYPAD_BUFFER && *string) {
-	while (*name) {
-	while (write_length >= 4) {
-	while (buffer_length >= sizeof(u32)) {
-	while (cb == NULL) {
-	while (slots > 0 && !dev->extra_write_index) {
-		while (1) {
-	while(1)
 //	while((UINT)Adapter->PackInfo[iIndex].uiCurrentPacketsOnHost >
-		while(Adapter->PackInfo[iQIndex].FirstTxQueue)
-	while(! kthread_should_stop()) {
-	while(u32Size--) {
-	while(num_of_time)
-	while((Adapter->device_removed == FALSE))
-	while(TRUE)
-		while((u8IpAddressLen>= nSizeOfIPAddressInBytes) &&
-	while((ulMaxTry)&&(Adapter->astTargetDsxBuffer[ulTargetDsxBufferIndexToUse].valid != 1))
-	while(u32NumofSFsinMsg != 0 && u32NumofSFsinMsg < NO_OF_QUEUES)
-	while (pkt) {
-	while(RxDescCount)
-		while( timeout > jiffies )
-	while (psIntfAdapter->psAdapter->DeviceAccess) {
-	while(1)
-		while(atomic_read(&Adapter->cntrlpktCnt))
-		while(pTarang->RxAppControlHead != NULL)
-	while ( dwRetries != 0 )
-	while ( dwRetries != 0 )
-	while(uiBytesRemaining && uiFailureRetries != 128)
-	while(uiNumBytes)
-		while(uiTemp)
-	while(uiNumSectTobeRead)
-		while(uiTemp)
-	while(uiNumSectTobeRead)
-	while(uiBytesToCopy)
-	while(uiBytesToCopy)
-	while(uiNumBytes)
-	while ( ( uiStatus & EEPROM_WRITE_QUEUE_EMPTY ) == 0 )
-	while ( uiRetries != 0 )
-	while(uiBytesToCopy)
-			while(uiNumBytes)
-				while(uiNumBytes)
-	while(i < TOTAL_SECTIONS)
-		while(uiTotalDataToCopy)
-		while(uiTotalDataToCopy)
-	while (1) {
-	while (1) {
-			while (len) {
-		while (len) {
-	while (u32FirmwareLength) {
-	while (u32FirmwareLength && !retval) {
-	while(!bDone)
-	while((phss > 0) && (size < in_buf_len))
-	while(phss > 0)
-	while(uiPrevTotalCount > 0 && !Adapter->device_removed)
-	while (atomic_read(&Adapter->ApplicationRunning)) {
-	while (Adapter->PackInfo[iQIndex].FirstTxQueue && atomic_read(&Adapter->TotalPacketCount)) {
-	while(RegCount && !retval)
-	while(RegCount && !retval)
-	while (curr_table_data_size < table_data_size) {
-	while ((unsigned long) lli_table_ptr->bus_address != 0xffffffff) {
-	while (current_entry < sep_lli_entries) {
-	while (current_in_entry < sep_in_lli_entries) {
-	while ((time_before(jiffies, end_time)) && (ret_val != 0xffffffff) &&
-		while (true) {
-				while (priv->RFChangeInProgress) {
-	while (priv->RFChangeInProgress) {
-	while (skb_queue_len(&ring->queue)) {
-	while (skb_queue_len(&ring->queue)) {
-			while (skb_queue_len(&ring->queue)) {
-	while (count--) {
-		while ((!skb_queue_empty(&ieee->skb_waitQ[queue_index])) &&
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-		while (i >= 0)
-		while (true) {
-		while (unlikely(ieee->wmm_acm & (0x01 << skb->priority))) {
-			while ((i--) >= 0) {
-			while ((i--) >= 0) {
-			while ((i--) >= 0) {
-	while (pList->next != &pTS->RxPendingPktList) {
-	while (!list_empty(&pTS->RxPendingPktList)) {
-	while (!list_empty(&pTS->RxPendingPktList)) {
-		while (skb->len > ETHERNET_HEADER_SIZE) {
-	while (length >= sizeof(*info_element)) {
-		while ((i--) >= 0) {
-	while (total_length > 0 || exe_cnt++ > 100) {
-	while (read_nic_dword(dev, QPNR)&0x80000000) {
-	while (read_nic_dword(dev, QPNR) & 0x80000000) {
-	while (read_nic_dword(dev, QPNR) & 0x80000000) {
-	while (!rtl8192_phy_SwChnlStepByStep(dev, channel, &priv->SwChnlStage,
-	while (i >= 0) {
-			while (RF3_Final_Value != RegValueToBeCheck &&
-			while (RF3_Final_Value != RegValueToBeCheck &&
-			while (RF3_Final_Value != RegValueToBeCheck &&
-			while (RF3_Final_Value != RegValueToBeCheck &&
-			while ((c < 14) && (f != rtllib_wlan_frequencies[c]))
-		while (!list_empty(&pRxTs->RxPendingPktList)) {
-		while (!list_empty(&pRxTS->RxPendingPktList)) {
-	while (1) {
-	while (tag + 1 < skbend) {
-		while (!ieee->queue_stop && (skb = dequeue_mgmt(ieee))) {
-		while (XGI_Pr->EModeIDTable[j].Ext_ModeID != 0xff) {
-	while ((XGIbios_mode[XGIfb_mode_idx].mode_no != 0)
-	while (XGIbios_mode[i].mode_no != 0) {
-	while (XGIbios_mode[i].mode_no != 0) {
-	while (XGI_crt2type[i].type_no != -1) {
-	while ((XGIfb_vrate[i].idx != 0) && (XGIfb_vrate[i].xres <= xres)) {
-	while (XGI_tvtype[i].type_no != -1) {
-	while ((XGIbios_mode[xgifb_info->mode_idx].mode_no != 0) &&
-	while ((XGIbios_mode[search_idx].mode_no != 0) &&
-		while (XGIbios_mode[search_idx].mode_no != 0) {
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (tempdi[i].PANELID != 0xff) {
-	while (tempdi[i].MASK != 0xffff) {
-	while (tempbl != 0xFF) {
-	while (tempbl != 0xFF) {
-	while (Tap4TimingPtr[i].DE != 0xFFFF) {
-		while ((RankSize >>= 1) > 0)
-		while ((RankSize >>= 1) > 0)
-              while((pDevice->bWPADEVUp==true)) {
-	while (1)
-		 while(pDevice->rxManeQueue.packet_num != 0)
-    while (pDevice->dwIsr != 0) {
-    while(--length >= 0) {
-    while( ((unsigned char *)pItem) < (pFrame->pBuf + pFrame->len) ){
-    while (((unsigned char *)pItem) < (pFrame->pBuf + pFrame->len)) {
-    while(((unsigned char *)pItem) < (pFrame->pBuf + pFrame->len)) {
-    while( ((unsigned char *)pItem) < (pFrame->pBuf + pFrame->len) ) {
-    while( ((unsigned char *)pItem) < (pFrame->pBuf + pFrame->len) ) {
-                while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[0].sTxPSQueue)) != NULL) {
-                    while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[ii].sTxPSQueue)) != NULL) {
-    while (*pvNextBSS == NULL) {
-    while (nBytes > 0)
-    while( nBytesInM != 0 )
-    while (cbByte--) {
-    while (ui > RATE_1M) {
-    while (ui > RATE_11M) {
-	 while(pDevice->rxManeQueue.packet_num != 0)
-      	    while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[*puNodeIndex].sTxPSQueue)) != NULL)
-    while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[uNodeIndex].sTxPSQueue)) != NULL)
-                while ((skb = skb_dequeue(&pMgmt->sNodeDBTable[ii].sTxPSQueue)) != NULL){
-		while((c < 14) && (f != frequency_list[c]))
-		while (cnt < buflen && *index < scsi_sg_count(srb)) {
-			while (sglen > 0) {
-	while (total_sec_cnt) {
-	while ((N < min_N) && (div < max_div)) {
 	} while (!(val & INT_REG_CED));
-	while (i < (MAX_DEFECTIVE_BLOCK + 2)) {
-	while (total_sec_cnt) {
-	while (desc_cnt) {
-	while (len) {
-		while (len) {
-		while (len) {
-		while (len) {
-			while (mcaddr) {
-		while (uprqueue->next)
-	while ((len -= 32) >= 0) {
-	while ((len -= 8) >= 0) {
-		while ((len -= 2) >= 0)
-	while (cmd) {
-	while ((cmdcnt < SLIC_CMDQ_CMDSINPAGE) &&
-	while (hcmd) {
-	while (hcmd) {
-	while (i < SLIC_RCVQ_FILLENTRIES) {
-	while (rcvq->head) {
-	while (i) {
-	while (rcvq->count < SLIC_RCVQ_FILLTHRESH) {
-	while (mlist) {
-	while ((skb = slic_rcvqueue_getnext(adapter))) {
-						while (rcvq->count <
-	while (mlist) {
-			while (curr_card->next != card)
-		while (card) {
-	while (physcard) {
-	while (sel_buffer && sel_buffer_lth > pasted) {
-	while (!kthread_should_stop()) {
-	while ((next_percent != NULL) && !found) {
-			while ((next_percent[0] == '%')
-	while ((*input != '\0') && strchr(" 0+-#", *input))
-	while (isdigit(*input))
-		while (isdigit(*input))
-	while (still_comparing && valid) {
-	while (count > 0) {
-	while (!kthread_should_stop()) {
-		while (is_flushing && timeout) {
-	while (!kthread_should_stop()) {
-	while ((ch = *buff)) {
-	while (count--)
-	while (r--)
-	while (*kp++) {
-	while ((ch = *kp++)) {
-		while ((i < MAXVARS) && (where == NULL)) {
-	while ((where->var_id != -1) && (rv == NULL)) {
-	while (*start >= '0' && *start <= '9') {
-	while (*start && *start <= SPACE)
-	while (*start >= '0' && *start <= '9') {
-	while ((p = strchr(p, '\\'))) {
-			while (num < 256 && *p1 >= '0' && *p1 <= '7') {
-		while (*p1)
-	while ((ch = *buf)) {
-	while (!kthread_should_stop()) {
-	while (spk_serial_tx_busy()) {
-	while (--timeout > 0) {
-	while (--timeout > 0) {
-	while (dt_getstatus() & STAT_cmd_ready) {
-	while (dt_ctrl(CTRL_flush)) {
-	while (!kthread_should_stop()) {
-	while ((ch = *buf)) {
-	while ((ch = *buf)) {
-		while (synth_writable()) {
-	while (!kthread_should_stop()) {
-		while (synth_writable()) {
-			while (synth_writable()) {
-	while (synth_writable()) {
-	while (var->var_id != MAXVARS) {
-	while (1) {
-	while (chars_sent < count) {
-	while (1) {
-		while (1) {
-	while (inb_p(speakup_info.port_tts + UART_LSR) & UART_LSR_DR) {
-	while (spk_serial_tx_busy()) {
-	while (!((inb_p(speakup_info.port_tts + UART_MSR)) & UART_MSR_CTS)) {
-	while (!(inb_p(speakup_info.port_tts + UART_LSR) & UART_LSR_DR)) {
 			pr_warn("time out while waiting for input.\n");
-	while (!synth_writable()) {
-	while (synth_writable()) {
-	while (!kthread_should_stop()) {
-	while ((ch = (u_char)*buf)) {
-	while (synth_writable())
-	while (!synth_readable())
-	while (synth_readable())
-	while (inw_p(synth_lpc) != 0x147f)
-	while (spk_serial_tx_busy()) {
-		while (tmpx > 0) {
-	while (tmpx < vc->vc_cols - 1) {
-	while (1) {
-	while (1) {
-	while ((ch = (u_char) *cp)) {
-		while (*cp == SPACE)
-	while (from < to) {
-	while (start < end) {
-	while (start <= end) {
-	while (count--) {
-	while ((ch = *cp1)) {
-	while ((hi < COLOR_BUFFER_SIZE) && (i < len)) {
-	while (cp < end) {
-		while ((cp < end) && (*cp == ' ' || *cp == '\t'))
-		while ((temp < linefeed) && (*temp == ' ' || *temp == '\t'))
-	while (--i >= 0) {
-	while (len > 0) {
-	while (x && punc_buf[x - 1] == '\n')
-	while (cp < end) {
-		while ((cp < end) && (*cp == ' ' || *cp == '\t'))
-		while ((temp < linefeed) && (*temp == ' ' || *temp == '\t'))
-	while (!kthread_should_stop()) {
-	while (len > 0) {
-		while (i-- > 0) {
-	while (name.b <= 24) { \
-	while (little != 0) {
-	while (srclen >= 2) {
-	while (count-- > 0) {
-	while (usecs > MAX_UDELAY_US) {
-	while (n < count) {
-	while (1) {
-	while (status & UTSR0_EIF) {
-	while ((iir = inb(io + UART_IIR) & UART_IIR_ID)) {
-	while (bytes_out--) {
 		while (!(inb(io + UART_LSR) & UART_LSR_THRE))
-	while (usecs > MAX_UDELAY_US) {
-	while ((now - start) < length) {
-	while (actual < length) {
-	while (i < max) {
-	while (!kthread_should_stop()) {
 	 * while we didn't provide 'length' bytes, device is opened in blocking
-	while (written < n && ret == 0) {
-	while (count < n) {
-	while (i < count) {
-			while (line_len > 0) {
 		while (erase_off(solo_dev))
-	while (count--) {
-	while (value > max) {
-	while ((*bits) % 8)
-		while ((*bits) % 32)
-	while (idx != solo_dev->enc_wr_idx) {
-	while (solo_dev->enc_idx != cur_q) {
-		while (i--)
-	while (!list_empty(&pd->dmaq)) {
-	while (max > j) {
-	while (0xFFFF != peasycap_standard->mask) {
-		while (0xFFFF != peasycap_standard->mask) {
-	while (0 != peasycap_format->v4l2_format.fmt.pix.width) {
-		while (0 != peasycap_format->v4l2_format.fmt.pix.width) {
-	while (0xFFFFFFFF != easycap_control[i1].id) {
-	while (0xFFFFFFFF != easycap_control[i1].id) {
-	while (0xFFFFFFFF != easycap_control[i1].id) {
-	while (0xFFFFFFFF != easycap_control[i1].id) {
-	while (0xFFFFFFFF != easycap_control[i1].id) {
-	while (0xFFFFFFFF != easycap_control[i1].id) {
-		while (*p2) {
-			while (*p2 && ('.' != *p2))
-		while (0xFFFFFFFF != easycap_control[i1].id) {
-		while (0xFFFF != peasycap_standard->mask) {
-		while (0xFFFF != peasycap_standard->mask) {
-	while ((peasycap->field_read == peasycap->field_fill) ||
-	while ((peasycap->field_read == peasycap->field_fill) ||
-	while (cz < wz) {
-	while (p2 < pcache) {
-				while  (pz > p3) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-				while (pz > p2) {
-			while (p1 < &bfbar[barwidth]) {
-			while (more) {
-		while (more) {
-			while (elem) {
-	while ((nip -= 1) >= 0) {	/* for each packet */
-	while (true) {
-			while ((nip -= 1) >= 0) {	/* process packets */
-	while (shift <= fieldsz) {
-	while (mask) {
-	while (rop_map1[rx] != rp->TYPE) {
-		while (cur_string != NULL) {
-		while (cur_sym != NULL) {
-	while ((ret_val != 0) && (cur_pkt != NULL)) {
-		while (relos_done < cur_pkt->hdr.num_relos) {
-	while ((ret_val != 0) && (cur_pkt != NULL)) {
-		while (cur_relo != NULL) {
-			while (i > 0) {
-	while (zl_lib != NULL) {
-	while (*name) {
-	while ((token = strsep(&psz_cur, ":")) && *token != '\0') {
-		while (envp[i])
 	 * FIXME: CMM_MAXGPPSEGS == 1. why use a while cycle? Seems to me like
-	while (ul_id <= CMM_MAXGPPSEGS) {
-		while (i < chunk->region_size) {
-	while (--num_entries >= 0)
-	while (--num_entries >= 0)
-	while (total_bytes > 0 && !status) {
-	while (ul_remain_bytes > 0 && !status) {
-	while ((vma) && (ul_mpu_addr + ul_num_bytes > vma->vm_end)) {
-	while (rem_bytes && !status) {
-		while (rem_bytes_l2 && !status) {
-			while (temp++ < numof4k_pages) {
-		while (temp++ < numof4k_pages) {
-	while (num_bytes && !status) {
-	while (!status && (i < num_pages)) {
-		while (++i < num_pages) {
-		while (temp++ < num_of4k_pages) {
-	while (__raw_readw(dw_sync_addr) && --timeout)
-	while (io_msg_pend) {
-	while (!(omap_dm_timer_read_status(gpt) & OMAP_TIMER_INT_OVERFLOW)) {
-	while (num_bytes) {
-	while (num_bytes) {
-	while (l4_peripheral_table[i].phys_addr) {
-	while (true) {
-			while (str_beg < buf_end) {
-			while (str_beg < trace_end) {
-		while ((mmu_fault_dbg_info.head[0] != MMU_FAULT_HEAD1 ||
-	while (module_size) {
-			while (!list_empty(&pchnl->io_requests) && !status) {
-	while ((pwr_state != PWRDM_POWER_OFF) && --timeout) {
-	while ((pwr_state != target_pwr_state) && --timeout) {
-		while ((token = strsep(&psz_cur, seps)) && *token != '\0') {
-	while (isspace(*pch))
-	while (p < q)
-	while ((token = strsep(&psz_cur, seps)) && *token != '\0') {
-	while (!status) {
-	while (status1 == 0) {
-		while (!wait_for_completion_timeout(&bridge_comp,
-	while ((device_node = drv_get_first_dev_extension()) != 0) {
-			while (next) {
-		while (head != NULL) {
-			while (head->next != NULL && addr > head->next->addr)
-			while (ovly_section) {
-			while (ovly_section) {
-			while (ovly_section) {
-			while (ovly_section) {
-	while (ovly_section) {
-	while (ovly_section && i < alloc_num) {
-	while (ovly_section) {
-			while (ovly_section) {
-			while (ovly_section && !status) {
-			while (ovly_section && !status) {
-	while (len) {
-		while (*envp++)
-	while (envp_elems--)
-	while (user.number_bufs_in_stream--)
-	while (atomic_read(&net_device->num_outstanding_sends)) {
-	while (!list_empty(&net_device->recv_pkt_list)) {
-		while (destlen) {
-		while (srclen) {
-	while (!list_empty(&nvec->tx_data)) {
-	while (!list_empty(&nvec->rx_data)) {
-	while (loopcnt < MAX_DSP_WAIT_LOOPS) {
-	while ((Status == SUCCESS) && (uiState != STATE_DONE_FILE)) {
-	while (list_empty(&info->prov_list) == 0) {
-    while (tempword & FT1000_DB_DPRAM_TX) {
-			while (list_empty(&info->prov_list) == 0) {
-				while (tempword & FT1000_DB_DPRAM_TX) {
-    while (inttype) {
-	while (list_empty(&info->prov_list) == 0) {
-	while (!kthread_should_stop()) {
-	while (!pft1000info->CardReady) {
-            while (list_empty(&info->app_info[i].app_sqlist) == 0) {
-            while (list_empty(&freercvpool) == 0) {
-    while (list_empty(&info->app_info[i].app_sqlist) == 0) {
-	while (loopcnt < 10) {
-	while (loopcnt < 20) {
-	while (loopcnt < 100) {
-	while (loopcnt < 100) {
-	while ((status == STATUS_SUCCESS) && (state != STATE_DONE_FILE)) {
-	while (list_empty(&info->prov_list) == 0) {
-	while (list_empty(&info->prov_list) == 0) {
-		while (tempword & FT1000_DB_DPRAM_TX) {
-            while (tempword & ASIC_RESET_BIT) {
-	while (retry--) {
 		/* waits while reading of two bytes will be allowed */
-		while (!(inb(subdev_iobase + 0) & Rx2CA)) {
 		while (!((inb(usp->usp_iobase + 0)) & TxBE))
 			;	/* waits while writting will be allowed */
-		while ((eoc < 0x80) && j < 100) {
-		while (timeout &&
-		while (timeout--) {
-	while (NULL != (pcidev = pci_get_device(PCI_VENDOR_ID_ADVANTECH,
-		while ((devpriv->stc_readw(dev,
-		while (ni_readl(AIFIFO_Status_6143) & 0x04) {
-		while (fifo_empty == 0) {
-	while ((status1 =
-		while ((sdev = comedi_find_subdevice_by_type(d, COMEDI_SUBD_DIO,
-			while (nchans--)
-		while (devpriv->ndevs-- && devpriv->devs) {
-		while ((intstat = (inb(subpriv->iobase) & subpriv->valid_isns
-		while (--i) {
-		while (timeout--) {
-	while (timeout--) {
-	while (freq > (1 << tmp))
-		while (timeout--) {
-	while (NULL != (pcidev = pci_get_device(PCI_VENDOR_ID_AMCC,
-		while (timeout--) {
-	while (timeout--) {
 		} while (dw_eeprom_busy == EEPROM_BUSY);
 	/* BEGIN JK 02.07.04 : This while can't be do, it block the process when using severals boards */
 	/* while(i_InterruptFlag==1) */
-	while (s_BoardInfos[dev->minor].i_InterruptFlag == 1) {
 				} while ((us_TmpValue & APCI3120_EOS) !=
-	while (ul_DAC_Ready == 0) {
-		while (ul_DAC_Ready == 0) {
 		} while (dw_eeprom_busy == EEPROM_BUSY);
-	while (more) {
-		while (more && count > 0) {
-			while (more) {
-				while (more && count > 0) {
-	while (1) {
 	/* loop while card's fifo is not empty (and limit to half fifo for cio-das802/16) */
-	while ((pcidev = dt_pci_find_device(pcidev, &board)) != NULL) {
-	while (1) {
-			while (i < (cmd->chanlist_len))
-		while ((this_usbduxsub->ai_interval) < (cmd->chanlist_len)) {
-		while (timeout--) {
-		while (timeout--) {
-				while (position < num_samples) {
-		while (timeout--) {
-	while (devpriv->intr_running && devpriv->intr_cpuid != THISCPU) {
-			while (1) {
-			while (1) {
-	while (1) {
-		while (1) {
-		while (1) {
-		while (1) {
-		while (1) {
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-		while (!((status = inb(dev->iobase + DAQP_STATUS))
-		while (threshold > DAQP_FIFO_SIZE * 3 / 4)
-	while (NULL != (pcidev =
-		while (inl(ai_context->ctrl_reg) & ME4000_AI_STATUS_BIT_EF_DATA) {
 		 * reloaded while device is attached
-	while (devpriv->intr_running && devpriv->intr_cpuid != THISCPU) {
-	while (devpriv->intr_running && devpriv->intr_cpuid != THISCPU) {
-	while (inb(dev->iobase + DAS1800_STATUS) & FNE) {
-		while (timeout--) {
-		while (timeout--) {
-		while (timeout--) {
-		while (timeout--) {
-		while (timeout
-	while (status & DataLeft) {
-			while (flags & TransferReady) {
-	while (b & 1) {
-	while (nbytes > 0 && !retval) {
-	while (nbytes > 0 && !retval) {
-	while (count < num_bytes) {
-	while (num_bytes) {
-	while (nbytes) {
-		while ((skb = skb_dequeue(&hw->authq))) {
-	while ((skb = skb_dequeue(&hw->authq)))
-		while (pdaok && morepdrs) {
-	while (!list_empty(&hw->ctlxq.pending)) {
-	while ((iv[1] == 0xff) && (iv[0] >= 3) && (iv[0] < keylen))
-	while (curroff < (HFA384x_PDA_LEN_MAX / 2) &&
-	while (record) {
-	while ((skb = skb_dequeue(&wlandev->nsd_rxq))) {
-	while ((skb = skb_dequeue(&wlandev->nsd_rxq)))
-	while (i < num_channels) {
-	while ((c = getopt(argc, argv, "l:w:c:et:n:")) != -1) {
-	while (gpio_get_value(chip->busy_pin))
-	while (timeout_ms) {
-	while (timeout_ms) {
-	while (!(result & DATA_READY))
-	while ((initial_read_p != ring->read_p)
-	while (ring->read_p != end_read_p)
-	while (*buf) {
-		while (*attr++ != NULL)
-		while (*attr++ != NULL)
-		while (*attr++ != NULL)
-	while (*av_masks) {
-	while (len--) {
-	while (len--) {
-	while (timeout--) {
-	while (retry) {
-	while (lp->ch_ratio < ratio)
-	while ((list_empty(&data->queue) == 0) && --count) {
-	while ((--count) > 0) {
-	while (hw->tx_count < hw->len) {
-		while (readw(SSP_SR(pl022->virtbase)) & SSP_SR_MASK_RNE)
 	} while ((readw(SSP_SR(pl022->virtbase)) & SSP_SR_MASK_BSY) && limit--);
-	while ((readw(SSP_SR(pl022->virtbase)) & SSP_SR_MASK_RNE)
-	while ((pl022->exp_fifo_level < pl022->vendor->fifodepth)
-		while ((readw(SSP_SR(pl022->virtbase)) & SSP_SR_MASK_RNE)
-	while (message->state != STATE_DONE) {
-		while (pl022->tx < pl022->tx_end || pl022->rx < pl022->rx_end) {
-	while ((!list_empty(&pl022->queue) || pl022->busy) && limit--) {
-	while ((cpsdvsr <= CPSDVR_MAX) && !found) {
-		while (scr <= SCR_MAX) {
-		while (spi_readl(as, SR) & SPI_BIT(RDRF))
 		/* Clear any overrun happening while cleaning up */
-		while (SPIE_RXCNT(events) < min(4, mspi->len)) {
-			while (tmp--) {
-	 while (!list_empty(&hw->msg_queue)) {
-	while (!list_empty(&hw->msg_queue)) {
-	while (spi_sh_read(ss, SPI_SH_CR1) & SPI_SH_RBE) {
-	while (!(spi_sh_read(ss, SPI_SH_CR1) & SPI_SH_TBE)) {
-	while (remain > 0) {
-	while (remain > 0) {
-	while (!list_empty(&ss->queue)) {
-		while (((events =
-	while (i >= 0) {
-	while (timeout++ < 1000) {
-	while (!(readb(hw->base + TINY_SPI_STATUS) &
-	while (!(readb(hw->base + TINY_SPI_STATUS) &
-	while (i-- > 0)
-	 while (!list_empty(&spi100k->msg_queue)) {
-	while (!list_empty(&spi100k->msg_queue) && limit--) {
-	while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_SPIF) && --limit)
-	while (drv_data->tx < drv_data->tx_end) {
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-	while (drv_data->rx < drv_data->rx_end) {
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-	while (drv_data->rx < drv_data->rx_end) {
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-	while (drv_data->tx < drv_data->tx_end) {
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-	while (drv_data->rx < drv_data->rx_end) {
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-	while (drv_data->rx < drv_data->rx_end) {
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-	while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_RXS))
-		while ((bfin_read(&drv_data->regs->stat) & BIT_STAT_TXS) ||
-		while (!(bfin_read(&drv_data->regs->stat) & BIT_STAT_SPIF))
-	while ((!list_empty(&drv_data->queue) || drv_data->busy) && limit--) {
-	while (((sppr - 1) & ~0x7) != 0) {
-	while (rc == FSM_CONTINUE) {
-	while (i-- > 0)
-	while (!(__raw_readl(reg) & bit)) {
-	while (!list_empty(&mcspi->msg_queue)) {
-			while ((TX_FIFO_LVL(status, sci)
-	while (!acquire_dma(sdd))
-	while (!list_empty(&sdd->queue)
-	while (sdd->state & SPIBUSY)
-	while (sdd->state & SPIBUSY)
-	while ((sr & XSPI_SR_TX_FULL_MASK) == 0 && xspi->remaining_bytes > 0) {
-		while ((sr & XSPI_SR_RX_EMPTY_MASK) == 0) {
-		while (len) {
-			while (!(txx9spi_rd(c, TXx9_SPSR) & TXx9_SPSR_SIDLE))
-	while (!list_empty(&c->queue)) {
-		while (dspi->rcount > 0 || dspi->wcount > 0) {
-		while (read_SSSR(reg) & SSSR_RNE) {
 	} while ((read_SSSR(reg) & SSSR_BSY) && --limit);
-	while ((read_SSSR(reg) & SSSR_RNE)
-	while ((read_SSSR(reg) & SSSR_RNE)
-	while ((read_SSSR(reg) & SSSR_RNE)
-	while ((read_SSSR(reg) & SSSR_RNE)
-	while ((read_SSSR(ioaddr) & SSSR_BSY) && --limit)
-	while (!(DCSR(channel) & DCSR_STOPSTATE) && --limit)
-	while ((!list_empty(&drv_data->queue) || drv_data->busy) && limit--) {
-	while (rb < t->len) {
-	while (!list_empty(&mps->queue)) {
-	while (id->name[0]) {
-	while (!list_empty(&mpc8xxx_spi->queue)) {
-	while (!list_empty(&mcfqspi->msgq)) {
-	while (likely(count > 0)) {
-	while (likely(count > 1)) {
-	while (likely(count > 3)) {
-	while (!list_empty(&bitbang->queue)) {
-	while (len) {
-		while (in_be32(&fifo->rxcnt)) {
-	while (!list_empty(&mps->queue)) {
-	while (!(bfin_read(&drv_data->regs->stat) & RXNE)) {
-	while (drv_data->tx < drv_data->tx_end) {
-	while (drv_data->rx < drv_data->rx_end) {
-	while (drv_data->rx < drv_data->rx_end) {
-	while (drv_data->tx < drv_data->tx_end) {
-	while (drv_data->rx < drv_data->rx_end) {
-	while (drv_data->rx < drv_data->rx_end) {
-	while (!list_empty(&drv_data->queue) && drv_data->busy && limit--) {
-	while (bytes_done < t->len) {
-	while (max--) {
-	while (max--) {
-	while ((!list_empty(&dws->queue) || dws->busy) && limit--) {
-		while (1) {
-			while (!(readl(hw->base + ALTERA_SPI_STATUS) &
-	while ((ep93xx_spi_read_u8(espi, SSPSR) & SSPSR_RNE)) {
-	while (espi->fifo_level < SPI_FIFO_SIZE && espi->tx < t->len) {
-	while (ep93xx_spi_read_u16(espi, SSPSR) & SSPSR_RNE) {
 				 "timeout while flushing RX FIFO\n");
-	while (!list_empty(&espi->msg_queue)) {
-	while (len--) {
-	while (!list_empty(&ss->queue)) {
-	while (--ptr >= 0)
-	while (!list_empty(&orion_spi->msg_queue)) {
-		while (len >= 1) {
-		while (len) {
-	while (mx51_ecspi_rx_available(spi_imx))
-	while (readl(spi_imx->base + MX31_CSPISTATUS) & MX31_STATUS_RR)
-	while (spi_imx->txfifo < spi_imx_get_fifosize(spi_imx)) {
-	while (spi_imx->devtype_data->rx_available(spi_imx)) {
-			while (i > 0) {
-	while (*bytes_copied < count) {
-	while (*bytes_copied < count) {
-	while (priv->rx_list.bytes_held < bytes) {
-	while (1) {
-	while (loopcnt++ <= timeout) {
-	while (1)
-	while (ps3_sys_manager_handle_msg(dev)) {
-	while (1) {
-	while (count-- > 0) {
-		while (1) {
-		while (byte_count > 1) {
-		while (byte_count > 0) {
-	while (1) {
-	while (i < size_bytes) {
-	while (i < size_bytes) {
-	while (size > 0) {
-	while (dc->open_ttys)
-	while ((thead = tty->buf.head) != NULL) {
-	while ((thead = tty->buf.free) != NULL) {
-	while ((thead = tty->buf.head->next) != NULL) {
-	while ((*tbh) != NULL) {
-		while ((head = tty->buf.head) != NULL) {
-	while ((packet < hp->inbuf_end) && got_packet(hp, packet)) {
-			while ((packet < hp->inbuf_end) && (!is_header(packet)))
-	while (again) {
-	while ((count > 0) && (hvsi_write_room(hp->tty) > 0)) {
-	while (count > 0 || i > 0) {
-		while (__dcc_getstatus() & DCC_STATUS_TX)
-	while ((sent < len) && ((prod - cons) < sizeof(intf->out)))
-	while (len) {
-	while (cons != prod && recv < len)
-	while (off < len && NULL != (pos = strchr(string+off, '\n'))) {
-	while (len--)
-	while ((residual = strchr(residual, ',')) != NULL) {
-	while (*residual && count) {
-	while(temp_open_count) {
-	while (count > 0) {
-	while (count > 0 || i > 0) {
-	while(temp_open_count) {
-	while (count > 0 && (rsize = hp->outbuf_size - hp->n_outbuf) > 0) {
-	while ((count > 0) && ((pi->seq - pi->ack) < VIOCHAR_WINDOW)) {
-		while (atomic_read(&wait_flag) == 0)
-		while (atomic_read(&wait_flag) == 0)
-	while (refs--)
-	while (1) {
-	while (call < __con_initcall_end) {
-	while (i--) {
-	while (nr > 0) {
-				while (num_bs--) {
-	while (tty->read_head != tty->canon_head) {
-				while (--cnt > 0) {
-				while (tail != tty->canon_head) {
-			while (tail != tty->read_head) {
-	while (nr) {
-			while (nr && tty->read_cnt) {
-	while (1) {
-			while (nr > 0) {
-			while (nr > 0) {
-	while (head != tail) {
-			while (ttyj->open_count)
-		while ((i & 3) != 2) {
-	while (!list_empty(&hw->rx_queue)) {
-		while ((i & 3) != 2) {
-	while (hw->rx_ready && !hw->blocking_rx) {
-	while ((buf = n_hdlc_buf_get(&n_hdlc->rx_buf_list)))
-	while ((buf = n_hdlc_buf_get(&n_hdlc->tx_buf_list)))
-	while (tbuf) {
-			while (char_count--)
-		while (len--) {
-	while (char_count-- > 0) {
-			while ((status = readb(base_addr +
-	while ((readl(pci_doorbell) & 0xff) != 0) {
-			while (1) {
-			while (len--) {
-		while (0 < (small_count = min_t(unsigned int,
-		while (info->xmit_cnt && char_count) {
-	while (cyz_fetch_msg(cinfo, &channel, &cmd, &param) == 1) {
-		while (cyy_readb(info, CySRER) & CyTxRdy) {
-	while (1) {
-	while ((status = readl(&fid->signature)) != ZFIRM_ID && i++ < 40)
-		while ((status = readl(&fid->signature)) != ZFIRM_ID &&
-	while (!uart_circ_empty(xmit)) {
-	while (!uart_circ_empty(xmit)) {
-	while (limit-- > 0) {
-	while (limit-- > 0) {
-	while (limit-- > 0) {
-		while (limit-- > 0) {
-	while (n--) {
-	while (n > 0) {
-		while (page_bytes > 0) {
-			while (limit--) {
-	while (limit-- > 0) {
-		while ((readl(&port->ip_serial_regs->sscr)
-		while ((readl(&port->ip_serial_regs->sscr)
-	while ((prod_ptr != cons_ptr) && (len > 0)) {
-		while ((readl(&port->ip_serial_regs->sscr)
-			while (readl(&port->ip_serial_regs->sscr) &
-	while ((prod_ptr != cons_ptr) && (len > 0)) {
-	while ((sio_in(up, TXX9_SIFCR) & TXX9_SIFCR_SWRST) && --tmout)
-	while (1) {
-	while (--tmout &&
-		while (--tmout &&
-	while (status & UTSR1_TO_SM(UTSR1_RNE)) {
-	while (UART_GET_UTSR1(sport) & UTSR1_TNF) {
-	while ((termios->c_cflag & CSIZE) != CS7 &&
-	while (UART_GET_UTSR1(sport) & UTSR1_TBY)
-	while (!(UART_GET_UTSR1(sport) & UTSR1_TNF))
-	while (1) {
-	while (!(in_be16(&bdp->status) & BD_SC_READY) &&
-		while (count < qe_port->tx_fifosize) {
-	while (1) {
-		while (i-- > 0) {
-	while (!qe_uart_tx_empty(port)) {
-			while (1) {
-	while (up) {
-		while (up) {
-		while (up) {
-	while (1) {
-		while (i-- > 0) {
-		while(!cpm_uart_tx_empty(port)) {
-	while (!(in_be16(&bdp->cbd_sc) & BD_SC_READY) &&
-		while (count < pinfo->tx_fifosize) {
-		while (i-- > 0)
-	while (fifocnt--) {
-	while (((ltq_r32(port->membase + LTQ_ASC_FSTAT) &
-	while (!(readl(s->port.membase + AUART_STAT) &
-	while (readl(port->membase + AUART_STAT) & AUART_STAT_TXFF) {
-	while (readl(port->membase + AUART_STAT) & AUART_STAT_BUSY) {
-	while ((status = readl(port->membase + ALTERA_JTAGUART_DATA_REG)) &
-			while (count--) {
-	while (((status = readl(port->membase + ALTERA_JTAGUART_CONTROL_REG)) &
-	while ((readl(port->membase + ALTERA_JTAGUART_CONTROL_REG) &
-	while (1) {
-	while (--i >= 0)
-	while (--j >= 0)
-	while ((sci_in(port, SCxSR) & bits) != bits)
-	while ((status = readb(port->membase + MCFUART_USR)) & MCFUART_USR_RXREADY) {
-	while (readb(port->membase + MCFUART_USR) & MCFUART_USR_TXREADY) {
-		while (readl(pi->mpsc_base + MPSC_CHR_2) & MPSC_CHR_2_EH)
-	while (!((cmdstat = be32_to_cpu(rxre->cmdstat))
-	while (CIRC_CNT(pi->txr_head, pi->txr_tail, MPSC_TXR_ENTRIES)
-		while (!(be32_to_cpu(txre->cmdstat) & SDMA_DESC_CMDSTAT_O)) {
-		while (readl(pi->mpsc_base + MPSC_CHR_2) & MPSC_CHR_2_RA)
-	while (poll_cnt == 0) {
-		while (poll_cnt == 0 &&
-	while (pi->txr_head != pi->txr_tail) {
-		while (mpsc_sdma_tx_active(pi))
-	while (mpsc_sdma_tx_active(pi))
-	while (count > 0) {
-		while (mpsc_sdma_tx_active(pi))
-	while ((read_zsreg(zport, R0) & Rx_CH_AV) && --loops)
-	while (!(read_zsreg(zport, R0) & Tx_BUF_EMP) && --loops) {
-	while (!(read_zsreg(zport, R1) & ALL_SNT) && --loops) {
 	} while(--count > 0);
-	while(UART_GET_FIFO_CNT(port)) 
-	while(1) {
-	while(UART_GET_FIFO_CNT(&mux_ports[0].port))
-	while(count--) {
-	while (!(UART_GET_LSR(uart) & TEMT))
-	while ((UART_GET_LSR(uart) & THRE) && xmit->tail != xmit->head) {
-	while (UART_GET_LSR(uart) & DR)
-	while (!(UART_GET_LSR(uart) & THRE))
-	while (!(UART_GET_LSR(uart) & DR))
-	while (!(UART_GET_LSR(uart) & THRE))
-	while (max_count--) {
-	while (--tmout) {
-		while (--tmout) {
-	while (!(status & SYSFLG_URXFE)) {
-	while (clps_readl(SYSFLG(port)) & SYSFLG_UTXFF)
-	while (UART_RX_DATA(status) && (max_chars--)) {
-	while (!UART_TX_READY(UART_GET_STATUS(port)))
-	while (((status >> 20) & 0x3F) == fifosize) {
-	while ((status = altera_uart_readl(port, ALTERA_UART_STATUS_REG)) &
-	while (altera_uart_readl(port, ALTERA_UART_STATUS_REG) &
-	while (!(altera_uart_readl(port, ALTERA_UART_STATUS_REG) &
-	while (up) {
-	while (max_count--) {
-	while (readw(uap->port.membase + UART01x_FR) & UART01x_FR_BUSY)
-	while (!uart_circ_empty(xmit)) {
-	while (readw(uap->port.membase + UART01x_FR) & UART01x_FR_TXFF)
-	while (readw(uap->port.membase + UART01x_FR) & UART01x_FR_BUSY)
-	while (readw(uap->port.membase + UART01x_FR) & UART01x_FR_TXFF)
-		while((readl(&port->ip_serial_regs-> sscr)
-		while((readl(&port->ip_serial_regs->sscr)
-	while ((prod_ptr != cons_ptr) && (len > 0)) {
-		while ((readl(&port->ip_serial_regs->sscr)
-			while (readl(&port->ip_serial_regs->sscr) &
-	while ((prod_ptr != cons_ptr) && (len > 0)) {
-	while (1)
-	while ((buffer = info->first_recv_buffer) != NULL) {
-		while (irq_mask1_rd) {
-		while (count) {
-	while (control_state_str[i].str != NULL) {
-	while (info->xmit.head != info->xmit.tail || /* More in send queue */
-	while (1) {
-	while (limit-- > 0) {
-	while (!uart_circ_empty(xmit)) {
-	while (!uart_circ_empty(xmit)) {
-	while ((READ_SC_PORT(port, SR) & ((1 << 3) | (1 << 2))) != 0xc)
-	while ((READ_SC_PORT(port, SR) & ((1 << 3) | (1 << 2))) != 0xc)
-	while (limit-- > 0) {
-		while ((xuartps_readl(XUARTPS_SR_OFFSET) &
-			while (numbytes--) {
-	while (numbytes-- && ((xuartps_readl(XUARTPS_SR_OFFSET)
-	while ((xuartps_readl(XUARTPS_SR_OFFSET) &
-	while ((xuartps_readl(XUARTPS_SR_OFFSET) & XUARTPS_SR_TXEMPTY)
-	while (!(status & 0x10) && max_count--) {
-	while (*CSR_UARTFLG & 0x20)
-	while ((port->state->xmit.head != temp_tail) &&
-	while (status & SA_FL_RCV_DONE) {
-	while (!(readl(port->membase + UART_FR) & FR_RXFE)) {
-	while (status) {
 	/* while (j-- && mpc52xx_uart_int_rx_chars(port)); */
-	while (!mpc52xx_uart_tx_empty(port) && --j)
-	while (psc_ops->raw_rx_rdy(port)) {
-	while (psc_ops->raw_tx_rdy(port)) {
-	while (!mpc52xx_uart_tx_empty(port) && --j)
-		while (!mpc52xx_uart_tx_empty(port) && --j)
-	while (status & FIFO_TO_SM(PNX8XXX_UART_FIFO_RXFIFO)) {
 	 * TX while bytes available
-	while (((serial_in(sport, PNX8XXX_FIFO) &
-	while ((termios->c_cflag & CSIZE) != CS7 &&
-	while (serial_in(sport, PNX8XXX_FIFO) & PNX8XXX_UART_FIFO_TXFIFO_STA)
-	while (cons) {
-	while (rxlvl) {
-	while (sbd_receive_ready(sport) && --loops)
-	while (!sbd_transmit_ready(sport) && --loops)
-	while (!sbd_transmit_empty(sport) && --loops)
-		while (--tmout &&
-		while (--tmout &&
-		while ((msm_read(port, UART_ISR) & bits) != bits)
-	while (count > 0) {
-	while ((sr = msm_read(port, UART_SR)) & UART_SR_RX_READY) {
-	while (msm_read(port, UART_SR) & UART_SR_TX_READY) {
-	while (SPORT_GET_STAT(up) & RXNE) {
-	while(!(SPORT_GET_STAT(up) & TXF) && !uart_circ_empty(xmit)) {
-	while (!(SPORT_GET_STAT(up) & TXHRE))
-	while (!(SPORT_GET_STAT(up) & TXHRE))
-	while (SPORT_GET_STAT(up) & TXF)
-		while (SPORT_GET_STAT(up) & TXF)
-		while (SPORT_GET_STAT(up) & TXF)
-		while (!(SPORT_GET_STAT(up) & TXHRE))
-	while ((iid = pch_uart_hal_get_iid(priv)) > 1) {
-	while (total > 0) {
-	while (1) {
-		while (qleft < 1) {
-	while (n > 0) {
-	while (1) {
-	while (((uart_poll & 0xff) != 0) && (outofloop_count < 0xff)){
-	while (n) {
-	while (!uart_circ_empty(xmit)) {
-		while (left) {
-	while ((readb(&up->regs->r.star) & SAB82532_STAR_TEC) && --timeout)
-	while ((readb(&up->regs->r.star) & SAB82532_STAR_CEC) && --timeout)
-	while (n >= 640) {
-	while ((status = dz_in(dport, DZ_RBUF)) & DZ_DVAL) {
-		while ((--n > 0) &&
-			while (readl(sport->port.membase + URXD0) &
-	while (!uart_circ_empty(xmit) &&
-	while (readl(sport->port.membase + USR2) & USR2_RDR) {
-		while (!(readl(sport->port.membase + UCR2) & UCR2_SRST) &&
-		while ((--i > 0) &&
-	while ((termios->c_cflag & CSIZE) != CS7 &&
-	while ( !(readl(sport->port.membase + USR2) & USR2_TXDC))
-	while (readl(sport->port.membase + uts_reg(sport)) & UTS_TXFULL)
-	while (inta_addr[i] && iobase == NULL) {
-	while (UART_RX_DATA(status) && max_count--) {
-	while (port->sc_ops->sal_input_pending()) {
 			printk(KERN_ERR "sn_console: An error occurred while "
-	while ((s1 = memchr(s, '\n', count)) != NULL) {
-	while (ioread32be(port->membase + ULITE_STATUS) & ULITE_STATUS_TXFULL)
-	while (!(UTX & UTX_TX_AVAIL) && (loops < 1000)) {
-	while (left != 0) {
-	while((c=*(p++)) != 0) {
-	while (!(uart->utx.w & UTX_TX_AVAIL)) udelay(5);
-	while (1) {
-		while(info->xmit_cnt) {
-		while (!(uart->utx.w & UTX_TX_AVAIL)) udelay(5);
-	while (1) {
-    while (count--) {
-	while ((dcr_read(up->dcr_host, UART_LSR) & UART_LSR_THRE) == 0)
-	while (!(uart_circ_empty(xmit) || uart_tx_stopped(&up->port))) {
-	while (--count && !s3c24xx_serial_txempty_nofifo(port))
-	while (max_count-- > 0) {
-	while (!uart_circ_empty(xmit) && count-- > 0) {
-	while (!s3c24xx_serial_console_txrdy(port, ufcon))
-		while (--tmout &&
-	while (1) {
-	while (!port->ops->tx_empty(port)) {
-	while (*s >= '0' && *s <= '9')
-	while (1) {
-	while (read_zsreg(uap, 0) & Rx_CH_AV) {
-	while ((read_zsreg(uap, R0) & Tx_BUF_EMP) == 0
-	while (read_zsreg(uap, R0) & Rx_CH_AV) {
-	while ((read_zsreg(uap, R0) & Rx_CH_AV) == 0) {
-	while ((read_zsreg(uap, R0) & Rx_CH_AV) == 0) {
-	while (tries) {
-	while ((read_zsreg(uap, R0) & Tx_BUF_EMP) == 0)
-	while (node_p) {
-	while (i-- > 0) {
-	while ((read_zsreg(uap, R0) & Tx_BUF_EMP) == 0)
-	while ((status & URLS_URDR) && max_count--) {
-	while (!uart_circ_empty(xmit) && (count-- > 0)) {
-	while (!(UART_GET_LSR(port) & URLS_URTHRE))
-	while (status & ATMEL_US_RXRDY) {
-	while (UART_GET_CSR(port) & atmel_port->tx_done_mask) {
-	while (ring->head != ring->tail) {
-	while (!(UART_GET_CSR(port) & ATMEL_US_RXRDY))
-	while (!(UART_GET_CSR(port) & ATMEL_US_TXRDY))
-	while (!(UART_GET_CSR(port) & ATMEL_US_TXRDY))
-		while (!(UART_GET_CSR(port) & ATMEL_US_TXEMPTY))
-		while (--tmout)
-		while (count--)
-	while (vt8500_read(port, VT8500_URFIDX) & 0x1f00) {
-	while ((vt8500_read(port, VT8500_URFIDX) & 0x1f) < 16) {
-	while ((vt8500_read(port, VT8500_URUSR) & (1 << 5)) && --loops)
-	while ((vt8500_read(&vt8500_port->uart, VT8500_URFCR) & 0xc)
-	while (ioread32(port->membase + TIMBUART_ISR) & RXDP) {
-	while (!(ioread32(port->membase + TIMBUART_ISR) & TXBF) &&
-		while (ToRecv) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while ((dev = pci_get_device(PCI_VENDOR_ID_RP, PCI_ANY_ID, dev))) {
-	while (pInfo->tx_position < pBlock->length) {
-				while (pClient->msg_count) {
-	while (pClient) {
-		while (pClient->msg_count) {
-	while (pHeader) {
-	while (!kthread_should_stop()) {
-	while (!circ_empty(&bfin_jc_write_buf)) {
 	while (bfin_read_DBGSTAT() & EMUDOF)
-	while (ate < count) {
 		while (bfin_read_DBGSTAT() & EMUDOF)
-	while (sel_buffer && sel_buffer_lth > pasted) {
-	while (ct--) {
-	while (*cp) {
-		    while (sz < funcbufsize - funcbufleft + delta)
-		while (xx < vc->vc_cols && count) {
-			while (cnt--) {
-			while (cnt--) {
-			while (cnt--) {
-	while (--p >= q)
-		while (nr--)
-	while (++i <= vc->vc_cols - nr) {
-		while (nr--)
-	while (old_origin < end) {
-	while (*p) {
-		while (vc->vc_x < vc->vc_cols - 1) {
-	while (max >= min) {
-	while (!tty->stopped && count) {
-			while (1) {
-	while (count--) {
-	while (more) {
-	while (more) {
-		while (--i >= 0)
-	while (count) {
-			while (this_round-- > 0) {
-				while (this_round) {
-	while (count) {
-			while (this_round > 0) {
-				while (p < HEADER_SIZE && this_round > 0) {
-			while (this_round > 1) {
-	while (1) {
-	while((action = mgsl_bh_action(info)) != 0) {
-	while( (Fifocount = (usc_InReg(info,RICR) >> 8)) ) {
-		while (1) {
-		while (info->tx_active) {
-		while (!(usc_InReg(info,TCSR) & TXSTATUS_ALL_SENT) &&
-	while (1) {
-	while(info && info->line != line)
-	while( info ) {
-		while( current_dev->next_device )
-	while(info) {
-	while( !buffer_list[end_index].count )
-	while( (Fifocount = usc_InReg(info, TICR) >> 8) && info->xmit_cnt ) {
-	while( !Done ) {
-	while( !info->rx_buffer_list[EndIndex].status ) {
-			while(copy_count) {
-	while( BufferSize ){
-	while( EndTime-- && !info->irq_occurred ) {
-		while ( !(status & (BIT6+BIT5+BIT4+BIT2+BIT1)) ) {
-		while ( status == 0 ) {
-	while(count) {
-	while(info && info->line != line)
-		while (info->tx_active) {
-		while ( info->tx_active && info->tx_enabled) {
-	while( info ) {
-	while((action = bh_action(info)) != 0) {
-	while((status = read_reg(info,CST0)) & BIT0)
-	while (1) {
-		while( current_dev->next_device )
-	while(info) {
-	while(info) {
-	while( info->tx_count && (read_reg(info,SR0) & BIT1) ) {
-	while(!done) {
-			while(copy_count) {
-	while( timeout-- && !info->irq_occurred ) {
-	while(count) {
-	while (!(inb(info->ioaddr + UART_LSR) & UART_LSR_TEMT)) {
-	while (1) {
-	while (!((lsr = inb(info->ioaddr + UART_LSR)) & UART_LSR_TEMT)) {
-		while (gdl--) {
-	while (pass_counter++ < MXSER_ISR_PASS_LIMIT) {
-	while (test_bit(TTY_LDISC_CHANGING, &tty->flags)) {
-			while (tty_ldisc_wait_idle(tty, timeout) == -EBUSY) {
-	while (1) {
-			while (1) {
-	while(!((lsr = custom.serdatr) & SDR_TSRE)) {
-	while (1) {
-	while (!(custom.serdatr & 0x2000))
-	while (count--) {
-	while (count) {
-	while (count > 0) {
-	while (1) {
-	while(count) {
-	while(info && info->line != line)
-	while (info->tx_active) {
-	while( info ) {
-	while(desc_complete(bufs[end])) {
-	while((action = bh_action(info))) {
-	while (rd_reg16(info, SSR) & IRQ_RXDATA) {
-	while((gsr = rd_reg32(info, GSR) & 0xffffff00)) {
-		while ((changed = rd_reg32(info, IOSR)) != 0) {
-	while (*head != NULL) {
-	while (1) {
-		while(current_dev->next_device)
-	while(info) {
-	while(info) {
-	while(!done) {
-			while(copy_count) {
-	while (size) {
-	while(timeout-- && !info->irq_occurred)
-	while (len--)
-		while (dlen--) {
-	while (len--) {
-	while(1) {
-	while (i < NUM_DLCI) {
-	while (gsm_read_ea(&addr, *dp++) == 0) {
-	while (gsm_read_ea(&modem, *dp++) == 0) {
-		while (gsm_read_ea(&brk, *dp++) == 0) {
-	while (gsm_read_ea(&addr, *dp++) == 0) {
-			while (gsm_read_ea(&modem, *data++) == 0) {
-	while (len-- > 0) {
-	while ((dlci->skb = skb_dequeue(&dlci->skb_list)))
-		while (stall--)
-	while (CIRC_CNT(head, tail, JOBR_DEPTH) >= 1 &&
-	while (((rd_reg32(&jrp->rregs->jrintstatus) & JRINT_ERR_HALT_MASK) ==
-	while ((rd_reg32(&jrp->rregs->jrcommand) & JRCR_RESET) && --timeout)
-	while (sg_count) {
-	while (nbytes > 0) {
-	while (!(omap_aes_read(dd, offset) & bit)) {
-	while (buflen && total) {
-	while (!(omap_sham_read(dd, offset) & bit)) {
-	while (ctx->sg) {
-	while (nbytes) {
-	while (nbytes) {
-		while (nbytes) {
-		while (nbytes) {
-	while (core_dev->dev->pdr_head != core_dev->dev->pdr_tail) {
-	while (nbytes > 0) {
-	while ((nbytes = walk->nbytes) != 0) {
-	while ((in_be32(priv->reg + TALITOS_CCCR(ch)) & TALITOS_CCCR_RESET)
-	while ((in_be32(priv->reg + TALITOS_MCR) & TALITOS_MCR_SWR)
-	while (priv->chan[ch].fifo[tail].desc) {
-	while (priv->chan[ch].fifo[tail].dma_desc != cur_desc) {
-			while ((in_be32(priv->reg + TALITOS_CCCR(ch)) &
-	while (!(in_be32(priv->reg + TALITOS_RNGUSR_LO) & TALITOS_RNGUSR_LO_RD)
-		while (sg) {
-	while (sg) {
-	while (n_sg--) {
-	while (be16_to_cpu(link_tbl_ptr->len) <= (-cryptlen)) {
-	while (nbytes > 0) {
-	while (sg_miter_next(&miter) && offset < total_buffer) {
-	while ((nbytes = walk.nbytes)) {
-	while ((nbytes = walk.nbytes)) {
-	while ((nbytes = walk.nbytes)) {
-	while ((nbytes = walk.nbytes)) {
-	while (len) {
-	while (sl) {
-	while ((nbytes = walk.nbytes)) {
-	while ((nbytes = walk.nbytes)) {
-	while ((nbytes = walk.nbytes)) {
-	while ((nbytes = walk.nbytes)) {
-	while (count--)
-	while (nbytes > 0) {
-	while (!list_empty(&engine->pending) &&
-	while (!spacc_fifo_stat_empty(engine)) {
-	while (count--)
-	while (n) {
-	while (n) {
-	while (size) {
-	while (nbytes) {
-	while (nbytes) {
-	while (size) {
-		while (nbytes) {
-	while (u != 0) {
-	while (u != 0) {
-	while (u != 0) {
-	while (u != 0) {
-	while ((async_req = crypto_dequeue_request(&dev->queue))) {
-	while (dev->started < HIFN_QUEUE_LENGTH) {
-	while (buf) {
-	while (length--)
-	while (nbits >= 8) {
-			while (dst < limit && src < write)
-	while (count-- > 0) {
-	while (count-- > 0) {
-	while (count--) {
-	while (count > 0) {
-		while (count > 0 && dobytes > 0) {
-	while (numbytes--) {
-	while (head != (tail = inbuf->tail)) {
-	while (cb && !cb->len) {
-	while ((cb = cs->cmdbuf) != NULL) {
-	while ((skb = skb_dequeue(&cs->bcs->squeue)) != NULL)
-	while (numin--) {
-	while (tail != head) {
-	while (bytesleft) {
-	while ((skb = skb_dequeue(&bcs->squeue)) != NULL)
-	while (cb) {
-	while (procbytes < numbytes) {
-	while (procbytes < numbytes) {
-	while (procbytes < numbytes && skb->len < bcs->rx_bufsize) {
-	while (inbuf->head != inbuf->tail) {
-	while (len--) {
 	/* Perform byte stuffing while copying data. */
-	while (skb->len--) {
-	while (len--) {
-	while (curarg < params) {
 	/* loop while completed URBs arrive in time */
-	while ((skb = skb_dequeue(&bcs->squeue))) {
 	/* loop while more completed URBs arrive in the meantime */
-			while (cs->cmdbuf != NULL)
-	while ((cb = cs->cmdbuf) != NULL && (ucs->basstate & BS_ATREADY)) {
-		while (cs->cmdbuf != NULL)
-	while (*in) {
-	while (i-- > 0) {
-	while (count--) {
-	while (ap->bcnext) {
-	while (bcs->ap != NULL) {
-	while (ap->bcnext) {
-		while (bcs->ap != NULL) {
-		while (bcs->ap != NULL) {
-	while (atomic_sub_return(1, &iif->sendqlen) > 0) {
-		while(ipid->card_vendor) {
-	while ((dev_a4t = hisax_find_pci_device(PCI_VENDOR_ID_ZORAN,
-		while (stptr != NULL) {
 		/* while Data in Fifo ... */
-		while ( (stat & 2) && ((ptr-cs->rcvbuf) < MAX_DFRAME_LEN_L1) ) {
         /* while free place in tx-fifo available and data in sk-buffer */
-        while((txstat & 0x10) && (cs->tx_cnt < len)) {
- while (irflags)
-			while (stptr != NULL) {
-	while (l--)
-	while (len--) {
-	while (!0) {
-	while (l--)
-	while (l--)
-	while (l--) {
-	while (l--) {
-	while (l--)
-	while (l--)
-	while (l > 0) {
-				while (len--)
-				while (len--)
-	while (l--) {
-	while (l > 0) {
-		while (l2--) {
-		while (buf < bend) {
-		while (buf < bend) {
-		while (buf < bend) {
-	while (packet_offset < len) {
-	while (((sval = bytein(cs->hw.avm.cfg_reg)) & 0xf) != 0x7) {
-		while(ipid->card_vendor) {
-	while (!(ReadReg(cs, HFCD_DATA, HFCD_STAT) & HFCD_BUSY) && to) {
-	while ((ReadReg(cs, HFCD_STATUS, HFCD_STATUS) & HFCD_BUSY) && to) {
-		while (idx++ < count) {
-		while ((idx++ < count) && WaitNoBusy(cs))
-		while (idx < (count - 3)) {
-	while (idx < bcs->tx_skb->len) {
-	while ((f1 != f2) && count--) {
-			while (idx < rcnt) {
-			while ((idx++ < rcnt) && WaitNoBusy(cs))
-			while (idx < (rcnt - 3)) {
-	while (idx < cs->tx_skb->len) {
-	while (val) {
-	while(ipid->card_vendor) {
-			while (bytecnt) {
-	while (st) {
-	while (ret && --max_delay)
-		while (ret && --max_delay)
-	while (ret && --max_delay)
-		while (ret && --max_delay)
-	while (len < buf_size) {
 	/* while there are bytes left... */
-	while (p < pend) {
-		while (np->next)
-	while (np) {
-	while (p) {
-	while (st->l3.proc)
-	while ((skb = skb_dequeue(&st->l3.squeue))) {
-	while ((skb = skb_dequeue(&st->l3.squeue))) {
-		while(ipid->card_vendor) {
-		while (stptr != NULL) {
-			while (stptr != NULL) {
-	while (id_list[id_idx].vendor_id) {
-	  while (count--)
-	while (count--)
-	    while (count--)
-	    while (count) {
-	      while (count--) 
-	while (1) {
-	while (val) {
-		while(ipid->card_vendor) {
-	while (i < ((bch) ? cs->chanlimit : (2 + MAX_WAITING_CALLS))) {
-		while (i < (2 + MAX_WAITING_CALLS)) {
-			while (i < 2) {
-		while (stptr != NULL) {
-			while (stptr != NULL) {
-	while ((READHSCX(cs, hscx, HSCX_STAR) & 0x04) && to) {
-	while (((READHSCX(cs, hscx, HSCX_STAR) & 0x44) != 0x40) && to) {
-	while ((request = init_cmd_table[i++])) {
-	while (len > 0) {
-			while (len--) {
-	while (i>0) {
-		while (8>bitcnt++) {
-		while (8>bitcnt++) {
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while(timeout-- && cs->hw.elsa.transcnt)
-	while (!(cs->BC_Read_Reg(cs, HFC_STATUS, 0) & HFC_BUSY) && to) {
-	while ((cs->BC_Read_Reg(cs, HFC_STATUS, 0) & HFC_BUSY) && to) {
-	while (((f1 != f2) || (z1 != z2)) && cnt--) {
-		while ((idx < rcnt) && WaitNoBusy(cs)) {
-		while ((idx++ < count) && WaitNoBusy(cs))
-		while ((idx++ < count) && WaitNoBusy(cs))
-		while ((idx < count) && WaitNoBusy(cs)) {
-	while ((idx < bcs->tx_skb->len) && WaitNoBusy(cs))
-		while(ipid->card_vendor) {
-	while (st) {
-	while (st) {
-	while (stptr != NULL) {
-	while ((skb = skb_dequeue(&cs->rq))) {
-				while (stptr != NULL) {
-				while (stptr != NULL) {
-	while ((skb = skb_dequeue(&bcs->rqueue))) {
-	while (st) {
-		while (stptr != NULL) {
-			while (stptr != NULL) {
-    while (to) {
-    while (to) {
-	while (argc && (i < HISAX_MAX_CARDS)) {
-		while (count) {
-	while (cnt) {
-	while (i < nrcards) {
-	while (i <= last) {
-	while (cardnr >= 0)
-	while ((skb = skb_dequeue(&d_if->erq)) != NULL) {
-	while (((df->f1 & D_FREG_MASK) != (df->f2 & D_FREG_MASK)) && count--) {
-		while ((fcnt < 2 * HFCPCI_BTRANS_THRESHOLD) && (bcs->tx_skb)) {
-	while (val) {
-	while (id_list[i].vendor_id) {
-		while ((dev_a8 = hisax_find_pci_device(PCI_VENDOR_ID_PLX,
-	while (((in8 = Read_hfc8(hw, reg)) != ref8)) {
-	while (((in16 = Read_hfc16(hw, reg)) != ref16)) {
-				while (z1 >= 4) {
-				while (z1--)
-		while (z1 >= 4) {
-		while (z1--)
-		while (z1 >= 4) {
-		while (z1--)
-		while (cnt >= 4) {
-		while (cnt--)
-		while (cnt--)
-		while (cnt >= 4) {
-		while (cnt--)
-	while (b) {
-	while (idx < hw->driver_data.max_st_ports) {
-		while (*fifo_stat) {
-		while (ovr) {
-  	while ((READJADE(cs, jade, jade_HDLC_STAR) & mask) && to) {
-	while(size--)
-	while(size--)
-	while(size--)
-	while(size--)
-	while (((sval = bytein(cs->hw.diva.ctrl)) & DIVA_IRQ_REQ) && cnt) {
-	while ((MemReadHSCX(cs, hscx, HSCX_STAR) & 0x04) && to) {
-	while (((MemReadHSCX(cs, hscx, HSCX_STAR) & 0x44) != 0x40) && to) {
-	while (cnt--)
-	while(cnt--)
-	while(ipid->card_vendor) {
-	while ((sval = (~bytein(cs->hw.avm.cfg_reg+ASL0_OFFSET) & ASL0_R_IRQPENDING))) {
-	while ((i) && (p->prot.ni1.invoke_used[retval >> 3] == 0xFF)) {
-		while (p->prot.ni1.invoke_used[retval >> 3] & (1 << (retval & 7)))
-  while (pc)
-	while (qd_len > 0 && !(*p & 0x80)) {	/* extension ? */
-	while (ilen > 0) 
-				while (ilen > 0) {
-	                    while (ilen > 0) 
-	while (max_ie_len[i].ie != -1) {
-	while (*checklist != -1) {
-	while ((p - skb->data) < skb->len) {
-		while (l && (i<6)) {
-	while (*sp) {
-	while (*teln)
-        while (len--)
-            while (*subp) *p++ = *subp++;
-	while (up) {
-	while (i < 32) 
-	while (cnt--) {
-		while(ipid->card_vendor) {
-	while (cnt--) *ptr++ = cs->BC_Read_Reg(cs, hscx, IPACX_RFIFOB); 
-	while (cnt--) cs->BC_Write_Reg(cs, hscx, IPACX_XFIFOB, *p++); 
-	while ((ista = cs->readisac(cs, IPACX_ISTA))) {
-	while ((cs->BC_Read_Reg(cs, 0, ISAR_HIA) & 1) && timeout) {
-			while (i>0) {
-			while (i>0) {
-	while((!(cs->BC_Read_Reg(cs, 0, ISAR_IRQBIT) & ISAR_IRQSTA)) &&
-	while (cnt < size) {
-		while (left>0) {
-			while(noc) {
-	while (cnt--)
-	while ((!ireg->bstat) && cnt) {
-	while (cnt--)
-	while ((ireg->iis != ISAR_IIS_DIAG) && cnt) {
-	while ((ireg->iis != ISAR_IIS_DIAG) && cnt) {
-	while (len--)
-	while (count--) {
-	while (l2->va != nr) {
-	while ((skb = skb_dequeue(&st->l2.ui_queue))) {
-		while (l2->vs != nr) {
-		while (*eaz)
-	while (*teln)
-		while (cnt < count) {
-		while (cnt < count) {
-		while (cnt<count) {
-		while (cnt<count) {
-		while (pd->log_head->next) {
-		while (card) {
-	while (card) {
-			while (card) {
-		while (inf) {
-				while (pd->log_head) {
-	while (card) {
-		while (tmp) {
-	while (cnt--) {
-	while (len) {
-		while (nr_write--) {
-	while (timecnt--) {
-	while (cnt--) {
-	while (len > 0) {
-		while ((*cp <= '9') && (*cp >= '0'))
-			while (i) {
-				while ((i) && (*cp < ' ') && (*cp != 9)) {
-	while (card) {
-		while (*cp)
-		while (((cp - tmp) % (INFO_OUT_LEN + 1)) != INFO_OUT_LEN)
-		while (*cp)
-		while (((cp - tmp) % (INFO_OUT_LEN + 1)) != INFO_OUT_LEN)
-	while (card) {
-	while (card) {
-	while (card) {
-	while (card->async_busy) {
-	while (card->async_busy) {
-	while (nl->sk_count) {
-		while ((ns - cdb->pos) <= n)
-	while (p->event) {
-	while (p->event) {
-	while (p->event) {
-	while (*s && *s == ' ') s++;
-	while (*s) {
-	while (card->nbchan) {
-	while (1) {
-	while ((skb = skb_dequeue(&ap->recv_queue))) {
-	while (divert_info_head->next) {
-	while (inf) {
-		while (divert_info_head) {
-  while (cs)
-     while ((ds1) && (idx > 0))
-     while (ds)
-  while ((ds) && (idx > 0))
-  while ((ds) && (idx >= 0))
-     while (*p)
-        while (*p)
-  while (cs)
-   while (len--)
-  while (restlen >= 2)
-  while (cs)
-     while (cs)
-	while(inb(sc_adapter[card]->ioport[FIFO_STATUS]) & RF_HAS_DATA)
-	while(b++ < MAX_CARDS - 1) {
-	while((inb(iobase + FIFOSTAT_OFFSET) & RF_HAS_DATA) && x < 100) {
-	while (!receivemessage(card, &rcvmsg)) {
-	while (!(inb(sc_adapter[card]->ioport[FIFO_STATUS]) & WF_NOT_FULL))
-	while (tries < timeout) {
-        while (timeout) {
-        while (timeout) {
-	while (!act2000_isa_readb(card, &c)) {
-	while (1) {
-		while (skb->len) {
-        while (1) {
-        while (length) {
-                while (c < l) {
-	while (p) {
-	while (p) {
-	while (p) {
-		while (p) {
-	while (p) {
-        while (p) {
-        while (p) {
-        while (card) {
-        while (card) {
-	while (p) {
-        while (1) {
-	while ((skb = skb_dequeue(&card->rcvq))) {
-	while (card->sndcount[ch]) {
-	while (s->statstr) {
-	while (cc) {
-					while (*e) {
-	while (s->statstr) {
-			while (strchr("0157", *p)) {
-	while (len) {
-	while (p) {
-							while (card->ptype == ISDN_PTYPE_UNKNOWN)
-	while (p) {
-	while (card) {
-	while (card) {
-	while (nlp != lp) {
-		while (p) {
-	while (p) {
-					while (time_after(jiffies, l->chargetime + l->chargeint))
-	while (p) {
-	while (!isdn_net_lp_busy(lp)) {
-		while (p) {
-	while (p) {
-	while (p) {
-				while (n) {
-						while (mlp->slave) {
-	while (p) {
-		while (p) {
-		while (n) {
-		while (n) {
-		while (q) {
-		while (n) {
-	while (p) {
-	while (dev->netdev) {
-	while (line < len) {    /* Are we done with all lines of the matrix? */
-	while ((i < len) && (line < mlen)) {	/* while we still have input data */
-			while (1) {
-					while (v->SyncInit) {
-	while (indx-- != 0) {
-	while (--ilen > 0) {
-		while (finchar > LAST) {
-	while (n--)
-	while (s->nleft < s->nbits) {
-	while (s->nleft >= 8) {
-	while (len) {
-	while (len--) {
-		while (--nmax && delta > d) {
-	while ((skb = skb_dequeue(&info->dtmf_queue))) {
-	while (len) {
-	while (isdn_wildmat(s, p)) {
-			while (dev->drv[di]->locks > 0) {
-	while (*p[0] >= '0' && *p[0] <= '9')
-	while (len) {
-			while ((count_pull < skb->len) && (len > 0)) {
-	while (len) {
-			while ((count_pull < skb->len) && (len > 0)) {
-	while (p) {
-		while ((retval = isdn_writebuf_stub(drvidx, chidx, buf, count)) == 0)
-						while (loop) {
-							while (1) {
-		while (p) {
-		while (net_dev) {	/* step through net devices to find exclusive minors */
-				while(ipc) {
-  	while (start != NULL || newfrag != NULL) {
-		while (mp->frames > MP_MAX_QUEUE_LEN) {
-    	while( frag ) {
-		while (from != to) {
-		while( from != to ) {
-	while (sdev) {
-	while (sdev) {
-	while(ipc) {
-						while (--l) {
-	while (len--)
-	while (len > 0) {
-	while (c--) {
-	while (1) {
-	while (1) {
-		while (!(info->lsr & UART_LSR_TEMT)) {
-		while (1) {
-	while (count > 0) {
-	while (((*p[0] >= '0' && *p[0] <= '9') ||
-	while (strchr(" 0123456789,#.*WPTSR-", *p) && *p && --cnt>0) {
-			while (*p[0] && (strchr("0123456789,-*[]?;", *p[0])) &&
-	while (vcmd[i]) {
-	while (slen > 0) {
-	while (dsize > 0) {
-			while (dsize--)
-	while ((frame = dev->read_queue)) {
-		while (read_seq != dev->rcv_seq) {
 		} while (i != ack);
-		while (count < 7 && dev->write_queue) {
-	while (argc && (i<MAX_PCBIT_CARDS)) {
-		while (rbavl) {
-		while (sbfree && 
-	while (s->statstr) {
-						while (*p) {
-	while (1) {
-  while (slsec) { \
-	while (left) {
-	while (1) {
-	while (len) {
-	while (p) {
-	while (card) {
-							while (card->ptype == ISDN_PTYPE_UNKNOWN) {
-	while (p) {
-	while (card) {
-	while (card) {
-		while ((skb = skb_dequeue(&dch->rqueue))) {
-		while ((skb = skb_dequeue(&bch->rqueue))) {
-	while (l2->va != nr) {
-	while (skb) {
-	while ((skb = skb_dequeue(&l2->ui_queue))) {
-		while (l2->vs != nr) {
-	while (i < 256) {
-		while (j < 256) {
-	while (i < 256) {
-	while (i < ii) {
-	while ((tok = strsep(&dup, "|"))) {
-			while (*digits) {
-			while (*digits) {
-	while ((skb = skb_dequeue(&dsp->sendq))) {
-		while (poll <= MAX_POLL) {
-		while ((tok = strsep(&dup, ","))) {
-		while (test_bit(mISDN_STACK_WORK, &st->status)) {
-	while (samples[i].len) {
-		while (j < (*samples[i].len)) {
-	while (len) {
-		while (42) {
-	while (pattern[i].tone) {
-		while (i < ii) {
-			while (i < ii) {
-			while (i1 < ii) {
-			while (i2 < ii) {
-			while (i < ii) {
-	while (i < ii) {
-	while (i < ii) {
-				while (r != rr) {
-			while (r != rr) {
-			while (i < MAX_SECONDS_JITTER_CHECK) {
-				while (r != rr) {
-			while (i < MAX_SECONDS_JITTER_CHECK) {
-				while (r != rr) {
-			while (i) {
-	while (w != ww) {
-		while (size < DSP_DTMF_NPOINTS && len) {
-	while (!signal_pending(current)) {
-	while (!hc->socket) {
-		while (l) {
-		while (l) {
-	while (l1oip_cnt < MAX_CARDS && type[l1oip_cnt]) {
-	while (i < ii) {
-	while (i < len) {
-	while (i < len) {
-	while (i < len) {
-	while (i1 < 256) {
-		while (i2 < 256) {
-	while (i1 < 16) {
-		while (i2 < 16) {
-	while (i < len) {
-	while (i < len) {
-	while (i < 9) {
-    while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-      while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-    while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-    while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-      while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-  while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-      while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-  while (!(pmsg = (diva_dbg_entry_head_t*)queueAllocMsg (dbg_queue,
-  while (ref_len--) {
- while (dwords--) {
- while (dwords--) {
-		while ( (fpgaDate[i] != '\0')
-		while ( (fpgaDate[i] >= '0') && (fpgaDate[i] <= '9') )
 	} while ( (year < 2000) && (fpgaDate[i] != '\0') );
-	while ( code < FileLength )
-	while (length--) {
- while ( (i < 100) && (IoAdapter->a.ram_in (&IoAdapter->a, &RAM->SWReg) != 0) )
-	while (length--) {
-						while (len--) {
-						while (len--) {
-	while (length--) {
-	while (num < MAX_DESCRIPTORS) {
-	while ((max_adapter != 0) && !adapter[max_adapter - 1].request)
-	while (i++ < 30) {
-		while ((*buffer_length >= (64 * 1024))
-	while (diva_mnt_shutdown_xdi_adapters() && i--) {
-			while (length--) {
-			while (length--) {
-			while (length--) {
-			while (length--) {
-            while (total_length > 3 && *p) {
-	while ((a = get_and_remove_from_queue())) {
-  while(e_no && ReadyCount) {
-    while(i<this->XNum && length<270) {
-      while (i < this->XNum) {
-    while(Count--) {
-    while(Count--) {
-    while (sample_number < length)
-        while (k != plci->msg_in_write_pos)
-    while (plci->internal_command_queue[i] != NULL)
-  while (plci->internal_command_queue[1] != NULL)
-        while ((ncci < MAX_NCCI+1) && a->ncci_ch[ncci])
-            while ((j < MAX_NCCI+1) && (a->ncci_ch[j] != i))
-      while (ncci_ptr->data_pending != 0)
-        while ((i != 0) && (a->ncci_next[i] != plci->ncci_ring_list) && (a->ncci_next[i] != ncci))
-    while (i != plci->msg_in_write_pos)
-  while ((i < C_IND_MASK_DWORDS) && (plci->c_ind_mask_table[i] == 0))
-  while (!plci->req_in
-          while (i < plci->NL.RBuffer->length)
-      while (i < nlc[0])
-  while(ploc<plci->Sig.RBuffer->length-1) {
-    while ((w < DTMF_DIGIT_MAP_ENTRIES)
-  while (plci->dtmf_send_requests != 0)
-        while ((i < dtmf_parms[3].length) && (j < DTMF_DIGIT_MAP_ENTRIES))
-          while ((j < DTMF_DIGIT_MAP_ENTRIES)
-    while ((j < DTMF_DIGIT_MAP_ENTRIES)
-      while ((j < li_total_channels) && !(li_config_table[i].flag_table[j] & LI_FLAG_ANNOUNCEMENT))
-      while ((j < li_total_channels)
-        while ((i < li_total_channels) && (li_config_table[i].plci == NULL))
-        while (participant_parms_pos < li_req_parms[1].length)
-        while (participant_parms_pos < li_req_parms[0].length)
-  while (i + sizeof(word) <= a->adv_voice_coef_length)
-  while (i < ADV_VOICE_OLD_COEF_COUNT * sizeof(word))
-        while (ncci_ptr->data_pending)
-        while (ncci_ptr->data_ack_pending)
-	while (c4inmeml(card->mbase+DOORBELL) != 0xffffffff) {
-	while (left >= sizeof(u32)) {
-	while (i-- > 0)
-	while (i-- > 0) *dp++ = _get_byte(pp);
-	while (c4inmeml(card->mbase+DOORBELL) != 0xffffffff) {
-	while (c4inmeml(card->mbase+DOORBELL) != 0xffffffff) {
-		while (    MsgLen > 0
-		while (    MsgLen > 0
-	while (left >= sizeof(u32)) {
-	while (left > FWBUF_SIZE) {
-	while (left > FWBUF_SIZE) {
-		while (    MsgLen > 0
-		while (    MsgLen > 0
-	while (len--) {
 		while (   !b1dma_tx_empty(card->port)
-	while (len--) {
 		while (   !b1dma_rx_full(card->port)
-	while (i-- > 0)
-	while (i-- > 0) *dp++ = _get_byte(pp);
-		while (    MsgLen > 0
-		while (    MsgLen > 0
-	while (b1_rx_full(card->port)) {
-			while (    MsgLen > 0
-			while (    MsgLen > 0
-	while (cnt < count) {
-	while (cnt < count) {
-	while (cnt--) {
-	while (cnt--) {
-	while (cnt--) {
-	while (ci->typ != INF_NONE) {
-					while (i < rx_skb->len)
-					while (i < rx_skb->len)
-					while (i < tx_skb->len)
-		while (fifo->stop_gracefull && timeout--)
-	while (fifo->stop_gracefull && timeout--)
-	while (alt_idx < intf->num_altsetting) {
-		while (validconf[cfg_used][0]) {
-	while (cnt--) {
-	while (cnt--) {
-	while (readb(hc->pci_membase + R_STATUS) & V_BUSY)
-	while (inb(hc->pci_iobase) & V_BUSY)
-	while (hfc_register_names[++i].name) {
 	while (hfc_register_names[i++].name)
-	while (hfc_register_names[++i].name) {
 	while (hfc_register_names[i++].name)
-	while (hfc_register_names[++i].name) {
-	while (len>>2) {
-	while (len>>1) {
-	while (len) {
-	while (len>>2) {
-	while (len>>1) {
-	while (len) {
-	while (len>>2) {
-	while (len>>1) {
-	while (len) {
-	while (len>>2) {
-	while (len>>1) {
-	while (len) {
-		while (f2 != (temp = HFC_inb_nodebug(hc, A_F2))) {
-	while (z2 != (temp = (HFC_inw_nodebug(hc, A_Z2) - hc->Zmin))) {
-		while (f1 != (temp = HFC_inb_nodebug(hc, A_F1))) {
-	while (z1 != (temp = (HFC_inw_nodebug(hc, A_Z1) - hc->Zmin))) {
-				while (temp < (*sp)->len)
-				while (st_status != (temp =
-	while (j < 8) {
-				while (dch->state != (temp =
-			while (pt) { /* release already registered ports */
-	while ((val & 1) && t) {
-			while (l < (int)len) {
-			while (l < (int)isar->clsb) {
-	while (t && !(irq & ISAR_IRQSTA)) {
-	while (cnt < size) {
-		while (left > 0) {
-			while (noc) {
-	while (cnt--)
-	while ((!isar->bstat) && cnt) {
-	while (cnt--)
-	while ((isar->iis != ISAR_IIS_DIAG) && cnt) {
-	while ((isar->iis != ISAR_IIS_DIAG) && cnt) {
-	while (cnt--) {
-	while (to) {
-	while (to) {
-		while (ista && cnt--) {
-		while (ista && cnt--) {
-		while (cnt) {
-	while (cnt < 50000) { /* max 50000 us */
-	while (((df->f1 & D_FREG_MASK) != (df->f2 & D_FREG_MASK)) && count--) {
-	while (cnt) {
-	while (fs->state == idle) {
 			/* wait a little while for DMA to complete */
-		while (fs->state != available) {
-	while (time_before(jiffies, expire)) {
-	while (len > 0) {
-	while (p > s && p[-1] == ' ')
-	while (1) {
-	while (1) {
-	while (!list_empty(&sc->luns)) {
-	while ((rq = blk_peek_request(q)) != NULL) {
-	while (!sc->reset && (cmd = ub_cmdq_peek(sc)) != NULL) {
-		while ((cmd = ub_cmdq_peek(sc)) != NULL) {
-	while (i--)
-	while (req) {
-	while (count) {
-	while ((success = ((inb(port) & mask) != flags)) && time_before(jiffies, expiry))
-	while (!complete) {
-			while (min[i] != max[i] - 1) {
-	while (chain) {
-	while (old_chain) {
-	while (1) {
-	while (i < ccissscsi[h->ctlr].ndevices) {
-	while (count < 20) {
-	while ((((r = status_reg(pi)) & go) || (stop && (!(r & stop))))
-	while (k < tmo) {
-	while ((k++ < PT_RESET_TMO) && (status_reg(pi) & STAT_BUSY))
-	while (k < tmo) {
-	while (count > 0) {
-		while (1) {
-			while (n > 0) {
-	while (count > 0) {
-		while (1) {
-			while (n > 0) {
-	while (k < PD_SPIN) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while ((j >= 0) && (id[j] <= 0x20))
-			while(count)
-			while(count)
-			while(count)
-			while(count > 1)
-			while(count)
-			while(count > 3)
-			while(count)
-			while(count--)
-			while(count)
-			while(count)
-			while(count > 1)
-			while(count)
-			while(count > 3)
-			while(count)
-	while ((((r = status_reg(dev)) & go) || (stop && (!(r & stop))))
-	while (read_reg(dev, 7) & STAT_DRQ) {
-	while ((k++ < PG_RESET_TMO) && (status_reg(dev) & STAT_BUSY))
-	while ((k < MAX_PROTOS) && (protocols[k]))
-	while ((((r = status_reg(cd)) & go) || (stop && (!(r & stop))))
-		while (read_reg(cd, 7) & IDE_DRQ) {
-	while ((k++ < PCD_RESET_TMO) && (status_reg(cd) & IDE_BUSY))
-	while (k < tmo) {
-	while ((k >= 0) && (id[k] <= 0x20)) {
-	while (1) {
-	while (pcd_count && (pcd_sector / 4 == pcd_bufblk)) {
-	while ((((r = status_reg(pf)) & go) || (stop && (!(r & stop))))
-	while ((k++ < PF_RESET_TMO) && (status_reg(pf) & STAT_BUSY))
-	while (1) {
-	while (1) {
-	while (n >= PAGE_SIZE) {
-	while (!kthread_should_stop() || !bio_list_empty(&lo->lo_bio_list)) {
-	while (is_loop_device(f)) {
-	while (left) {
-	while (!list_empty(&h->reqQ)) {
-	while (interrupt_pending(h)) {
-		while (raw_tag != FIFO_EMPTY)
-	while (raw_tag != FIFO_EMPTY)
-	while (interrupt_pending(h)) {
-		while (raw_tag != FIFO_EMPTY) {
-	while (raw_tag != FIFO_EMPTY) {
-	while (1) {
-		while (1) {
 	/* under certain very rare conditions, this can take awhile.
-	while (req) {
-	while (drive--)
-	while ((vbr = virtqueue_get_buf(vblk->vq, &len)) != NULL) {
-	while ((req = blk_peek_request(q)) != NULL) {
-	while (nr_packets > 0) {
-	while (*p) {
-	while (copy_size > 0) {
-	while (node) {
-	while ((node = pkt_rbtree_find(pd, zone)) != NULL) {
-			while (src_offs >= src_bvl->bv_len) {
-	while ((bio = bio_list_pop(&pkt->orig_bios)))
-	while (page) {
-	while ((tmp = page_chain_next(page)))
-	while (page == NULL) {
-	while (!list_empty(head)) {
-	while (bios) {
-	while (data_size) {
-	while (get_t_state(&mdev->receiver) == Running) {
-	while (b) {
-	while (drbd_pp_pool) {
-		while (i--)
-	while (try++ < max_tries) {
-	while (size >= 10000 && base < sizeof(units)-1) {
-	while (retcode == SS_NEED_CONNECTION) {
-		while (drbd_make_request_common(mdev, &bp->bio1, start_time))
-		while (drbd_make_request_common(mdev, &bp->bio2, start_time))
-	while (offset < end) {
-		while (bm_fo < b->bm_bits) {
-	while ((tmp = page_chain_next(page))) {
-	while (1) {
-	while (req) {
-		while (len) {
-    while ( amiga_chip_avail() > ( Z2RAM_CHUNKSIZE * 4 ) )
-		while (size) {
-  while (DAC960_PD_MailboxFullP(ControllerBaseAddress))
-  while (DAC960_PD_MailboxFullP(ControllerBaseAddress))
-	while (--TimeoutCounter >= 0)
-	while (--TimeoutCounter >= 0)
-	while (--TimeoutCounter >= 0)
-	while (--TimeoutCounter >= 0)
-      while (DAC960_GEM_HardwareMailboxFullP(ControllerBaseAddress))
-      while (!DAC960_GEM_HardwareMailboxStatusAvailableP(ControllerBaseAddress))
-      while (DAC960_BA_HardwareMailboxFullP(ControllerBaseAddress))
-      while (!DAC960_BA_HardwareMailboxStatusAvailableP(ControllerBaseAddress))
-      while (DAC960_LP_HardwareMailboxFullP(ControllerBaseAddress))
-      while (!DAC960_LP_HardwareMailboxStatusAvailableP(ControllerBaseAddress))
-  while (Controller->ModelName[ModelNameLength] == ' ' ||
-  while (true)
-  while (true)
-	  while (DAC960_GEM_InitializationInProgressP(BaseAddress))
-	  while (DAC960_BA_InitializationInProgressP(BaseAddress))
-	  while (DAC960_LP_InitializationInProgressP(BaseAddress))
-	  while (DAC960_LA_InitializationInProgressP(BaseAddress))
-	  while (DAC960_PG_InitializationInProgressP(BaseAddress))
-	  while (DAC960_PD_InitializationInProgressP(BaseAddress))
-	  while (DAC960_PD_InitializationInProgressP(BaseAddress))
-   while(1) {
-	      while (++LogicalDriveNumber < NewEnquiry->NumberOfLogicalDrives)
-	      while (++LogicalDriveNumber < Controller->LogicalDriveCount)
-  while (true)
-	  while (PhysicalDeviceInfo != NULL &&
-  while (NextStatusMailbox->Fields.CommandIdentifier > 0)
-  while (NextStatusMailbox->Fields.CommandIdentifier > 0)
-  while (NextStatusMailbox->Fields.CommandIdentifier > 0)
-  while (NextStatusMailbox->Fields.Valid)
-  while (NextStatusMailbox->Fields.Valid)
-  while (DAC960_PD_StatusAvailableP(ControllerBaseAddress))
-  while (DAC960_PD_StatusAvailableP(ControllerBaseAddress))
-      while (NewStatusBufferLength < ByteCount)
-  while (*UserCommandString == ' ') UserCommandString++;
-  while (*UserCommandString == ' ') UserCommandString++;
-  while ((Command = DAC960_AllocateCommand(Controller)) == NULL)
-  while ((Command = DAC960_AllocateCommand(Controller)) == NULL)
-	  while (Controller->V2.NewControllerInformation->PhysicalScanActive)
-	    while ((Command = DAC960_AllocateCommand(Controller)) == NULL)
-	    while (Controller->V1.DirectCommandActive[DCDB.Channel]
-	    while ((Command = DAC960_AllocateCommand(Controller)) == NULL)
-	while ((Command = DAC960_AllocateCommand(Controller)) == NULL)
-	while (Controller->V2.HealthStatusBuffer->StatusChangeCounter
-	while (!kthread_should_stop()) {
-	while (rc != rp) {
-		while ((bio == NULL) ||
-	while (1) {
-	while (1) {
-	while (size > 0) {
-	while (tries-- > 0) {
-	while (1) {
-	while (slen && (port->name[slen - 1] == ' ')) {
-	while (1) {
-	while (!list_empty(&d->bufq)) {
-	while ((d = *dd)) {
-	while ((d = rmd)) {
-	while (atomic_read(&skb_shinfo(skb)->dataref) != 1 && i-- > 0)
-	while ((d = devlist)) {
 	while (ptr < endp && *ptr++ != 0x4489)
-		while (*ptr == 0x4489 && ptr < endp)
-	while (len-- > 0)
-	while (errcnt < MAX_ERRORS) {
-	while( fdc_busy ) sleep_on( &fdc_wait );
-	while( fdc_busy ) sleep_on( &fdc_wait );
-	while (i--) {
-	while (chain) {
-	while (chain) {
-	while (old_chain && (total < len)) {
-	while (max < coll->total && coll->status[max].done)
-	while (1) {
-	while (1) {
-	while (!list_empty(&rbd_dev->snaps)) {
-	while (*name) {
-	while (i--)
-	while (i--)
-	while (i--)
-	while (i--)
-	while (i--)
-	while (i--)
-	while ((req = blk_peek_request(q)) != NULL) {
-		while ((req = blk_fetch_request(ace->queue)) != NULL)
-		while (ace->id_req_count) {
-		while (ace->id_req_count) {
-	while (ace->fsm_continue_flag)
-	while (ace->fsm_continue_flag)
-	while (ace->fsm_continue_flag)
-	while (num_req_outstanding < VIOMAXREQ) {
-	while ((req = blk_peek_request(rq)) != NULL) {
-	while (1) {
-				while (here[n].sect)
-		while (tracksize <= fsector_t % _floppy->sect) {
-			while (tracksize + ssize > _floppy->sect) {
-	while (ptr) {
-	while (this) {
-	while (drive--) {
-	while (dr--) {
-	while (p != io_regions) {
-	while (--fdc >= 0)
-	while (*cfg) {
-		while (*cfg && *cfg != ' ' && *cfg != '\t')
-	while (drive--)
-	while (count) {
-	while (count) {
-	while (ddr_size > 0) {
-	while(c && c != h->reqQ) {
-	while(c && c != h->cmpQ) {
-	while (j--) {
-	while(i<8 && eisa[i]) {
-	while((c = h->reqQ) != NULL) {
-		while((a = h->access.command_completed(h))) {
-			while(c->busaddr != a) {
-	while(c->type != CMD_IOCTL_DONE)
-	while (page->headcnt < page->cnt) {
-	while (return_bio) {
-	while (i--)
-	while ((req = blk_fetch_request(q))) {
-	while (len > 0) {
-	while (p > s && p[-1] == ' ')
-	while ((req = nbd_read_stat(lo)) != NULL)
-	while (!list_empty(&lo->queue_head)) {
-	while (!list_empty(&lo->waiting_queue)) {
-	while (!kthread_should_stop() || !list_empty(&lo->waiting_queue)) {
-	while ((req = blk_fetch_request(q)) != NULL) {
-	while (i--) {
-	while ((offset < len - 1) && (i < LP5521_PROGRAM_LENGTH)) {
-	while (--i >= 0)
-	while (--i >= 0) {
-	while (pulses--) {
-	while (i--)
-	while (i--) {
-	while ((offset < len - 1) && (i < LP5523_PROGRAM_LENGTH)) {
-		while (1) {
-	while (pos) {
-	while (pos) {
-	while (*drv_id->id) {
-	while (ptr && ptr->next)
-		while (new_option && pnp_option_set(new_option) == set) {
-	while (!pnp_check_port(dev, res)) {
-	while (!pnp_check_mem(dev, res)) {
-	while ((char *)p < (char *)end) {
-	while ((char *)p < (char *)end) {
-	while ((char *)p < (char *)end) {
-	while ((char *)p < (char *)end) {
-	while (1) {
-	while ((char *)p < (char *)end) {
-	while ((str != NULL) && (*str != '\0')) {
-	while (*drv_id->id) {
-	while (ptr && ptr->next)
-	while (id) {
-	while (pos) {
-	while (pos != &card->devices) {
-	while (i < res_cnt) {
-	while (id) {
-	while (list != &pnp_cards) {
-		while (list != &pnp_global) {
-		while (list != &card->devices) {
-	while (rdp <= 0x3ff) {
-	while (1) {
-		while (size1 > 0 && name[--size1] == ' ')
-	while (1) {
-	while (1) {
-	while (1) {
-		while (i--)
-		while (--i >= 0)
-		while (len) {
-		while (len) {
-			while (*p & 0x80) {
-	while (!status) {
-	while (nmemb--)
-	while (nmemb--)
-	while (nmemb--)
-	while (nmemb--)
-	while (!ret) {
-		while (e->regbit) {
-			while ((size /= 2) != 0)
-			while (nmemb--) {
-			while (nmemb--) {
-			while (nmemb--) {
-	    	while (nmemb--) {
-	while (1) {
-			while (align && (align < num))
-		while (--i >= 0)
-	while (--i >= 0)
-	while (did && did->match_flags) {
-	while (did && did->match_flags) {
-	while (i-- > 0) {
-    while (tcic_getb(TCIC_ICSR))
-	while (!gpio_get_value(GPIO_NR_PALMTC_PCMCIA_PWRREADY) &&
-	while (1) {
-	while ((next = timerqueue_getnext(&rtc->timerqueue))) {
-	while (__raw_readl(&rtcreg->ctl) & TX4939_RTCCTL_BUSY) {
-	while (readl(rtc_data->io + STMP3XXX_RTC_STAT) &
-	while (rtcif_read(davinci_rtc, PRTCIF_CTLR) & PRTCIF_CTLR_BUSY)
-	while (rtcss_read(davinci_rtc, PRTCSS_RTC_CCTRL) &
-	while (secs != secs2 && --timeout) {
-	while (bfin_read_RTC_ISTAT() & RTC_ISTAT_WRITE_PENDING)
-	while (1) {
-	while (1) {
-	while (--i >= 0)
@@ -89,7 +89,6 @@ static int tegra_rtc_wait_while_busy(str
-	while (tegra_rtc_check_busy(info)) {
-	while (!(__raw_readl(nuc900_rtc->rtc_reg + REG_RTC_AER) & AERRWENB)
-		while (time_before(jiffies, uip_watchdog + 2*HZ/100))
-		while (time_before(jiffies, timeout)) {
-	while (au_readl(SYS_COUNTER_CNTRL) & SYS_CNTRL_C0S)
-		while ((au_readl(SYS_COUNTER_CNTRL) & SYS_CNTRL_T0S) && --t)
-	while (au_readl(SYS_COUNTER_CNTRL) & SYS_CNTRL_C0S)
-	while ((msm6242_read(priv, MSM6242_CD) & MSM6242_CD_BUSY) && cnt) {
-			while (!(inb(ECONTROL(p)) & 0x01)) {
-		while (!(status & 0x08) && got < length) {
-	while (left) {
-	while (left) {
-	while (!list_empty(&ports_list)) {
-	while (count < len) {
-	while (count < len) {
-		while (parport_wait_peripheral (port, PARPORT_STATUS_ACK, 0)) {
-	while (*p) {
-	while (p && p->devnum != devnum)
-	while (1) {
-	while (1) {
-	while (left > 0) {
-	while (1) {
-	while (!(parport_ip32_read_econtrol(p) & ECR_F_EMPTY)) {
-	while ((z = zorro_find_device(ZORRO_PROD_BSC_MULTIFACE_III, z))) {
-	while (p) {
-			while (u >= p && *u == ' ')
-			while (*u) {
-		while(len2 < idlen && retval > 0) {
-	while (time_before (jiffies, deadline)) {
-	while (uiomem < &uioinfo->mem[MAX_UIO_MAPS]) {
-	while (uiomem < &uioinfo->mem[MAX_UIO_MAPS]) {
-	while (atomic_read(&dev->refcnt)) {
-	while (head != tail) {
-	while (*sem == 0 && i < LOOP_TIMEOUT) {
-	while (address > PM_LEVEL_SIZE(domain->mode))
-	while (level > end_lvl) {
-	while (level > 0) {
-	while (unmapped < page_size) {
-	while (curr) {
-		while (*entry) {
-	while (*new) {
-	while (node) {
-	while (node) {
-	while (*str) {
-		while (*str == ',')
-	while (level > 0) {
-	while (level <= total) {
-	while (parent != tmp) {
-	while (parent != tmp) {
-	while (support && !(pfnmerge & ~VTD_STRIDE_MASK)) {
-	while (nr_pages > 0) {
-	while (!list_empty(&domain->devices)) {
-		while (parent != tmp) {
-	while (!list_empty(&domain->devices)) {
-	while (iommu->agaw < dmar_domain->agaw) {
-	while (count) {
-	while (start < end) {
-	while (start < end) {
-	while (((unsigned long)entry_header) <
-	while (dev) {
-	while (((unsigned long)entry_header) <
-	while (qi->desc_status[qi->free_tail] == QI_DONE ||
-	while (qi->free_cnt < 3) {
-	while (qi->desc_status[wait_index] != QI_DONE) {
 		 * context to queue another cmd while a cmd is already submitted
-	while ((readl(iommu->reg + DMAR_IQT_REG) !=
-	while (1) {
-	while (p < end) {
-	while (p < end) {
-	while (p < end) {
-	while (p < end) {
-	while (p < end) {
-	while (bytes) {
-	while (*str) {
-		while (*str == ',')
 	} while (1);
-	while (--count > 0) {
-	while (--count > 0) {
-	while (start < end) {
-	while (table->mask) {
-	while (!IsStatusReady(j)) {
-	while (!IsPCControlReady(j)) {
-	while (!IsControlReady(j)) {
-				while(atomic_read(&j->DSPWrite) > 0) {
-			while(atomic_read(&j->DSPWrite) > 0) {
-		while(atomic_read(&j->DSPWrite) > 0) {
-		while (time_before(jiffies, jif)) {
-		while (time_before(jiffies, jif)) {
-	while(test_and_set_bit(board, (void *)&j->busyflags) != 0)
-	while (len--)
-        while (len--)
-	while (!j->read_buffer_ready || (j->dtmf_state && j->flags.dtmf_oob)) {
-	while (!j->write_buffers_empty) {
-				while (!IsRxReady(j)) {
-						while (!IsTxReady(j)) {
-	while (j->fskcnt < 20) {
-	while(1){
-	while(j->tone_state)
-	while(test_and_set_bit(j->board, (void *)&j->busyflags) != 0)
-	while(j->tone_state)
-	while(test_and_set_bit(j->board, (void *)&j->busyflags) != 0)
-	while(!j->flags.cidcw_ack && time_before(jiffies, j->cidcw_wait))
-	while(test_and_set_bit(j->board, (void *)&j->busyflags) != 0)
-				while (!IsTxReady(j)) {
-						while (!IsTxReady(j)) {
-						while (!IsTxReady(j)) {
-					while (!IsTxReady(j)) {
-	while (mContinue) {
-	while(test_and_set_bit(board, (void *)&j->busyflags) != 0)
-	while(atomic_read(&j->DSPWrite) > 0)
-	while (1) {
-	while (len-- > 0)
-			while (i-- > 0)
-	while (ids->id) {
-	while (clk->parent)
-	while (mr && enum_id && *reg_idx < desc->hw.nr_mask_regs) {
-	while (pr && enum_id && *reg_idx < desc->hw.nr_prio_regs) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
 		} while (!time_after_eq(jiffies, end) &&
-	while (!found) {
-	while ((stat = nv_rd32(dev, NV03_PGRAPH_INTR))) {
-	while (!list_empty(&mem->regions)) {
-		while (num) {
-	while (num) {
-	while (num) {
-	while (chan->dma.ib_free < count) {
-	while (chan->dma.free < count) {
-	while (chan->dma.free < size) {
-	while (parts) {
-	while (mode->hdisplay) {
-	while (dwords) {
-	while ((status = nv_rd32(dev, NV03_PFIFO_INTR_0)) && (cnt++ < 100)) {
 		/* reset, and delay a while if this is a retry */
-			while (dp->link_bw < (ROM16(entry[0]) * 10))
-			while (dp->link_bw < (entry[0] * 27000))
-			while (lvsw != conf[0] || lpre != conf[1]) {
-	while (*link_bw > nv_encoder->dp.link_bw)
-	while (link_bw[0]) {
-		while ((dp.link_nr >> 1) * link_bw[0] > datarate)
-		while ((link_bw[1] * dp.link_nr) > datarate)
-	while (mcnt--) {
-		while (remaining) {
-	while (dwords) {
-	while (nv_rd32(dev, 0x400700) & 2) {}
 			} while (!tpnr[gpc]);
 			} while (!tpnr[gpc]);
-		while (!(ntpcv & (1 << 4))) {
 		} while (!tpnr[gpc]);
-	while ((stat = nv_rd32(dev, 0x400100))) {
-	while (put != get) {
-	while (dsize) {
-	while (1) {
-	while (--testscore > 0) {
 	 * while we don't
-	while ((offset < bios->length) && (count++ < MAX_TABLE_OPS)) {
-	while ((table = ROM16(bios->data[bios->init_script_tbls_ptr + i]))) {
-	while (map->reg) {
-	while (entries--) {
-	while (searchlen) {
-	while (page_count) {
-	while (length) {
-	while (page_count) {
-		while ((entry = nouveau_ramht_remove_entry(chan, 0))) {
-	while ((stat = nv_rd32(dev, NV03_PGRAPH_INTR))) {
-	while (bf->name) {
-	while (en->name) {
-	while ((pdev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, pdev)) != NULL) {
-		while (n < (d * 2)) {
-	while (((n % 5) == 0) && ((d % 5) == 0)) {
-	while (((n % 2) == 0) && ((d % 2) == 0)) {
-	while (n > 0xffff || d > 0xffff) {
-	while (cnt--) {
-	while (cnt--) {
-	while (cnt--) {
-	while (vidmask) {
-	while (units) {
-	while (nv_rd32(dev, NV50_PMC_INTR_0) & NV50_PMC_INTR_0_DISPLAY) {
-	while (cnt) {
-		while (block) {
-	while (cnt--) {
-	while (cnt--) {
-	while ((stat = nv_rd32(dev, NV03_PGRAPH_INTR))) {
 	} while (0)
 	} while (0)
-	while ((stat = nv_rd32(dev, NV03_PGRAPH_INTR))) {
-		while (u) {
-		while (u) {
-		while (nvbe->nr_pages--) {
-	while (cnt--) {
-	while (cnt--) {
-	while (cnt--) {
-	while (cnt >= 4) {
-	while (cnt >= 4) {
-	while (entry->buf_count < count) {
-	while (entry->buf_count < count) {
-	while (entry->buf_count < count) {
-	while (entry->buf_count < count) {
-	while (diff == 0 && count--) {
 	while (!(VIA_READ(VIA_REG_STATUS) & VIA_VR_QUEUE_BUSY) && --count)
-	while (count && (VIA_READ(VIA_REG_STATUS) &
-		while (((tmp_size = via_cmdbuf_space(dev_priv)) < d_siz->size)
-		while (((tmp_size = via_cmdbuf_lag(dev_priv)) > d_siz->size)
-	while (buf < buf_end) {
-		while (buf < buf_end) {
-	while (buf < buf_end) {
-		while ((buf < buf_end) &&
-			while (buf <= next_fire) {
-		while (buf < buf_end) {
-	while (dwords--) {
-	while (buf < buf_end) {
-	while (buf < buf_end) {
-	while (i--)
-	while (i--) {
-	while (buf < buf_end) {
-	while (buf < buf_end) {
-	while (num_desc--) {
-		while (line_len > 0) {
-	while (blitq->serviced != blitq->cur) {
-	while (blitq->num_free == 0) {
-		while (((1 << cur_backend) & enabled_backends_mask) == 0)
-	while (rptr != wptr) {
-	while (status || rdev->irq.stat_regs.r500.disp_int) {
-	while (link_width_cntl == 0xffffffff)
-	while ((this_opt = strsep(&options, ",")) != NULL) {
-	while (status) {
-	while (num_gpu_pages > 0) {
-				while (blocks > 0) {
-			while (id != 0xffff) {
-		while (RBIOS16(offset)) {
-					while (val--) {
-					while (val--) {
-		while (RBIOS8(offset)) {
-					while (tmp--) {
-					while (tmp--) {
-		while (val != 0xff) {
-				while (tmp--) {
-	while (ram--) {
-					while (RBIOS8(offset)) {
-		while (p->file_priv == NULL && p->next->file_priv == NULL) {
-		while (((1 << cur_backend) & enabled_backends_mask) == 0)
-		while (((1 << cur_backend) & enabled_backends_mask) == 0)
-		while (dwords & 0xf) {
-	while (dwords & 0xf) {
-			while (remaining) {
-			while (remaining) {
-		while (((1 << cur_backend) & enabled_backends_mask) == 0)
-				while ((ret = r600_do_cp_idle(dev_priv)) != 0) {
-				while ((ret = radeon_do_cp_idle(dev_priv)) != 0) {
-	while ((pdev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, pdev)) != NULL) {
-	while ((pdev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, pdev)) != NULL) {
-		while (!(cg_spll_status & R600_SPLL_CHG_STATUS))
-		while (!(cg_spll_status & R600_SPLL_CHG_STATUS))
-	while ((k < narrays) && (i < (count + 1))) {
-	while (drm_buffer_unprocessed(cmdbuf->buffer)
-	while (ndw > (rdev->cp.ring_free_dw - 1)) {
-		while ((k < narrays) && (i < (count + 2))) {
-	while (drm_buffer_unprocessed(cmdbuf->buffer) >= sizeof(stack_header)) {
-		while (ref_div <= pll->max_ref_div) {
-		while (min_ref_div < max_ref_div-1) {
-			while (min_feed_div < max_feed_div) {
-				while (min_frac_feed_div < max_frac_feed_div) {
-		while (((1 << cur_backend) & enabled_backends_mask) == 0)
-			while (*record != ATOM_RECORD_END_TYPE) {
-	while (n--)
-	while (1) {
-	while (CU8(base) == ATOM_IIO_START) {
-		while (CU8(base) != ATOM_IIO_END)
-	while (*str && ((*str == '\n') || (*str == '\r')))
-		while (((1 << cur_backend) & enabled_backends_mask) == 0)
-	while (rptr != wptr) {
-        while (link_width_cntl == 0xffffffff)
-	while (dwords & 0xf) {
-		while (num_gpu_pages / rect_order) {
-	while (num_gpu_pages) {
-	while (num_gpu_pages) {
-	while (1) {
-	while (1) {
-		while (size_bytes) {
-		while (size_bytes) {
-	while (p && p->chip_device != 0) {
-	while (mm->num_unused < MM_UNUSED_TARGET) {
-		while ((pdev =
-	while (ring->space < n) {
-		while (pad != 0) {
-		while (count > 0) {
-	while (n != 0) {
-	while (n != 0) {
-	while (n != 0) {
-	while (n != 0) {
-		while (cmdbuf < end) {
-	while (i < cmdbuf->size) {
-	while (*num > 0xffffff || *den > 0xffffff) {
-		while (p->file_priv == NULL && p->next->file_priv == NULL) {
-	while (length > 0) {
-	while (remain > 0) {
-	while (remain > 0) {
-	while (remain > 0) {
-	while (remain > 0) {
-	while (remain > 0) {
-	while (remain > 0) {
-	while (gtt_size < size)
-	while (i--)
-	while (!list_empty(&ring->request_list)) {
-	while (!list_empty(&ring->active_list)) {
-	while (!list_empty(&dev_priv->mm.flushing_list)) {
-	while (!list_empty(&ring->request_list)) {
-	while (!list_empty(&ring->active_list)) {
-	while (obj->pin_count > 0)
-	while (!list_empty(&file_priv->mm.request_list)) {
-	while (count++ < 50 && (I915_READ_NOTRACE(FORCEWAKE_ACK) & 1))
-	while (count++ < 50 && (I915_READ_NOTRACE(FORCEWAKE_ACK) & 1) == 0)
-	while (count++ < 50 && (I915_READ_NOTRACE(FORCEWAKE_MT_ACK) & 1))
-	while (count++ < 50 && (I915_READ_NOTRACE(FORCEWAKE_MT_ACK) & 1) == 0)
-		while (fifo <= GT_FIFO_NUM_RESERVED_ENTRIES && loop--) {
-	while (count--) {
-	while (page--)
-	while (index < total) {
-			while (len) {
-	while (--i) {
-	while (!list_empty(&unwind_list)) {
-	while (!list_empty(&unwind_list)) {
-	while (!list_empty(&eviction_list)) {
-	while ((pdev = pci_get_class(PCI_CLASS_DISPLAY_VGA << 8, pdev)) != NULL) {
-	while (size < obj->base.size)
-	while (*num > 0xffffff || *den > 0xffffff) {
-	while (rem--) {
-	while (num_dwords--)
-	while (count > size)
-	while (!list_empty(objects)) {
-	while (objects != &obj->exec_list) {
-	while (!list_empty(objects)) {
-	while (!list_empty(&objects)) {
-	while (status == SDVO_CMD_STATUS_PENDING && retry--) {
-	while (likely(cur != NULL)) {
-	while (ttm_zones_above_swap_target(glob, from_wq, extra)) {
-	while (unlikely(ttm_mem_global_reserve(glob,
-		while (tmp_size < size)
-	while (ret == -EINVAL) {
-	while (!list_empty(&tfile->ref_list)) {
-	while (unlikely(atomic_cmpxchg(&bo->reserved, 0, 1) != 0)) {
-	while (!list_empty(&man->lru)) {
-	while (i--) {
-	while (*cur) {
-	while (bo->sync_obj) {
-	while (ret == -EBUSY) {
-	while (NULL == (p = ttm->pages[index])) {
-	while (drm_dequeue_event(file_priv, total, count, &e)) {
-	while (entry) {
-	while (!vmw_lag_lt(queue, us)) {
-	while (cur_size > 0) {
-	while (sw_context->cmd_bounce_size < size) {
-	while (!list_empty(&fman->fence_list)) {
-	while (num_pages > 0) {
-	while (likely(num_pages != 0)) {
-		while (likely(num_pages != 0)) {
-	while (num_pages--) {
-	while (vmw_read(dev_priv, SVGA_REG_BUSY) != 0)
-	while (1) {
-	while (bytes > 0) {
-	while (new_bus) {
-			while (bus) {
-	while (bus) {
-		while (uc->io_cnt--)
-		while (uc->mem_cnt--)
-	while ((pdev =
-	while (!need_resched())
 	 * Find the idle state with the lowest power while satisfying
-	while (ids->id) {
-	while (dev->read_packet_length == 0) {
-	while (dev->interrupt_out_busy) {
-	while (rec) {
-		while (rec && (i + be16_to_cpu(rec->len) < FW_LOAD_SIZE)) {
-	while (bytes_to_read) {
 		dbg(2," %s : while, data_in_secondary=%d, status=%d",
-	while (count > 0) {
-	while (ptr+4 <= firmware->data+firmware->size) {
-	while (rec) {
-		while (rec && (i + be16_to_cpu(rec->len) < FW_LOAD_SIZE)) {
-	while (retval == 0 && iterations-- > 0) {
-	while (retval == 0 && iterations-- > 0) {
-		while (!completion_done(&completion)) {
-		while (--i >= 0)
-        while (ftdi->respond_next > ftdi->respond_head) {
-        while (ed_number-- > 0) {
-        while (ed_number-- > 0) {
-        while (ed_number-- > 0) {
-        while (I-- > 0) {
-                while (F-- > 0) {
-        while (I-- > 0) {
-                while (s-- > 0 && m-- > 0) {
-                while (s-- > 0 && m-- > 0) {
-                        while (s-- > 0 && m-- > 0) {
-                        while (urb_size-- > 0) {
-                        while (packet_bytes-- > 0) {
-        while (I-- > 0)
-        while (long_stop-- > 0) {
-                                while (packet_bytes-- > 0) {
-                        while (packet_bytes-- > 0) {
-	while (bytes_read < IMGSIZE) {
-		while (retries) {
-		while (retries) {
-		while (thistime) {
-	while (count > 0) {
-		while (thispass) {
-	while (count > 0) {
-	while (length) {
-	while (length) {
-	while ((ranksize >>= 1) > 0) tmp += 0x10;
-	while (retry--) {
-			while (i--)
-			while (bootlogo[i]) {
-			while (bootstring[i])
-	while (count--)
-	while (count--) {
-	while (timeout--) {
-	while (1) {
-	while (count++ < 3) {
-	while (fst->Status & FCM_STATUS_BUSY) {
-		while (len > 1) {
-	while (*p) {
-		while (*p) {
-	while (*++p && *p != ',') {
-	while(1) {
-	while (ready == 0) {
-	while (sectors > 0) {
-	while (sectors > 0) {
-			while (EntrySize > 0) {
-		while (1) {
-		while (1) {
-	while (sectors > 0) {
-	while (sectors > 0) {
-	while (transferred != scsi_bufflen(srb)) {
-	while (sectors>0) {
-	while (sectors > 0) {
-	while (cnt < buflen && sg) {
-		while (sglen > 0) {
-	while (atomic_read(&total_threads) > 0) {
-	while (int_status != 0 && (count-- >= 0)) {
-	while (c67x00_ep_data_free(ep)) {
-	while (dev->parent->parent)
-	while (remaining || need_empty) {
-	while (td->td_list.next != &c67x00->td_list) {
-		while (here && ed != here) {
-		while (*prev && (temp = *prev) != ed) {
-		while (data_len > 4096) {
-	while (tmp != &ed->td_list) {
-	while (td_dma) {
-	while (td) {
-		while (I-- > 0) {
-		while (L-- > 0)
-		while (L-- > 0)
-		while (L-- > 0)
-		while (L-- > 0)
-			while (--I > 0) {
-			while (urb_size-- > 0) {
-		while (++queue_list < ENDP_QUEUE_SIZE && --queue_size > 0) {
-		while (++queue_list < ENDP_QUEUE_SIZE && --queue_size > 0) {
-			while (rings-- > 0) {
-			} while (endps-- > 0) {
-	while (rings-- > 0) {
-	while (ports-- > 0) {
-	while (addrs-- > 0) {
-	while (udevs-- > 0) {
-		while (i-- > 0)
-		while (o-- > 0)
-	while (endps-- > 0)
-			while (ports-- > 0) {
-			while (ports-- > 0) {
-	while ((reg_data != 0xFACE) && retry_count) {
-	while (readl(imx21->regs + USBOTG_RST_CTRL) != 0) {
-		while (ed) {
-		while (ohci_readl (ohci, &ohci->regs->control) & OHCI_CTRL_IR) {
-	while ((ohci_readl (ohci, &ohci->regs->cmdstatus) & OHCI_HCR) != 0) {
-		while (ed->td_head != NULL) {
-	while (--j >= 0)
-	while (--i >= 0) {
-	while (!(readl(usb_phy_reg_base + USB_PHY_PLL_REG) & PLL_READY)) {
-	while (!(readl(usb_phy_reg_base + USB_PHY_PLL_REG) & PLL_READY)) {
-	while (qh->state != QH_STATE_IDLE) {
-	while (itr_size >= sizeof(*hdr)) {
-	while (itr < top) {
-	while (__raw_readl(ohci->mmio_base + UHCHR) & UHCHR_FSBIR)
-		while (bytes >= 4) {
-		while (bytes >= 4) {
-	while (bytes > 0) {
-		while (bytes >= 4) {
-		while (bytes >= 4) {
-	while (ep_queue) {
-	while (ep_queue) {
-	while (priv->int_done_map || priv->atl_done_map) {
-	while (last_trb(xhci, ring, ring->enq_seg, next)) {
-	while (last_trb(xhci, ring, enq_seg, enq)) {
-		while (last_trb(xhci, ring, enq_seg, enq)) {
-	while (cur_seg->trbs > trb ||
-	while (xhci_trb_virt_to_dma(state->new_deq_seg, state->new_deq_ptr)
-			while (!list_empty(&ring->td_list)) {
-			while (!list_empty(&temp_ep->cancelled_td_list)) {
-			while (ep_ring->dequeue != td->last_trb)
-	while (ep_ring->dequeue != td->last_trb)
-	while (xhci_handle_event(xhci) > 0) {}
-		while (last_trb(xhci, ring, ring->enq_seg, next)) {
-		while (running_total < sg_dma_len(sg) && running_total < temp) {
-	while (running_total < urb->transfer_buffer_length) {
-		while (offset && count--) {
-	while ((td = fhci_peek_td_from_frame(usb->actual_frame)) != NULL) {
-	while (td != NULL) {
-		while (data_len > 4096) {
-	while (here.ptr && here.ptr != ptr) {
-	while (q->ptr) {
-	while (q->ptr) {
-		while (here.ptr) {
-		while (here.ptr) {
-		while (here.ptr && qh != here.qh) {
-		while (!list_empty (&stream->free_list)) {
-	while (here.ptr) {
-		while (q.ptr != NULL) {
-		while (wait_time > 0 &&
-		while ((cap & EHCI_USBLEGSUP_BIOS) && (msec > 0)) {
-	while (offset && --count) {
-	while (prev->qh_next.qh != qh)
-	while (ehci->qh_scan_next) {
-	while (ed->ed_prev)
-	while (ed) {
-	while (port--) {
-	while (port--) {
-		while (port--) {
-	while (port--) {
-		while (port--) {
-		while (port--) {
-	while (port--) {
-		while (port--) {
-		while (i--) {
-	while (i--) {
-	while (i--) {
-			while (ports--) {
-		while (*prev && ((temp = *prev) != ep))
-			while (here && ep != here) {
-	while (qset->ntds) {
-	while (qset->ntds) {
-	while (remaining) {
-		while (dma_remaining) {
-		while (sg_remaining) {
-	while (ntds_remaining) {
-	while (ed->ed_prev)
-		while (--limit_2 >= 0) {
-	while (port--)
-		while (i--) {
-		while (!list_empty(&ftd->fl_list))
-	while (len > 0) {
-	while (tmp != &urbp->td_list) {
-	while (!list_empty(&qh->queue)) {
-		while ((qh = uhci->next_qh) != uhci->skelqh[i]) {
-	while (prev->qh_next.qh != qh)
-	while (here.ptr && here.ptr != ptr) {
-	while (q->ptr) {
-		while (here.ptr) {
-		while (here.ptr && qh != here.qh) {
-		while (q.ptr != NULL) {
-	while (port--)
-		while (i--) {
-	while (port--) {
-	while (i--) {
-	while (i--) {
-		while (__raw_readl(base + creg),
-		while (seg != first_seg) {
-	while (num_segs > 0) {
-			while (prev) {
-			while (!list_empty(ep))
-	while (1) {
-		while (port_index--) {
-	while (port_index--) {
-	while (port_index--) {
-	while (td && td->td_dma != td_dma)
-	while (*prev && *prev != td)
-	while (!list_empty(&ep->active))
-			while (time_before(jiffies, t1)) {
-		while (limit > 0) {
-	while (port--) {
-	while (--tmp) {
-	while (!clkrdy && time_before_eq(jiffies, t)) {
-	while (1) {
-	while (1) {
-	while (buf) {
-		while (tmp != head) {
-	while (array[i] != 0) {
-			while (!(__raw_readl(CFGCHIP2) & CFGCHIP2_PHYCLKGD))
-		while (*prev && ((temp = *prev) != ep))
-			while (last_ep->next)
-			while (here && ep != here) {
-	while (time_before(jiffies, t)) {
-	while (--retries) {
-	while (time_before_eq(jiffies, t)) {
-	while (val--) {
-	while ((ehci_read(hcd->regs, EHCI_INSNREG05_ULPI)
-	while (i<8)
-	while (i<8)
-	while (left)
-	while (i<len)
-			while (musb_readb(musb->mregs, MUSB_DEVCTL) & 0x80) {
-			while (musb_readb(musb->mregs, MUSB_DEVCTL) &
 			"Stopping DMA controller while channel active\n");
-		while (!(bfin_read_USB_DMA_INTERRUPT() & (1 << epnum)))
-		while (!(bfin_read_USB_DMA_INTERRUPT() & (1 << epnum)))
-	while ((__raw_readl(USB_PHY_CTRL) & USBPHY_PHYCLKGD) == 0)
-		while (power & MUSB_POWER_SUSPENDM) {
-			while (time_before(jiffies, musb->rh_timer))
-		while (queue) {
-	while (!list_empty(&ep->req_list)) {
-		while (!(devctl & MUSB_DEVCTL_SESSION)) {
-		while (devctl & MUSB_DEVCTL_SESSION) {
-	while (!(__raw_readl(CFGCHIP2) & CFGCHIP2_PHYCLKGD))
-	while (csr & MUSB_TXCSR_FIFONOTEMPTY) {
-		while (!list_empty(&hep->urb_list)) {
-		while (!list_empty(&hep->urb_list))
-	while (!(musb_readb(addr, MUSB_ULPI_REG_CONTROL)
-	while (!(musb_readb(addr, MUSB_ULPI_REG_CONTROL)
-	while (reg) {
-	while (reg) {
-		while ((musb_readw(regs, MUSB_CSR0)
-	while (ms--) {
-	while ((cap & EHCI_USBLEGSUP_BIOS) && (msec > 0)) {
-	while (n > 0) {
-	while (readl(&ehci_debug->control) & DBGP_ENABLED) {
-		while (1) {
-	while (record) {
-	while (!list_empty(&garmin_data_p->pktlist)) {
-	while (n < size) {
-	while (offs < count) {
-	while ((pkt = pkt_pop(garmin_data_p)) != NULL) {
-	while (offs < count) {
-		while (*s >= '0' && *s <= '9')
-	while (count) {
-		while (todo > 0) {
-	while (record) {
-	while (record && be32_to_cpu(record->addr) < 0x1b40)
-	while (record) {
-	while (record && be32_to_cpu(record->addr) < 0x1b40) {
-	while (count) {
-		while (i < urb->actual_length) {
-	while (record) {
-	while (1) {
-		while (1) {
-	while ((long)(jiffies - timeout) < 0 && !signal_pending(current)
-	while ((urb = usb_get_from_anchor(&portdata->delayed))) {
-	while ((factor > 0xfff0) && divisor) {
-	while (!multi_change) {
-		while ((urb = usb_get_from_anchor(&portdata->delayed))) {
-	while (1) {
-		while (1) {
-	while (retries--) {
-		while ((position < length) &&
-	while (1) {
-	while (1) {
-		while (1) {
-	while (bufferLength > 0) {
-	while (length > 0) {
-	while (length > 0) {
-	while (length > 0) {
-			while (tmp >= 256) {
-	while (1) {
-	while (1) {
-	while (count > 0) {
-		while (oob_priv->dp_write_urb_in_use) {
-	while (count > 0 && ret == 0) {
-		while (priv->dp_write_urb_in_use &&
-	while (oob_priv->dp_write_urb_in_use) {
-	while (time_before(jiffies, timeout) && !priv->dp_transmit_idle) {
-			while (--i >= 0)
-	while (1) {
-	while (length) {
-	while (length) {
-	while ((long)(jiffies - timeout) < 0 && !signal_pending(current)
-		while (1) {
-	while (cnt < ULPI_IO_TIMEOUT_USEC) {
-	while (cnt < ULPI_IO_TIMEOUT_USEC) {
-	while (seq[0] >= 0) {
-	while (cnt < LINK_RESET_TIMEOUT_USEC) {
-	while (cnt < PHY_SUSPEND_TIMEOUT_USEC) {
-	while (cnt < PHY_RESUME_TIMEOUT_USEC) {
-	while (cnt < PHY_SUSPEND_TIMEOUT_USEC) {
-	while (temp & 0x40)
-			while (!(twl4030_usb_read(twl, PHY_CLK_CTRL_STS) &
-	while (usec--) {
-	while (length) {
-	while (length) {
-	while (ndesc-- != 0) {
-	while (ndesc-- != 0) {
-	while (bytes < avail) {
-	while (bytes < avail) {
-	while (MON_RING_EMPTY(rp)) {
-			while (n-- != 0)
-	while ((ep = mon_text_fetch(rp, mbus)) == NULL) {
-	while (!list_empty(&rp->e_list)) {
-	while (!list_empty(&mon_buses)) {
-	while (buflen > 2) {
-	while (writecount < count) {
-	while (remaining > 0) {
-	while (remaining > 0) {
-			while (i != 0) {
-	while (buflen > 0) {
-		while (skb2) {
-	while (i--) {
-	while (!list_empty(&dev->rx_reqs)) {
-	while (!list_empty(&dev->tx_reqs)) {
-	while (!list_empty(&dev->rx_reqs)) {
-	while ((buf = rndis_get_next_response(configNr, &length)))
-			while (i) {
-	while (1) {
-	while (len != 0 && (c = (u8) *s++) != 0) {
-	while (!list_empty (&ep->queue)) {
-	while (!list_empty(&ep->queue)) {
-	while (epout_has_pkt(ep)) {
-	while (epout_has_pkt(ep)) {
-		while (!ep_is_empty(ep))
-	while (!ep_is_empty(ep)) {
-	while (likely(count >= 2)) {
-	while (!(net2272_ep_read(ep, EP_STAT0) & (1 << BUFFER_FULL))) {
-	while (!list_empty(&ep->queue)) {
-		while (!list_empty(&ep->queue)) {
-	while (--i >= 0) {
-	while (--i >= 0) {
-	while ((pch_udc_readl(dev, UDC_CSR_BUSY_ADDR) & UDC_CSR_BUSY)
-		while (!(pch_udc_read_ep_status(ep) & UDC_EPSTS_MRXFIFO_EMP) &&
-	while ((pch_udc_read_ep_control(ep) & UDC_EPCTL_NAK) && --loopcnt) {
-	while ((pch_udc_read_ep_control(ep) & UDC_EPCTL_S) && --count)
-	while (!list_empty(&ep->queue)) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (!list_empty(&ep->queue)) {
-	while (fsl_readl(&dr_regs->usbcmd) & USB_CMD_CTRL_RESET) {
-		while (fsl_readl(&dr_regs->endptflush)) {
-	while (fsl_readl(&dr_regs->endpointprime)) {
-	while (!list_empty(&ep->queue)) {
-		while (readl(&dev->op_regs->endptflush)) {
-	while (readl(&dev->op_regs->usbcmd) & CMD_RST) {
-	while (readl(&dev->op_regs->endptsetupstat)) {
-	while (readl(&dev->op_regs->endptprime)) {
-		while (bh->state != BUF_STATE_EMPTY) {
-	while (amount_left_to_write > 0) {
-	while (amount_left > 0) {
-	while (rc != 0) {
-	while (rc != 0) {
-	while (bh->state != BUF_STATE_EMPTY) {
-	while (bh->state != BUF_STATE_EMPTY) {
-	while (bh->state != BUF_STATE_EMPTY) {
-	while (bh->state != BUF_STATE_FULL) {
-	while (common->state != FSG_STATE_TERMINATED) {
-	while (!list_empty(&ep->queue)) {
 	do {} while (!(__raw_readl(imx_usb->base + USB_DADR) & DADR_CFG));
 		do {} while (__raw_readl(imx_usb->base + USB_DADR) & DADR_BSY);
 				do {} while (__raw_readl(imx_usb->base
-	while (!list_empty(&imx_ep->queue)) {
-	while (count--) {
-	while (__raw_readl(imx_ep->imx_usb->base + USB_EP_FSTAT(EP_NO(imx_ep)))
-	while (!completed) {
-	while (!imx_ep_empty(imx_ep)) {
-	while (!(r8a66597_read(r8a66597, ep->fifoctr) & FRDY)) {
-	while (!list_empty(&ep->queue)) {
-	while (!list_empty(&hsep->queue)) {
-	while (count--)
-	while (rcnt-- != 0) {
-	while (ep_intr) {
-		while (bh->state != BUF_STATE_EMPTY) {
-	while (amount_left_to_write > 0) {
-	while (amount_left > 0) {
-	while (rc != 0) {
-	while (rc != 0) {
-	while ((bh = fsg->next_buffhd_to_drain)->state != BUF_STATE_EMPTY ||
-	while (bh->state != BUF_STATE_EMPTY) {
-	while (bh->state != BUF_STATE_EMPTY) {
-		while (bh->state != BUF_STATE_EMPTY) {
-		while (bh->state != BUF_STATE_FULL) {
-		while (fsg->cbbuf_cmnd_size == 0) {
-	while (fsg->state != FSG_STATE_TERMINATED) {
-	while (likely(count--))
-		while (likely(size-- != 0)) {
-	while (!list_empty(&ep->queue)) {
-	while (!list_empty(&ep->queue)) {
-		while (rxcount--)
-	while (rescans--) {
-	while (hw_cread(CAP_USBCMD, USBCMD_RST))
-		while (hw_cread(CAP_ENDPTFLUSH, BIT(n)))
 	} while (hw_cread(CAP_ENDPTSTAT, BIT(n)));
-	while (hw_cread(CAP_ENDPTPRIME, BIT(n)))
-	while (hw_cread(CAP_ENDPTPRIME, ~0))
-	while (!list_empty(&mEp->qh.queue)) {
-		while (max >= 2) {
-	while (max--)
-		while (avail >= 2) {
-	while (avail--)
-				while (avail--)
-		while (omap_readw(UDC_TXDMA_CFG) & mask)
-		while (omap_readw(UDC_RXDMA_CFG) & mask)
-	while (!list_empty(&ep->queue)) {
-		while (req->length + 3 < midi->buflen) {
-	while (likely(count--))
-		while (likely (count-- != 0)) {
-	while (UDCCS0 & UDCCS0_RNE) {
-	while (!list_empty(&ep->queue)) {
-		while (((*ep->reg_udccs) & UDCCS_BO_RNE) != 0)
-	while (*src) {
-	while (!READ_COND) {
-	while (!WRITE_COND) {
-	while (size > 0) {
-	while (!list_empty(&queue->irqqueue)) {
-	while (!list_empty(pool)) {
-	while (!list_empty(pool)) {
-	while (!list_empty(queue)) {
-	while (!list_empty(head)) {
-	while (count--)
-	while (likely(!list_empty(&dev->rx_reqs))) {
-	while ((current_rx_bytes || likely(!list_empty(&dev->rx_buffers)))
-	while (likely(!list_empty(&dev->tx_reqs)) && len) {
-	while (likely(!(list_empty(&dev->rx_buffers)))) {
-	while (likely(!(list_empty(&dev->rx_reqs_active)))) {
-	while (likely(!(list_empty(&dev->tx_reqs_active)))) {
-	while (!list_empty(&dev->tx_reqs)) {
-	while (!list_empty(&dev->rx_reqs)) {
-	while (!list_empty(&dev->rx_buffers)) {
-			while (!list_empty(&dev->tx_reqs)) {
-			while (!list_empty(&dev->rx_reqs)) {
-	while (count >= 4) {
-	while (count >= 4) {
-	while (!list_empty (&ep->queue)) {
-	while (!list_empty (&ep->queue)) {
-		while (!list_empty (&ep->queue)) {
-	while ((curr_dqh->curr_dtd_ptr == curr_dtd->td_dma)) {
-			while (readl(&udc->op_regs->epstatus) & bit_pos)
-			while (readl(&udc->op_regs->epprime) & bit_pos) {
-		while (readsafe == 0) {
-				while (curr_dtd->size_ioc_sts
-			while ((curr_dtd_ptr != req->head->td_dma)) {
-		while (readl(&udc->op_regs->epflush)) {
-	while (readl(&udc->op_regs->usbcmd) & USBCMD_CTRL_RESET) {
-	while (!list_empty(&ep->queue)) {
-	while (readl(&udc->op_regs->epprime) & 0xFFFFFFFF) {
-	while (*sp) {
-	while (*sp) {
-	while (!list_empty(&cdev->configs)) {
-		while (!list_empty(&c->functions)) {
-	while (td && !(td->status & AMD_BIT(UDC_DMA_IN_STS_L))) {
-	while (td && !(td->status & AMD_BIT(UDC_DMA_IN_STS_L))) {
-	while (!list_empty(&ep->queue)) {
-	while (!list_empty(&ep->queue)) {
-	while (!(bdstatus & R_E) && !(bdstatus & BD_LENGTH_MASK) && !stop) {
-	while (!(bdstatus & R_E) && length) {
-		while (!(bdstatus & R_E) && length) {
-	while (!(bdstatus & T_R) && (bdstatus & ~T_W)) {
-	while (!(bdstatus & T_R) && (bdstatus & ~T_W)) {
-	while (!(bdstatus & R_E) && length) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (nr_busy > 0) {
-	while ((epctrl & USBA_TX_PK_RDY) && !(epstatus & USBA_TX_PK_RDY)) {
-	while (!list_empty (&ep->queue)) {
-	while (!list_empty(&ep->queue)) {
-	while (!usb_trylock_device(udev)) {
-	while (size >= sizeof(struct usb_descriptor_header)) {
-		while (++i < n) {
-	while ((p = strsep(&data, ",")) != NULL) {
-	while (leng && start <= end) {
-	while (size > 0) {
-	while (size > 0) {
-	while (size > 0) {
-	while (!list_empty(&hub->tt.clear_list)) {
-	while (1) {
-	while (!list_empty(&anchor->urb_list)) {
-	while (!list_empty(&anchor->urb_list)) {
-	while ((victim = usb_get_from_anchor(anchor)) != NULL) {
-	while (!list_empty(&anchor->urb_list)) {
-	while (n--) {
-	while (!list_empty (&ep->urb_list)) {
 		/* The list may have changed while we acquired the spinlock */
-		while (io->entries--)
-	while (i < entries && !io->status) {
-				while (--n >= 0)
-	while (!list_empty(list)) {
-	while (as) {
-	while (!list_empty(&udev->filelist)) {
-	while (pos < len) {
-		while (l--) {
-	while ((urb = usbatm_pop_urb(&instance->rx_channel))) {
-	while (skb) {
-	while (size > 3) {
-	while (!kthread_should_stop()) {
-	while (itr < top) {
-	while (itr_size > 0) {
-	while (itr < top) {
-	while (atomic_read(&rpipe->segs_available) > 0
-	while (size) {
-	while (itr < top) {
-	while (!list_empty(&dep->request_list)) {
-	while (!(time_after(jiffies, timeout))) {
-	while (left > 0) {
-	while (left > 3) {
-	while (buffer_icap_busy(base_address)) {
-	while (buffer_icap_busy(base_address)) {
-	while (remaining_words > 0) {
-		while (write_fifo_vacancy == 0) {
-		while ((write_fifo_vacancy != 0) &&
-	while (fifo_icap_busy(drvdata)) {
-	while (remaining_words > 0) {
-		while (words_to_read > 0) {
-			while (read_fifo_occupancy == 0) {
-			while (read_fifo_occupancy != 0) {
-	while (!(c1 & 0x80) && time_before(jiffies, timeout)) {
 		 * while not ready...
-		while (!(c1 & 0x80) && time_before(jiffies, timeout1))
-	while (--n && (command)) \
-		while (sonypi_call2(0x91, 0x1))
-	while (kfifo_out_locked(&sonypi_device.input_fifo, (unsigned char *)&kp,
-	while (ret < count &&
-	while (check_ioport && check->port1) {
-	while (ioport_list->port1) {
-	while (irq_list->irq) {
-	while ( (dev = pci_get_class(PCI_CLASS_OTHERS << 16, dev))) {
-	while (readb(apbs[IndexCard].RamIO + DATA_FROM_PC_READY) != 0) {
-	while(1) {
-	while (status < 0) {
-	while (status <= 0) {
-	while (retval == 0) {
-		while (i < count && dtlk_readable()) {
-	while (1) {
-		while (i < count && !get_user(ch, buf) &&
-	while (*t != '\r') {
-	while (n-- > 0)
-	while (count > 0) { \
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (size) {
-	while (*link) {
-	while (!mmtimer_setup(x->cpu, COMPARATOR, expires,
-		while (n) {
-	while (nbytes--) {
-	while (nbytes--) {
-	while (nbytes) {
-	while (nbytes) {
-	while (nbytes) {
-	while (nbytes > 0) {
-	while (count > 0) {
-	while (op_struct_list) {
-	while (link->open) {
-	while ((tmp = (tmp >> 1)) > 0)
-	while (test_bit(LOCK_MONITOR, (void *)&dev->flags))
-	while (link->open) {
-	while (read_reg(info, (unsigned char)(channel+STAR)) & BIT2) {
-	while((action = bh_action(info)) != 0) {
-	while (fifo_count) {
-	while (info->tx_count && fifo_count) {
-	while ((gis = read_reg(info, CHA + GIS))) {
-		while (info->tx_active) {
-		while ((info->tx_count || info->tx_active) &&
-	while(info && info->line != line)
-	while( info ) {
-		while( current_dev->next_device )
-	while(info) {
-	while(mgslpc_device_list)
-	while(end_time-- && !info->irq_occurred) {
-	while(count) {
-	while (lp >= 0) {
-		while (arg > (1<<tmp))
-	while (rtc_is_updating() != 0 &&
-	while (count) {
-	while (count) {
-	while ((i >= sizeof(event)) && !queue_empty(&as->queue)) {
-			while (wait_event_freezable(apm_suspend_waitqueue,
-	while ((str != NULL) && (*str != '\0')) {
-	while (!(status < 0)) {
-	while (bytes_read == 0) {
-	while (bytes_written < count) {
-	while (uCount-- != 0) {
-	while (uCount-- != 0) {
-	while (uCount-- != 0) {
-	while (uCount-- != 0) {
-	while (uCount-- != 0) {
-	while (atomic_read(&panic_done_count) != 0)
-	while (atomic_read(&panic_done_count) != 0)
-		while (!data_to_read) {
-	while (atomic_read(&set_timeout_tofree))
-	while (atomic_read(&dummy_count) > 0) {
-	while (rcvrs) {
-	while (user->gets_events && !list_empty(&intf->waiting_events)) {
-	while (rcvrs) {
-	while (smi->proc_entries) {
-		while (ipmi_find_bmc_prod_dev_id(&ipmidriver.driver,
-		while (*p) {
-	while (si_sm_result == SI_SM_CALL_WITHOUT_DELAY)
-		while (result != SI_SM_IDLE) {
-		while (result != SI_SM_IDLE) {
-	while (!kthread_should_stop()) {
-			while (idx--) {
-	while ((ival >= 0) && isspace(str[ival])) {
-		while (s) {
-	while ((dev = dmi_find_device(DMI_DEV_TYPE_IPMI, NULL, dev))) {
-	while (to_clean->curr_msg || (to_clean->si_state != SI_NORMAL)) {
-	while (to_clean->curr_msg || (to_clean->si_state != SI_NORMAL)) {
-	while (to_clean->curr_msg || (to_clean->si_state != SI_NORMAL)) {
-	while (bn) {
-		while (--i >= 0) {
-	while (stask_active)
-	while (size < count &&
-	while (count < len - 1) {
 				"IBF timeout (while writing data)\n");
-	while (cursor < to) {
-	while (count > 0) {
-	while (count > 0) {
-	while (count) {
-		while (low_count > 0) {
-		while (count > 0) {
-	while (count > 0) {
-		while (count > 0) {
-	while (count-- > 0 && i < 65536) {
-	while (count-- > 0 && i < 65536) {
-	while (count) {
-	while (j < (pg_start + mem->page_count)) {
-	while (readl(intel_private.registers+I830_HIC) & (1<<31)) {
-	while (j < (io_pg_start + I460_IOPAGES_PER_KPAGE * mem->page_count)) {
-	while (readb(serverworks_private.registers+SVWRKS_POSTFLUSH) == 1) {
-	while (readl(serverworks_private.registers+SVWRKS_DIRFLUSH) == 1) {
-	while (j < (pg_start + mem->page_count)) {
-	while (ttl-- && pos >= 0x40) {
-	while (j < (io_pg_start + io_pg_count)) {
-	while (j < (pg_start + mem->page_count)) {
-	while (j < (pg_start + mem->page_count)) {
-	while (j < (io_pg_start + io_pg_count)) {
-        while (ttl-- && pos >= 0x40) {
-	while (j < (pg_start + mem->page_count)) {
-		while (!cap_ptr) {
-	while (j < (pg_start + mem->page_count)) {
-	while (curr != NULL) {
-	while (curr != NULL) {
-	while (controller != NULL) {
-	while (client) {
-	while (memory) {
-	while (clients != NULL) {
-	while (clients != NULL) {
-	while (client != NULL) {
-	while (controller != NULL) {
-	while ((memory > maxes_table[index].mem) && (index < 8))
-	while (bytes_done < count) {
-	while (bytes_done < count) {
-	while (buf) {
-		while (!virtqueue_get_buf(vq, &len))
-	while ((buf = virtqueue_get_buf(port->out_vq, &len))) {
-	while (!virtqueue_get_buf(out_vq, &len))
-	while ((buf = virtqueue_detach_unused_buf(port->in_vq)))
-	while ((buf = virtqueue_detach_unused_buf(port->in_vq)))
-	while ((buf = virtqueue_get_buf(vq, &len))) {
-		while ((buf = virtqueue_get_buf(portdev->c_ivq, &len)))
-		while ((buf = virtqueue_detach_unused_buf(portdev->c_ivq)))
-				while (inb_p(SMBHSTSTS(priv)) &
-		while (s > 0 && name[0]) {
-		while (msg->len && len) {
-			while (msg->len && (IN32(id, I2CTFDR) < FIFO_SIZE)) {
-	while (id->msg->len && IN32(id, I2CTFDR) < FIFO_SIZE) {
-	while (i < num) {
-	while (davinci_i2c_read_reg(dev, DAVINCI_I2C_STR_REG)
-	while ((stat = davinci_i2c_read_reg(dev, DAVINCI_I2C_IVR_REG))) {
-			while (--i >= 0)
-	while (!(status & SMSTA_XEN) && timeout--) {
-	while (num--) {
-	while ((i > 0) && (readl(_IBMR(i2c)) & 0x1) == 0) {
-	while (timeout-- && readl(_ISR(i2c)) & (ISR_IBB | ISR_UB)) {
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-	while (1) {
-	while (1) {
-	while (timeout-- && readl(_ISR(i2c)) & (ISR_IBB | ISR_UB)) {
-	while (i2c->msg_num > 0 && --timeout) {
-	while (1) {
-	while (iface->state != state_idle)
-	while ((iface = scx200_acb_list) != NULL) {
-	while (readl(i2c->regs + MXS_I2C_QUEUESTAT)
-	while (1) {
-	while (read_MASTER_STAT(iface) & BUSBUSY)
-	while (!iface->result) {
-	while (read_MASTER_STAT(iface) & BUSBUSY)
-	while (!iface->result) {
-	while (timeout > 0 &&
-	while (timeout > 0 &&
-	while (timeout > 0 &&
-	while ((inb(smbus->base + AMD_EC_SC) & AMD_EC_SC_IBF) && --timeout)
-	while ((~inb(smbus->base + AMD_EC_SC) & AMD_EC_SC_OBF) && --timeout)
-	while (readl(drv_data->reg_base + MV64XXX_I2C_REG_CONTROL) &
-		while ((RD(adap, PSC_SMBPCR) & PSC_SMBPCR_DC) != 0)
-	while (i < (len - 1)) {
-	while (i < (len-1)) {
-	while ((RD(priv, PSC_SMBSTAT) & PSC_SMBSTAT_SR) == 0)
-	while ((RD(priv, PSC_SMBSTAT) & PSC_SMBSTAT_SR) == 0)
-	while (cdiv > 255) {
-	while (length--) {
@@ -445,10 +445,8 @@ static int stu300_wait_while_busy(struct
-		while (!time_after(jiffies, timeout)) {
-	while (i < ARRAY_SIZE(stu300_clktable) - 1 &&
-	while ((iface->msgs_push < iface->msgs_num)
-	while (i2c_rd32(iface, S6_I2C_TXFLR) > 0)
-	while (i2c_rd16(iface, S6_I2C_STATUS) & (1 << S6_I2C_STATUS_ACTIVITY))
-	while ((res = platform_get_resource(dev, IORESOURCE_IRQ, k))) {
-	while (k >= 0) {
-	while ((in_8(&iic->directcntl) & mask) != mask){
-	while ((in_8(&iic->extsts) & EXTSTS_BCS_MASK) != EXTSTS_BCS_FREE){
-		while (in_8(&iic->sts) & STS_PT){
-		while (!(readb(i2c->base + MPC_I2C_SR) & CSR_MIF)) {
-	while (readb(i2c->base + MPC_I2C_SR) & CSR_MBB) {
-		while ((adap_info->pch_data[i].pch_i2c_xfer_in_progress)) {
-	while (timeout-- > 0) {
-	while (--idx >= 0)
-	while (timeout-- > 0) {
-		while (!time_after(jiffies, timeout)) {
-			while (!(readl(dev->virtbase + I2C_RISR)
-	while (1) {
-	while (len--) {
-	while (err && tries--) {
-	while ((fifo_space >= 2) && (first || (i2c->nmsgs > 1))) {
-	while ((ret1 = readl(i2c->base + IC_ENABLE_STATUS) & 0x1)
-	while (i--)
-	while (tptr < num) {
-	while (tptr < num) {
-	while (ioread16(dev->base + SMCR) & SMCR_BBSY) {
-		while (!(omap_i2c_read_reg(dev, OMAP_I2C_SYSS_REG) &
-	while (omap_i2c_read_reg(dev, OMAP_I2C_STAT_REG) & OMAP_I2C_STAT_BB) {
-		while (con & OMAP_I2C_CON_STT) {
-	while (--timeout && !(*stat & OMAP_I2C_STAT_XUDF)) {
-	while ((stat = (omap_i2c_read_reg(dev, OMAP_I2C_STAT_REG))) & bits) {
-			while (num_bytes) {
-			while (num_bytes) {
-	while (i2c_readl(i2c_dev, I2C_FIFO_CONTROL) &
-	while (length--) {
-	while (length--) {
-	while ((++timeout < MAX_TIMEOUT) &&
-	while (dw_readl(dev, DW_IC_STATUS) & DW_IC_STATUS_ACTIVITY) {
-		while (buf_len > 0 && tx_limit > 0 && rx_limit > 0) {
-	while (!getscl(adap)) {
 		 * chips may hold it low ("clock stretching") while they
-	while (count > 0) {
-	while (count > 0) {
-	while (!(status & I2C_PCF_BB) && --timeout) {
-	while ((*status & I2C_PCF_PIN) && --timeout) {
-	while ((state = pca_status(adap)) != 0xf8) {
-	while (curmsg < num) {
-	while (i-- > 0) {
-	while (id->name[0]) {
-	while (strlen(eids->sig)) {
-	while (--i >= 0)
-	while (pctlops->list_groups(pctldev, group_selector) >= 0) {
-	while (ops->list_functions(pctldev, selector) >= 0) {
-	while (pmxops->list_functions(pctldev, func_selector) >= 0) {
-	while (ops->list_groups(pctldev, selector) >= 0) {
-	while (count--) {
-	while (count--) {
-	while (count--) {
-	while (count--) {
-	while (1) {
-	while ((z = zorro_find_device(ZORRO_WILDCARD, z))) {
-	while (thislen > 0) {
-	while (cle->id_model) {
-	while (1) {
-	while (len) {
-	while (time_before(jiffies, timeout)) {
-	while (bcount) {
-	while (done < count) {
-	while (done < count) {
-	while (tape->buffer_size > 0xffff) {
-	while ((shwt * 4 + wt + (wt ? 2 : 3)) * cycle < t->cycle)
-	while (count--)
-	while (count--) {
-	while (len > 0) {
-	while (lap->device) {
-	while((pdev=pci_get_device(PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82454NX, pdev))!=NULL)
-		while ((stat & ATA_BUSY) && (count++ < 100)) {
-	while ((ioc4_dma & IOC4_S_DMA_STOP) && (count++ < 200)) {
-	while ((cnt++ < 200) && (!valid)) {
-	while (i && sg_dma_len(sg)) {
-		while (cur_len) {
-	while (retries-- && ((ireason & ATAPI_COD) == 0 ||
 		printk(KERN_ERR PFX "%s: (IO,CoD != (0,1) while issuing "
-		while (hi > lo) {
-		while (hi > lo) {
-		while (stat & 0x03) {
-		while (cur_len) {
-	while (count--)
-	while (count--) {
-	while (st->name) {
-	while (g->name || (d && d->name)) {
-	while (count && isspace(*s)) {
-		while (n > 0) {
-			while (n > 0 && *p != ':') {
-			while (n > 0 && isspace(*p)) {
-	while (p->name != NULL) {
-	while (p->name != NULL) {
-	while (s != end && *s == ' ')
-	while (s != end && *s) {
-	while (p != end)
-		while ((stat = tp_ops->read_status(hwif)) & ATA_BUSY) {
-	while (timeout--) {
-	while (lap->device) {
-	while (i && sg_dma_len(sg)) {
-		while (cur_len) {
-	while (readl(&dma->status) & RUN)
-	while (i && sg_dma_len(sg)) {
-		while (cur_len) {
-		while (cur_len) {
-	while ((dev = pci_get_device(PCI_VENDOR_ID_CYRIX, PCI_ANY_ID, dev)) != NULL) {
-	while (bus->parent)
-	while (retry--) {
-	while (retry--) {
-	while (port->rport_task) {
-	while (offset < length) {
-	while (payload->counter < scount && (char *)pl[payload->counter]) {
-	while (size) {
-	while (size) {
-	while (1) {
-	while (i--)
-	while ((dev = bus_find_device(&ap_bus_type, NULL, NULL,
-		while ((dcssblk_segments[j] != ',') &&
-	while (cqr->refers != NULL) {
-	while (cqr->refers != NULL) {
-	while (erp_done != erp) {
-	while (!list_empty(&active)) {
-		while (seg_len) {
-			while (seg_len) {
-	while (from <= to) {
-	while (rest > 0) {
-	while (rest > 0) {
-	while (dasd_eer_get_free_bytes(eerb) < count + sizeof(count)) {
-		while (!tc) {
-	while (fdata->start_unit <= fdata->stop_unit) {
-		while ((part = disk_part_iter_next(&piter)))
-		while ((part = disk_part_iter_next(&piter)))
-	while ((retries < 5) && (cqr->status == DASD_CQR_IN_IO)) {
-		while ((req = blk_fetch_request(block->request_queue)))
-	while ((req = blk_peek_request(queue))) {
-	while ((req = blk_fetch_request(block->request_queue)))
-	while (act <= end) {
-	while (act <= end) {
-	while (act <= last) {
-	while (add_bit > 0) {
-		while (bytes > 0) {
-	while (i--) {
-	while (1) {
-	while (from <= to) {
-		while (*parsestring) {
-	while (cqr->refers != NULL) {
-	while (priv->buffer_free) {
-	while (sclp_con_queue_running) {
-			while (list_empty(&sclp_con_pages)) {
-	while (lines < RAW3215_MAX_NEWLINE && ix != raw->head) {
-	while (len > 0) {
-	while (raw->count > 0) {
-	while (RAW3215_BUFFER_SIZE - raw->count < length) {
-	while (length > 0) {
-		while (1) {
-	while (count > 0) {
-			while (list_empty(&sclp_tty_pages)) {
-	while (count-- > 0) {
-	while (request->status != SCLP_REQ_DONE &&
-		while (--size > cp->cline->len)
-	while (count-- > 0) {
-	while (!cp->write) {
-	while (cp->update_flags != 0) {
-	while (!list_empty(&rp->req_queue)) {
-			while (!raw3270_request_final(rq)) {
-		while (!test_and_clear_bit(RAW3270_FLAGS_ATTN, &rp->flags))
-	while (!list_empty(&rp->view_list)) {
-			while (list_empty(&sclp_vt220_empty)) {
-	while (sclp_vt220_queue_running) {
-	while (!list_empty(&sclp_req_queue)) {
-	while (sclp_running_state != sclp_running_state_idle) {
-	while (remaining > 0) {
-			while (time_before(jiffies, wait))
-		while (sclp_init_req.status != SCLP_REQ_DONE &&
-	while (ptr->cda) {
-	while (urd->open_flag) {
-	while (zfcpdump_save_areas[i]) {
-		while (len-- > 0)
-	while (pages--)
-	while (lines--)
-		while (line->len < tp->cx) {
-	while (line->len < tp->cx) {
-	while (k--)
-	while (n-- > 0) {
-	while (line->len > tp->cx && n-- > 0) {
-	while (qeth_ipa_rc_msg[x].rc != rc)
-	while (qeth_ipa_cmd_names[x].cmd != cmd)
-				while (j > 0)
-		while (c) {
-		while (cnt-- > 0)
-	while (iob[index].state == BUF_STATE_PROCESSED) {
-	while (skb) {
-	while (skb) {
-	while (known_devices[i][QETH_DEV_MODEL_IND]) {
-		while (!atomic_read(&reply->received)) {
-	while (j > 0) {
-	while (i > 0) {
-		while (buffer->element[e].addr) {
-	while (length > 0) {
-	while (atomic_dec_return(&queue->state)) {
-	while (skb_len) {
-	while (*p && (!isspace(*p)))
-	while (1) {
-	while ((skb = skb_dequeue(&conn->collect_queue))) {
-	while ((skb = skb_dequeue(q))) {
-	while (i < 8)
-	while (i < 8)
-	while (!list_empty(&iucv_connection_list)) {
-	while ((skb = skb_dequeue(q))) {
-	while ((skb = skb_dequeue(&ch->io_queue))) {
-		while ((skb = skb_dequeue(&ch->collect_queue))) {
-	while ((skb = skb_dequeue(&ch->io_queue))) {
-	while ((skb = skb_dequeue(&ch->collect_queue))) {
-		while ((pskb->len > 0) && !pdu_last_seen) {
-	while ((fsm_getstate(grp->fsm) != MPCG_STATE_FLOWC) &&
-	while (budget) {
-	while (1) {
-		while (card->rx.b_count) {
-		while ((pk_ind) && (held_skb != NULL)) {
-                        while (p_buf!=NULL) {
-                        while (p_buf!=NULL) {
-                while (p_buf!=NULL) {
-                while (p_buf!=NULL) {
-        while (p_this_ccw!=NULL) {
-        while (privptr->p_write_active_first!=NULL) {
-		while (pk_skb != NULL) {
-        while (len_of_data > 0) {
-                        while (p_buf!=NULL) {
-                                while (p_buf!=NULL) {
-                                while (p_buf!=NULL) {
-	while (p_this_ccw!=NULL && p_this_ccw->header.flag!=CLAW_PENDING) {
-        while ( (p_this_ccw!=NULL) && (p_this_ccw->header.flag!=CLAW_PENDING))
-        while ((skb = skb_dequeue(q))) {
-		while (cnt-- > 0)
-	while (!list_empty(&card->ipm_list)){
-		while (channel->io_idx != index) {
-	while (iob[buf_idx].state == LCS_BUF_STATE_PROCESSED) {
-	while (lcs_hdr->offset != 0) {
-	while (*msg && isspace(*msg))
-		while (len--)
-	while (len > 0) {
-	while (*c) {
-	while (ch && (strncmp(ch->id, id, CTCM_ID_SIZE) || (ch->type != type)))
-	while (*c && ctcm_less_than((*c)->id, ch->id))
-	while (*buf) {
-	while (*end) {
-	while (save_cnt)
-	while (!list_empty(tbd_list)) {
-	while (!list_empty(&card->ip_list)) {
-	while (budget) {
-	while (1) {
-		while (card->rx.b_count) {
-	while (length > 0) {
-	while (-1ul < (data.elapsed_time | utilization)) {
-	while (stcrw(&crw) == 0) {
-	while (atomic_read(&chpid_reset_count) != 0) {
-	while ((dev = driver_find_device(&cdriver->driver, NULL, NULL,
-		while (word) {
-	while (!dev_fsm_final_state(cdev) &&
-	while (!dev_fsm_final_state(cdev) &&
-	while (ret == -EBUSY) {
-	while (!dev_fsm_final_state(cdev))
-	while (!dev_fsm_final_state(cdev))
-	while (lpm && ((lpm & mask) == 0))
-	while (req->mask) {
-	while (i > 0) {
-	while (count >>= 1)
-			while (++retries < QDIO_BUSY_BIT_RETRIES) {
-	while (1) {
-	while ((from_ssid < to_ssid) || ((from_ssid == to_ssid) &&
-	while (diff <= max_digit) {
-	while ((parm = strsep(&str, ","))) {
-	while ((i >= 0) && (isspace(buf[i]) || (buf[i] == 0))) {
-		while (val & U300_WDOG_CR_VALID_IND)
-	while (*str)
-	while ((t % timeout_sec) != 0)
-	while (__raw_readl(WDTIM_COUNTER(wdt_base)))
-	while (timeout_value > 0xffff) {
-	while ((__raw_readl(base + OMAP_WATCHDOG_WPS)) & 0x08)
-	while ((__raw_readl(base + OMAP_WATCHDOG_WPS)) & 0x08)
-	while ((__raw_readl(base + OMAP_WATCHDOG_WPS)) & 0x10)
-	while ((__raw_readl(base + OMAP_WATCHDOG_WPS)) & 0x10)
-	while (__raw_readl(base + OMAP_WATCHDOG_WPS) & 0x10)
-	while (__raw_readl(base + OMAP_WATCHDOG_WPS) & 0x10)
-	while (__raw_readl(base + OMAP_WATCHDOG_WPS) & 0x04)
-	while (__raw_readl(base + OMAP_WATCHDOG_WPS) & 0x04)
-	while (__raw_readl(base + OMAP_WATCHDOG_WPS) & 0x01)
-	while (__raw_readl(base + OMAP_WATCHDOG_WPS) & 0x01)
-	while (table->twd) {
-	while ((!found) && (count < 3)) {
-	while (len) {
-			while(!ready){
-	while (time_before(jiffies, myjif) && !rrpriv->fw_running)
-	while (prodidx != eidx){
-		while ((target_config = strsep(&input, ";"))) {
-	while (ret) {
-	while (ret) {
-	while (ret) {
-		while (po) {
-			while (po && po->pppoe_dev != dev) {
-		while (po) {
-		while (++hash < PPPOE_HASH_SIZE) {
-		while (state->ccount != ccount) {
-				while ((ccount & ~0xff) !=
-	while ((skb = skb_dequeue(&ap->rqueue)) != NULL) {
-	while (i < count && buf < buflim) {
-	while (count > 0) {
-	while (dlen >= 2 && dlen >= data[1] && data[1] >= 2) {
-	while (count-- > 0) {
-	while (count-- > 0) {
-	while (count > 8) {
-	while ((skb = skb_dequeue(&ap->rqueue)) != NULL) {
-		while (!ppp->xmit_pending &&
-	while (len > 0) {
-		while (!skb_queue_empty(&pch->file.xq)) {
-		while (pch->file.rq.qlen > PPP_MAX_RQLEN &&
-		while (ppp->file.rq.qlen > PPP_MAX_RQLEN &&
-	while ((skb = ppp_mp_reconstruct(ppp))) {
-    while (indx-- != 0)
-    while (--ilen > 0)
-	while (finchar > LAST)
-		while (size > 0) {
-	while (size > 0) {
-	while (data < skb_tail_pointer(skb)) {
-	while ((skb = skb_dequeue(&netbk->rx_queue)) != NULL) {
-	while ((skb = __skb_dequeue(&rxq)) != NULL) {
-		while (dst_offset < PAGE_SIZE && slot < nr_slots) {
-	while (shinfo->nr_frags-- > start) {
-	while ((nr_pending_reqs(netbk) + XEN_NETBK_LEGACY_SLOTS_MAX
-	while ((skb = __skb_dequeue(&netbk->tx_queue)) != NULL) {
-	while (!kthread_should_stop()) {
-	while (--group >= 0) {
-	while (skb_peek(&cfspi->chead)) {
-	while (nfrms < CFHSI_MAX_PKTS) {
-	while (nfrms < CFHSI_MAX_PKTS) {
-	while (nfrms < CFHSI_MAX_PKTS && *plen) {
-	while (nfrms < cfhsi->rx_state.nfrms) {
-	while (nfrms < CFHSI_MAX_PKTS && *plen) {
-	while (retry) {
-	while ((skb = skb_peek(&ser->head)) != NULL) {
-	while (1) {
-		while (pck_desc->frm_ofs) {
-	while (!(list_empty(&pshm_drv->tx_pend_list))) {
-	while (!(list_empty(&pshm_drv->tx_full_list))) {
-	while (!(list_empty(&pshm_drv->tx_empty_list))) {
-	while (!(list_empty(&pshm_drv->rx_full_list))) {
-	while (!(list_empty(&pshm_drv->rx_pend_list))) {
-	while (!(list_empty(&pshm_drv->rx_empty_list))) {
-	while ((tlv = i2400m_tlv_buffer_walk(i2400m, tlv_hdr, size, tlv))) {
-	while ((tlv = i2400m_tlv_buffer_walk(i2400m, &l3l4_hdr->pl,
-	while (NULL != (tx_msg = i2400m_tx_msg_get(i2400m, &tx_msg_size))) {
-	while (1) {
-		while ((token = strsep(&options, ",")) != NULL) {
-	while (1) {	/* start sending the file */
-		while (i2400m->bus_bm_pokes_table[i].address) {
-	while (1) {
-	while (err != 0 && time_before64(get_jiffies_64(), timeout)) {
-	while (1) {
-	while (offset < ack_size) {
-	while (count--) {
-	while (len-- > 0) {
-		while (bits >= 6) {
-	while (!(elp_reg & ELPCTRL_WLAN_READY)) {
-	while (1) {
-	while (loop++ < INIT_LOOP) {
-	while (chunk_num < fw_data_len / CHUNK_SIZE) {
-	while (nvs_ptr[0]) {
-	while (nvs_bytes_written < nvs_len) {
-	while (!(intr & WL1251_ACX_INTR_CMD_COMPLETE)) {
-	while (1) {
-	while ((skb = skb_dequeue(&wl->tx_queue))) {
-	while ((skb = skb_dequeue(&wl->tx_queue))) {
-	while (length) {
-	while (may_continue > 0) {
-	while (rxq->rxd_count < MWL8K_RX_DESCS && limit--) {
-	while (rxq->rxd_count && limit--) {
-	while (!rc) {
-	while (txq->len > 0 && limit--) {
-	while (i &&
-	while (j > 0) {
-	while (tmp--) {
-	while (p) {
-		while (((s1 = R_REG(&wlc->regs->frmtxstatus)) & TXS_V) == 0) {
-		while (p) {
-	while (cap_id != req_cap_id) {
-		while (bufsize--) {
-	while (i < pcie_serdes_spinwait) {
-	while (i < pcie_serdes_spinwait) {
-	while (size >>= 1)
-		while ((resid > 0) && (p = _dma_getnextrxp(di, false))) {
-	while ((p = _dma_getnextrxp(di, true)))
-	while ((p = dma_getnexttxp(pub, range))) {
-	while (i != end) {
-	while (atomic_read(&wl->callbacks) > 0)
-	while (tmp) {
-	while (!(*fatal)
-	while (len > 0) {
-			while (p->next != NULL)
-		while (p != NULL && p->next != qi)
-	while (wlc->tx_queues != NULL)
-	while (prec_map && (pkt[0] = brcmu_pktq_mdeq(q, prec_map, &prec))) {
-	while (!pktq_empty(&wlc->pkt_queue->q) || brcms_txpktpendtot(wlc) > 0) {
-	while ((p = dma_rx(wlc_hw->di[fifo]))) {
-	while ((p = head) != NULL) {
-	while ((i++ < count)
-	while ((i++ < 10)
-	while ((i++ < 10) && ((R_REG(&regs->ifsstat) & (1 << 8))))
-	while ((abs_val >> nbits) > 0)
-	while (rccal_stepsize >= 0) {
-	while (precision--) {
-	while (read_phy_reg(pi, 0x481) & (0x1 << 9)) {
-		while (iqcomp_sz--) {
-		while (tia_gain > 0) {
-	while (div_frac >= fref3) {
-	while (wlc_lcnphy_iqcal_active(pi)) {
-	while (strptr < 0x8000) {
-		while (1) {
-		while ((*gain_index <= (s32) max_index)
-		while ((op >> 31) == (op >> 30)) {
-	while (size--)
-	while (size--)
-			while (srv->flags & SRFL_MORE) {
-	while (true) {
-	while (eromptr < eromlim) {
 		} while (asd != 0);
-	while (skb) {
-	while (p) {
-	while ((prec = pq->hi_prec) > 0 && pq->q[prec].head == NULL)
 	while ((prec_bmp & (1 << prec)) == 0 || pq->q[prec].head == NULL)
-	while (i < BRCMF_MAX_IFS) {
-	while (--i > 0) {
-	while (ntimes && pend) {
-	while (atomic_read(&sdiodev->suspend) && retry++ != 30)
-		while ((s = strstr(p, "\n")) != NULL) {
-	while (argv[i++])
-	while (idx < 0) {
-	while (mw_uint < QDBM_TABLE_LOW_BOUND) {
-	while (totlen >= 2) {
-	while (!list_empty(&cfg_priv->evt_q_list)) {
-		while (!SBSDIO_CLKAV(clkctl, bus->alp_only)) {
-	while (!(*condition) && (!signal_pending(current) && timeout))
-	while (1) {
-	while (size) {
-	while (c->last != idx) {
-	while ((len =
-	while (dp < varbuf + n)
-	while (enable != ready) {
-	while (1) {
-	while (1) {
-		while (1) {
-		while (baseband_attenuation < 0 && radio_attenuation > 0) {
-		while (baseband_attenuation > 11 && radio_attenuation < 9) {
-	while (i < octets - 1) {
-	while (1) {
-	while (1) {
-		while (hw->cookie == 0) {
-		while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-		while (skb_queue_len(&data->pending) >= WARN_QUEUE)
-		while ((c < 14) && (f != frequency_list_bg[c]))
-		while (j <= t->range) {
-	while (priv->free_data_tx !=
-	while (index =
-	while (length > 0) {
-	while ((void *) h < data + len) {
-	while (curr - priv->index_mgmt_rx < ISL38XX_CB_MGMT_QSIZE) {
-	while (timeout_left > 0) {
-			while (reg = readl(device_base + ISL38XX_CTRL_STAT_REG),
-	while ((i < IW_MAX_BITRATES) && (*data != 0)) {
-	while (data[i]) {
-	while (priv->num_bss_wpa > 0) {
-	while (pos < end) {
-		while (fw_len > 0) {
-			while (_fw_len > 0) {
-			while (isl38xx_in_queue(priv->control_block,
-#define WL3501_NOPLOOP(n) { int x = 0; while (x++ < n) slow_down_io(); }
-	while (full_len) {
-	while (ptr) {
-		while (pktlen > 0) {
-	while (size > 0) {
-	while ((next - this->tx_buffer_head) < this->tx_buffer_size) {
-	while (link->open > 0)
-		while (*ptr) {
-	while (mwifiex_pcie_ok_to_access_hw(adapter)) {
-	while (((wrptr & MWIFIEX_RXBD_MASK) !=
-			while (mwifiex_pcie_ok_to_access_hw(adapter) &&
-	while (adapter->int_status & HOST_INTR_MASK) {
-	while (1) {
-	while (count) {
-	while (tmp_chan_list->chan_number) {
-		while (tlv_idx < max_chan_per_scan
-	while (tlv_buf_left >= sizeof(struct mwifiex_ie_types_header)) {
-	while (bytes_left >= 2) {
-		while (curr_bcn_bytes >= sizeof(struct ieee_types_header)) {
-	while ((resp_len >= sizeof(tlv_hdr->header)) && valid) {
-	while (tlv_buf && tlv_buf_len > 0) {
-		while (length) {
-		while (true) {
-		while (!skb_queue_empty(&list)) {
-	while (time_before_eq(jiffies, timeout)) {
-	while ((iwl_legacy_rx_queue_space(rxq) > 0) && (rxq->free_count)) {
-	while (1) {
-	while (!list_empty(&priv->free_frames)) {
-	while ((iwl_legacy_rx_queue_space(rxq) > 0) && (rxq->free_count)) {
-	while (1) {
-	while (i != r) {
-		while (iwl3945_hw_get_temperature(priv) == 0) {
-	while (size && (PAGE_SIZE - len)) {
-		while (*p && *p != ' ')
-	while (sent_bitmap) {
-	while (tl->queue_count &&
-	while (attempts > 0) {
-	while ((new_ant_type != tbl->ant_type) &&
-	while (low != IWL_RATE_INVALID) {
-	while (high != IWL_RATE_INVALID) {
-	while (index < LINK_QUAL_MAX_RETRY_NUM) {
-		while (repeat_rate > 0 && (index < LINK_QUAL_MAX_RETRY_NUM)) {
-	while (q->write_ptr != q->read_ptr) {
-	while (q->read_ptr != q->write_ptr) {
-	while ((index < table_size) && (rssi < tpt_table[index].min_rssi))
-	while (retries > 0) {
-	while (retries > 1) {
-	while (low != IWL_RATE_INVALID) {
-	while (high != IWL_RATE_INVALID) {
-	while (!list_empty(&priv->free_frames)) {
-	while ((tim_idx < (frame_size - 2)) &&
-	while (i != r) {
-	while (pos < size) {
-	while (1) {
-	while (1) {
-	while (size) {
-	while (1) {
-	while (size) {
-		while (req_size) {
-	while (1) {
-		while (cur->next)
-	while (card->packets) {
-	while (card->packets) {
-	while (1) {
-	while (bytes_remaining > 0) {
-	while ((len = if_spi_prog_main_firmware_check_len(card, &crc_err))) {
-	while (priv->scan_channel < last_channel) {
-	while (tlv_len--)
-		while (left >= 2) {
@@ -175,7 +175,6 @@ static int if_cs_poll_while_fw_download(
-	while (1) {
-	while (list_len) {
-		while (kfifo_len(&priv->event_fifo)) {
-	while (iter && iter->helper) {
-	while (priv->cur_cmd != NULL || priv->dnld_sent != DNLD_RES_RECEIVED) {
-	while (!skb_queue_empty(&rx_queue)) {
-		while ((_skb = skb_dequeue(&rtlusb->tx_skb_queue[i]))) {
-	while (pos < end) {
-	while (pos < end) {
-	while ((regu1 & BIT(5)) && (delay > 0)) {
-	while (fwstatus != FW_STATUS_READY) {
-			while (rate_cfg > 0x1) {
-		while (1) {
-		while (1) {
-	while (wait-- >= 10 && rtlpriv->psc.pwrdomain_protect) {
-	while (remain > 0) {
-	while (true) {
-			while (rtlhal->h2c_setinprogress) {
-	while (!bwrite_sucess) {
-		while (!isfw_read) {
-	while (u1b_tmp & BIT(2)) {
-	while (u4b_tmp != 0 && delay > 0) {
-		while ((!(u4tmp & BIT(11))) && timecount <= timeout) {
-	while (rtlpriv->mac80211.act_scanning && timecount < timeout) {
-	while (rtlphy->lck_inprogress && timecount < timeout) {
-	while (u4btmp != 0 && delay > 0) {
-	while (remain > 0) {
-	while (u1b_tmp & BIT(2)) {
-	while (true) {
-			while (rtlhal->h2c_setinprogress) {
-	while (!bwrite_sucess) {
-		while (!isfw_read) {
-		while (rate_cfg > 0x1) {
-	while ((bytetmp & BIT(0)) && retry < 1000) {
-				while ((retry_cnts++ < 100) &&
-			while (rate_cfg > 0x1) {
-	while (u4b_tmp != 0 && delay > 0) {
-			while (rate_cfg > 0x1) {
-	while ((bytetmp & BIT(0)) && retry < 1000) {
-		while (!(bytetemp & 0x80)) {
-		while (bytetemp & 0x80) {
-	while (!(((value32 >> 24) & 0xff) & 0x80) && (retry < 10000)) {
-	while ((*rtemp8 != 0xFF) && (efuse_addr < efuse_len)) {
-	while (!(0x80 & rtl_read_byte(rtlpriv,
-	while ((0x80 & rtl_read_byte(rtlpriv,
-	while (continual && (efuse_addr < EFUSE_MAX_SIZE)) {
-	while (continual && (efuse_addr <
-	while (continual && efuse_one_byte_read(hw, efuse_addr, &efuse_data)
-		while (!mac->act_scanning &&
-	while (skb_queue_len(&ring->queue)) {
-	while (count--) {
-	while (skb_queue_len(&ring->queue)) {
-			while (skb_queue_len(&ring->queue)) {
-	while (ppsc->rfchange_inprogress) {
-	while (time_before(jiffies, timeout) && (reg & HERMES_CMD_BUSY)) {
-			while (!ctx->done.done && msecs--)
-	while (ch_addr < (addr + len)) {
-	while (time_before(jiffies, timeout) && (reg & HERMES_CMD_BUSY)) {
-	while (((void *) pdr <= end) &&
-	while (((void *) pdi <= end) &&
-	while (((void *) pdi <= pda_end) &&
-	while (((void *) blk <= end) &&
-	while ((blkaddr != BLOCK_END) &&
-	while (((void *) pdr <= pdr_end) &&
-	while (time_before(jiffies, timeout) && (reg & HERMES_CMD_BUSY)) {
-	while ((reg & HERMES_CMD_BUSY) && k) {
-	while ((!(reg & HERMES_EV_CMD)) && k) {
-	while (k && (reg & HERMES_CMD_BUSY)) {
-	while ((!(reg & HERMES_EV_CMD)) && k) {
-	while ((!(reg & HERMES_EV_ALLOC)) && k) {
-	while ((reg & HERMES_OFFSET_BUSY) && k) {
-	while ((reg & (HERMES_OFFSET_BUSY | HERMES_OFFSET_ERR)) && k) {
-	while (events && count--) {
-	while (len--) {
-	while (time_before_eq(jiffies, timeout)) {
-	while ((iwl_rx_queue_space(rxq) > 0) && (rxq->free_count)) {
-	while (1) {
-	while (i != r) {
-	while (trans_pcie->ict_tbl[trans_pcie->ict_index]) {
-	while (tl->queue_count &&
-	while (attempts > 0) {
-	while ((new_ant_type != tbl->ant_type) &&
-	while (low != IWL_RATE_INVALID) {
-	while (high != IWL_RATE_INVALID) {
-	while (index < LINK_QUAL_MAX_RETRY_NUM) {
-		while (repeat_rate > 0 && (index < LINK_QUAL_MAX_RETRY_NUM)) {
-	while ((tim_idx < (frame_size - 2)) &&
-	while (wanted_alternative && !(alternatives & BIT(wanted_alternative)))
-	while (len >= sizeof(*tlv)) {
-		while (!skb_queue_empty(&skbs)) {
-	while (!skb_queue_empty(&reclaimed_skbs)) {
-	while (q->write_ptr != q->read_ptr) {
 	/* waiting for all the tx frames complete might take a while */
-		while (q->read_ptr != q->write_ptr && !time_after(jiffies,
-	while (len) {
-	while (size && len) {
-		while (priv->speed_scan[pos] != 0)
-	while ((channel = simple_strtol(p, NULL, 0))) {
-		while (*p == ' ' || *p == '\t')
-	while (count--)
-	while (current_index < priv->sram_desc.last_cb_index) {
-	while (i && !(mask & i))
-	while ((ipw_rx_queue_space(rxq) > 0) && (rxq->free_count)) {
-	while (!list_empty(&rxq->rx_used)) {
-			while (channel_index < IPW_SCAN_CHANNELS - 1) {
-	while (i != r) {
 	 * associated (disassociation can take a while for a ful 802.11
-	while (length >= sizeof(*info_element)) {
-		while (i >= 0)
-	while (len) {
-			while (i > 0)
-	while (i != r) {
-	while (__ipw2100_tx_process(priv) && i < 200)
-	while (!list_empty(&priv->msg_pend_list)) {
-	while (!list_empty(&priv->tx_pend_list)) {
-	while (len < PAGE_SIZE - 128 && loop < 0x30000) {
-	while (len < PAGE_SIZE - 128 && loop < ARRAY_SIZE(ord_data)) {
-	while (!list_empty(&priv->tx_pend_list)) {
-			while ((c < REG_MAX_CHANNEL) &&
-	while (firmware_data_left > 0) {
-	while (microcode_data_left > 0) {
-	while (skb) {
-	while (pos < end) {
-	while (!rt2x00queue_empty(queue)) {
-	while (kfifo_get(&rt2x00dev->txstatus_fifo, &reg)) {
-		while (!rt2x00queue_empty(queue)) {
-		while (!rt2x00queue_empty(queue)) {
-		while (entry != entry_done) {
-	while (--max_rx) {
-	while (kfifo_get(&rt2x00dev->txstatus_fifo, &status)) {
-	while (!rt2x00queue_empty(queue)) {
-	while (len && !status) {
-		while (!rt2x00queue_empty(queue)) {
-	while (!rt2x00queue_empty(rt2x00dev->rx)) {
 		 * have to sleep a little while to give the driver/hw
-	while (offset < len) {
-	while ((skb = skb_dequeue(&priv->bc_ps_buf)))
-		while ((skb = ieee80211_get_buffered_bc(priv->hw, priv->vif))) {
-	while (len > 0) {
-		while (i < urb->actual_length) {
-	while (fw_len > 0) {
-	while (!list_empty(&priv->tx_pending)) {
-	while (remains) {
-		while (i < left) {
-	while (limit-- > 1) {
-	while (i != idx) {
-	while (i != idx) {
-	while (skb_queue_len(&priv->rx_queue) < 32) {
-	while (length--) {
-	while (remains) {
-		while (left--) {
-	while (!(err = usb_bulk_msg(priv->udev,
-	while (!(err = usb_bulk_msg(priv->udev,
-	while (remains) {
-	while (i--) {
-	while (pos < end) {
-	while ((total = p54_flush_count(priv) && i--)) {
-	while (data < end_data && *data)
-	while (data < end_data && !*data)
-	while (bootrec->data <= end_data && (bootrec->data +
-	while ((u8 *)entry <= end - sizeof(*entry)) {
-			while ((u8 *)tmp < entry->data + data_len) {
-	while (eeprom_size) {
-	while (i--) {
-	while (1) {
-			while (*a) {
-	while (time_diff--) {
-				while (fw_table[fw_index].fw_type != priv->firmware_type
-			while (skb_queue_len(&priv->b_tx_status.queue) > 5) {
-	while (skb_queue_len(&priv->rx_queue) < 16) {
-	while (skb_queue_len(&priv->b_tx_status.queue) > 0) {
-	while ((skb = skb_dequeue(&priv->b_tx_status.queue)))
-	while (i--) {
-	while (count--) {
-	while (skb_queue_len(&ring->queue)) {
-	while (skb_queue_len(&ring->queue)) {
-	while (check_bssid_list_item(bssid, bssid_len, buf, len)) {
-	while (buflen >= sizeof(*auth_req)) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-		while (1) {
-	while (theta > (180 << 16))
-	while (theta < -(180 << 16))
-	while (precision > 0) {
-	while (tmp2 >= freqref) {
-	while (1) {
-	while (1) {
-	while (tuple) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (skb_queue_len(&wl->tx_queue)) {
-	while (skb_queue_len(&wl->tx_queue))
-	while ((skb = skb_dequeue(ack_wait_queue)))
-		while (skb_queue_len(q) > ZD_MAC_MAX_ACK_WAITERS) {
-	while (tmp & 0x2) {
-	while (ret < 0) {
-	while (!ieee80211_queue_stopped(mac->hw, 0)) {
-	while (size > 0) {
-	while (len >= 4) {
-	while (len > 0) {
-	while ((IN4500(ai, COMMAND) & COMMAND_BUSY) && (delay < 10000)) {
-	while((!rc) && (bss.index != cpu_to_le16(0xffff))) {
-	while(1) {
-	while (max_tries-- && (IN4500(ai, EVSTAT) & EV_CMD) == 0) {
-	while (1) {
-	while( line[0] ) {
-			while((v = get_dec_u16(line, &i, 3))!=-1) {
-		while( line[0] && line[0] != '\n' ) line++;
-		while (*p != '\n' && j < 32)
-	while(rc == 0 && BSSList_rid.index != cpu_to_le16(0xffff)) {
-	while(!list_empty(&airo_devices)) {
-		while ((length >= 2) && (num_null_ies < 2)) {
-	while ((IN4500 (ai, SWS0) & 0x8000) && waittime > 0) {
-		while ((skb = skb_dequeue(&wl->links[hlid].tx_queue[i]))) {
-	while (drv_rx_counter != fw_rx_counter) {
-		while (rx_counter != fw_rx_counter) {
-		while (pkt_offset < buf_size) {
-	while (num_busy_bytes) {
-	while (len > 0) {
-	while (len > 0) {
-	while (chunk_num < fw_data_len / CHUNK_SIZE) {
-	while (chunks--) {
-	while (nvs_ptr[0]) {
-	while (1) {
-	while (loop++ < INIT_LOOP) {
-	while (!(intr & WL1271_ACX_INTR_CMD_COMPLETE)) {
-	while (!kthread_should_stop()) {
-	while ((skb = skb_dequeue(&wl->deferred_rx_queue)))
-	while ((skb = skb_dequeue(&wl->deferred_tx_queue)))
-	while (!done && loopcount--) {
-	while (len < maxlen) {
-	while (retries) {
-	while (retries) {
-	while (wl->fwlog_size == 0) {
-	while ((skb = wl1271_skb_dequeue(wl))) {
-		while ((skb = skb_dequeue(&wl->links[hlid].tx_queue[i]))) {
-			while ((skb = skb_dequeue(&wl->tx_queue[i]))) {
-	while (!time_after(jiffies, timeout)) {
-	while (fw_offset < fw->size) {
-	while (chunk_size > 0) {
-	while (1) {
-	while (iwm->calib_done_map != expected_bitmap) {
-	while (buf_offset < buf_size) {
-	while ((frame = __skb_dequeue(&list))) {
-	while (!skb_queue_empty(&iwm->rx_list)) {
-	while (buf_size < read_size)
-	while (retry++ < 3) {
-	while (!test_bit(pool_id, &iwm->tx_credit.full_pools_map) &&
-	while (entry_size > 0) {
-	while (skb) {
-	while (pcdac_i < AR5K_EEPROM_POWER_TABLE_SIZE)
-			while (i >= 0) {
-		while ((pdadc_0 < 0) && (pdadc_i < 128)) {
-		while (pdadc_0 < max_idx && pdadc_i < 128)
-		while ((pdadc_0 < (s16) pdadc_n) &&
-	while (pdg < AR5K_EEPROM_N_PD_GAINS) {
-	while (pdadc_i < AR5K_EEPROM_POWER_TABLE_SIZE * 2) {
-	while (cw < cw_req)
-	while (i < max) {
-	while (true) {
-	while (true) {
-	while (true) {
-		while (true) {
-	while (len > 0) {
-	while (!list_empty(rx_pktq)) {
-	while (true) {
-	while ((packet = htc_get_control_buf(target, false)) != NULL) {
-	while (pie < peie) {
-	while (len < buf_len && !ath6kl_debug_fwlog_empty(ar)) {
-		while (pos + 1 < ies + ies_len) {
-	while (pos + 1 < buf + len) {
-	while (!done) {
-	while (!list_empty(packet_queue)) {
-	while (num) {
-	while (count) {
-	while (amsdu_len > mac_hdr_len) {
-	while ((skb = skb_dequeue(&rxtid->q)))
-			while ((skb = skb_dequeue(&rxtid->q)))
-				while ((skbuff = skb_dequeue(&conn->psq))
-	while (time_before(jiffies, timeout) && !ar->bmi.cmd_credits) {
-	while (time_before(jiffies, timeout) && !rx_word) {
-	while (len_remain) {
-	while (len_remain) {
-	while (len_remain) {
-	while (len > sizeof(struct ath6kl_fw_ie)) {
-	while (atomic_read(&ar_sdio->irq_handling)) {
-	while (pos && pos + 1 < ies + ies_len) {
-	while ((skb = skb_dequeue(&ar->mcastpsq)) != NULL) {
-	while(skb) {
-	while (skb) {
-	while ((skb = skb_dequeue(queue)) != NULL) {
-	while (bitsLeft > 0) {
-	while (pcdac > ah->originalGain[i] &&
-		while (freqCount < 3) {
-	while (!list_empty(&sc->rx.rxbuf)) {
-	while ((skb = skb_dequeue(&rx_edma->rx_fifo)) != NULL) {
-	while (pos + 2 < end) {
-		while (qi->tqi_cwmin < cw)
-		while (qi->tqi_cwmax < cw)
-	while ((skb = __skb_dequeue(&tid->buf_q))) {
-	while (tid->baw_head != tid->baw_tail && !test_bit(tid->baw_head, tid->tx_buf)) {
-	while ((skb = __skb_dequeue(&tid->buf_q))) {
-	while (bf) {
-		while (bf) {
-	while (bf) {
-	while (bf) {
-	while (!list_empty(list)) {
-		while (!list_empty(&txq->txq_fifo[idx])) {
-		while (!list_empty(&ac->tid_q)) {
-		while (ndesc_skipped) {
-			while (ATH_DESC_4KB_BOUND_CHECK(bf->bf_daddr)) {
-	while (pmu_set != REG_READ(ah, pmu_reg)) {
-			while (REG_READ_FIELD(ah, AR_PHY_PMU2,
-			while (!REG_READ_FIELD(ah, AR_PHY_PMU1,
-			while (!REG_READ_FIELD(ah, AR_PHY_PMU2,
-	while ((REG_READ(ah, PLL4) & PLL4_MEAS_DONE) == 0) {
-	while (tx_chainmask || rx_chainmask) {
-	while (thresh_mask) {
-	while (trigger_mask) {
-	while (i < ARRAY_SIZE(mcs_rix_off) && rate->idx > mcs_rix_off[i]) {
-		while ((ss < 0) && (k < (AR5416_NUM_PDADC_VALUES - 1))) {
-		while ((ss < maxIndex) && (k < (AR5416_NUM_PDADC_VALUES - 1))) {
-			while ((ss <= tgtIndex) &&
-	while (i < AR5416_PD_GAINS_IN_MASK) {
-	while (k < AR5416_NUM_PDADC_VALUES) {
-	while ((skb = __skb_dequeue(list)) != NULL) {
-	while ((skb = __skb_dequeue(queue)) != NULL) {
-	while (index < len) {
-	while (len) {
-	while ((atomic_read(&ar->rx_anch_urbs) < AR9170_NUM_RX_URBS) &&
-	while ((urb = usb_get_from_anchor(&ar->tx_err))) {
-	while ((urb = usb_get_from_anchor(&ar->tx_wait))) {
-	while (len) {
-	while (ar->debug.ring_head != ar->debug.ring_tail) {
-	while (idx >= 0) {
-			while (k-- > 0) {
-	while (pos_addr < end_addr) {
-	while (scan < len - sizeof(struct carl9170fw_desc_head)) {
-	while (pos < end) {
-	while (i < resplen) {
-	while (len > 2 && i < 12 && buf[0] == 0xff && buf[1] == 0xff) {
-	while (tlen >= 4) {
-	while (!list_empty(&tid_gc)) {
-		while ((skb = __skb_dequeue(&tid_info->queue)))
-			while ((skb = skb_dequeue(&ar->tx_pending[i]))) {
-			while ((skb = __skb_dequeue(&tid_info->queue)))
-	while ((skb = __skb_dequeue(&free)))
-		while (!skb_queue_empty(&ar->tx_status[i])) {
-	while (count) {
-		while ((skb = skb_peek(&tid_info->queue))) {
-		while (!skb_queue_empty(&ar->tx_pending[i])) {
-	while (HFA384X_INW(HFA384X_CMD_OFF) & HFA384X_CMD_BUSY && tries > 0) {
-	while (i > 0) {
-		while (len > 0) {
-		while (len > 0) {
-	while (pos + 1 < PRISM2_PDA_SIZE / 2) {
-		while (rest_len > 0) {
-	while (cb != NULL && cb->idx != idx) {
-	while (pos < CIS_MAX_LEN - 1 && cis[pos] != CISTPL_END) {
-	while ((HFA384X_INW(HFA384X_CMD_OFF) & HFA384X_CMD_BUSY) && --i)
-	while (HFA384X_INW(HFA384X_CMD_OFF) & HFA384X_CMD_BUSY && tries > 0) {
-	while (HFA384X_INW(HFA384X_CMD_OFF) & HFA384X_CMD_BUSY && tries > 0) {
-        while (!(HFA384X_INW(HFA384X_EVSTAT_OFF) & HFA384X_EV_CMD) &&
-	while (res && tries > 0) {
-	while (!(HFA384X_INW(HFA384X_EVSTAT_OFF) & HFA384X_EV_ALLOC) &&
-	while (!(HFA384X_INW(HFA384X_EVSTAT_OFF) & HFA384X_EV_CMD) &&
-	while ((skb = skb_dequeue(&local->rx_list)) != NULL)
-	while (cb != NULL && cb->idx != sw_support)
-	while ((skb = skb_dequeue(&local->sta_tx_exc_list)) != NULL) {
-	while ((skb = skb_dequeue(&local->info_list)) != NULL) {
-	while (frames-- > 0) {
-	while (tx_cb != NULL) {
-	while (s->hnext != NULL && memcmp(s->hnext->addr, sta->addr, ETH_ALEN)
-	while (s != NULL && memcmp(s->addr, sta, ETH_ALEN) != 0)
-	while (entry) {
-			while (left > 0) {
-	while ((skb = skb_dequeue(&sta->tx_buf)) != NULL) {
-	while (entry) {
-		while (new_rate < sta->tx_max_rate) {
-		while (rate > 0) {
-	while (local->num_bss_info > 0) {
-	while (left >= 2) {
-	while (reg_iflag1 & FLEXCAN_IFLAG_RX_FIFO_AVAILABLE &&
-	while (count--) {
-	while (!hecc_get_bit(priv, HECC_CANES, HECC_CANES_CCE) && cnt != 0) {
-	while (hecc_get_bit(priv, HECC_CANES, HECC_CANES_CCE) && cnt != 0) {
-	while ((pending_pkts = hecc_read(priv, HECC_CANRMP)) &&
-		while (priv->tx_tail - priv->tx_head > 0) {
-	while ((isrc = priv->read_reg(priv, REG_IR)) && (n < SJA1000_MAX_IRQ)) {
-			while (status & SR_RBS) {
-	while (1) {
-	while (true) {
-	while (received < budget) {
-	while (count && priv->read_reg(priv,
-	while (!(bfin_read(&reg->control) & CCA)) {
-	while (bfin_read(&reg->status) & CCA) {
-		while (!(bfin_read(&reg->intr) & SMACK)) {
-	while (counter) {
-	while (counter) {
-	while (pos < urb->actual_length) {
-		while (msg_count) {
-	while (npackets < quota) {
-	while (!(regs->canctl1 & MSCAN_INITAK))
-		while (mcp251x_read_reg(spi, CANSTAT) & CANCTRL_REQOP_MASK) {
-	while ((mcp251x_read_reg(spi, CANSTAT) & CANCTRL_REQOP_MASK)
-	while (!priv->force_quit) {
-	while (softing_handle_1(card) > 0) {
-	while (mem < end) {
-	while (mem < end) {
-	while (unlikely(ktime_to_ns(tmp) > ktime_to_ns(now))) {
-		while (unlikely(rxq >= numvtaps))
-	while (count && (offset >= from->iov_len)) {
-	while (count && (copy > 0)) {
-	while (count--) {
-		while (len) {
-	while (nr_segs && (offset >= iv->iov_len)) {
-	while (len) {
-	while (len) {
-	while (--num_buf) {
-	while (received < budget &&
-	while (!virtqueue_get_buf(vi->cvq, &tmp))
-	while (1) {
-	while (1) {
-	while (vi->pages)
-	while (a & 0x80 || a & 0x40) {
-	while (a & 0x80 || !(a & 0x40)) {
-	while (inb(ioaddr[1] + 6) & 0x80) {
-	while (!(inb(ioaddr[1] + 6) & 0x40)) {
-	while (inb(ioaddr[1] + 6) & 0x80) {
-	while (inb(ioaddr[1] + 6) & 0x40) {
-	while (bp->rcv_xmt_reg.index.rcv_comp != p_type_2_cons->index.rcv_cons)
-	while (bp->rcv_xmt_reg.index.xmt_comp != p_type_2_cons->index.xmt_cons)
-	while (bp->rcv_xmt_reg.index.xmt_comp != bp->rcv_xmt_reg.index.xmt_prod)
-	while (smc->e.trace_prop) {
-	while (HWM_GET_RX_FREE(smc) > 0) {
-	while (oem_ids[i].oi_status) {
-	while (*p) {
-	while (len > 0 ) {
-	while (len > 0) {
-	while (len > 0  && *format) {
-			while ((inpw(FM_A(FM_STMCHN)) & FM_SNPPND) && k) k--;\
-			while (!(inpw(FM_A(FM_AFSTAT)) & FM_DONE) && k) k--;\
-	while (tm && !done) {
-	while (tx_used) {
-	while (rx_used) {
-	while ((is = GET_ISR() & ISR_MASK)) {
-		while ((mb = get_llc_rx(smc))) {
-		while (!offDepth && (mb = get_llc_rx(smc))) {
-		while (rx_used && !(r->rxd_rbctrl & cpu_to_le32(BMU_ST_BUF))) {
-	while (queue->rx_used) {
-		while (r != queue->rx_curr_put &&
-	while (len) {
 			} while (!(tbctrl & BMU_EOF)) ;
-		while (tx_used) {
-	while (ev != smc->q.ev_put) {
-	while (!pcon.pc_err && len > 0 ) {
-		while (index <= idx_end) {
-				while (pt->p_access == AC_G ||
-	while (swap && (c = *swap++)) {
-	while (len > 0 ) {
-			while (n > 0) {
-	while (len--) {
-		while (index != TLB_NULL_INDEX) {
-	while (curr_index != RLB_NULL_INDEX) {
-	while ((slave = bond->first_slave) != NULL) {
-	while (proto) {
-	while (*p != proto) {
-	while (1) {
-	while (desc = &card->status->rx_descs[card->rx_in],
-        while((stat = readl(card->plx + PLX_DOORBELL_FROM_CARD)) != 0) {
-	while ((stat = readl(card->plx + PLX_MAILBOX_0)) != 0) {
-	while(len)
-	while(len)
-	while(len)
-	while (time_before(jiffies, done) && (resp != resp1) && (!resp2 || (resp != resp2)))
-	while (waiting && time_before_eq(jiffies, jiffs))
-	while ((status = cpc_readb(&ptdescr->status)) & DST_OSB) {
-	while ((status = cpc_readb(&ptdescr->status)) & DST_OSB) {
-			while (chan->rx_first_bd != chan->rx_last_bd) {
-	while (cpc_readb(falcbase + F_REG(SIS, ch)) & SIS_CEC) {
-	while (1) {
-	while ((cpc_readl(card->hw.scabase + DTX_REG(CDAL,ch)) !=
-	while ((status = cpc_readl(scabase + ISR0)) != 0) {
-	while ((gis = cpc_readb(falcbase + F_REG(GIS, ch))) != 0) {
-	while ((gis = cpc_readb(falcbase + F_REG(GIS, ch))) != 0) {
-			while ( (plx_status = (cpc_readb(card->hw.plxbase + card->hw.intctl_reg) &
-	while (card) {
-	while (i-- > 0) {
-	while (!chan->rx_status) {
-	while (!chan->tx_status) {
-	while (length--) {
-	while (length--) {
-	while (--retries) {
-	while (--retries) {
-		while (1) {
-		while (!(cosa_getstatus(cosa)&SR_TX_RDY)) {
-		while (!(cosa_getstatus(cosa)&SR_TX_RDY)) {
-	while (1) {
-	while (1) {
-	while((stat = sca_intr_status(card)) != 0) {
 	} while (i > 0);
-	while( (pdev = pci_get_class( PCI_CLASS_NETWORK_OTHER << 8, pdev ))
-	while( tail_len-- )
-		while( nl->link )	/* it's master device! */
-	while( num < SBNI_MAX_NUM_CARDS ) {
-	while( len-- )
-			while (cpc_tty_area[port].buf_rx.first) {
-		while (cpc_tty->buf_rx.first) {
-	while (pc300chan->rx_first_bd != pc300chan->rx_last_bd) { 
-	while (1) { 
-		while ((status = cpc_readb(&ptdescr->status)) & DST_OSB) {
-		while ((status = cpc_readb(&ptdescr->status)) & DST_OSB) {
-				while (*ifap != NULL) {
-	while(1)
-	while(c->txcount) {
-	while(++work<5000)
-	while(*rtable!=255)
-			while(c->txcount && (read_zsreg(c,R0)&Tx_BUF_EMP))
-	while (mbval > NAK) {
-	while ((dmabits & (DMA_OWN | RX_STP)) == 0) {
-		while (!(FST_RDB(card, txDescrRing[pi][port->txpos].bits) &
-		while (!(FST_RDB(card, rxDescrRing[pi][port->rxpos].bits)
-	while (rdidx != wridx) {
-			while (i--)
-  while(iLen > 0) 
-        while(time_before(jiffies, j))
-                    while( (LMC_CSR_READ(sc, csr_gp) & LMC_GEP_INIT) == 0 &&
-                    while( (LMC_CSR_READ(sc, csr_gp) & LMC_GEP_INIT) == 0 &&
-    while (csr & sc->lmc_intrmask) {
-            while ((badtx < sc->lmc_next_tx)) {
-    while (((stat = sc->lmc_rxring[i].status) & LMC_RDES_OWN_BIT) != DESC_OWNED_BY_DC21X4)
-    while (i >= 0)
-    while (i > 0)
-	while (*s) {
-	while (len) {
-	while (dev) {
-	while (dev) {
-	while (n > 1) {
-	while(dev) {
-	while ((skb = skb_dequeue(&tx_queue)) != NULL)
-		while(1) {
-	while (card) {
-	while ((dpriv->rx_dirty - dpriv->rx_current) % RX_RING_SIZE) {
-	while (--i >= 0) {
-	while (--i >= 0) {
-	while (i-- > 0) {
-	while (i-- > 0)
-			while (0xffffffc0 & divider) {
 			//while (dpriv->rx_needs_refill) {
-				while (!(rx_fd->state1 & Hold)) {
-	while (*p && (get_option(&str, *p) == 2))
-	while (pvc) {
-	while (*pvc_p) {
-	while (*pvc_p) {
-		while (pvc) {
-			while (pvc) {	/* Activate all PVCs */
-		while (pvc) {		/* Deactivate all PVCs */
-			while (pvc) {
-	while (pvc) {
-	while (skb->len >= i + 2 + stat_len) {
-	while (pvc) {
-	while (pvc) {		/* Shutdown all PVCs for this FRAD */
-	while (pvc) {
-	while (received < budget) {
-	while ((n_desc = queue_get_desc(queue_ids[port->id].txdone,
-	while (queue_get_desc(queue_ids[port->id].rxfree, port, 0) >= 0)
-	while (queue_get_desc(queue_ids[port->id].rx, port, 0) >= 0)
-	while (queue_get_desc(queue_ids[port->id].tx, port, 1) >= 0)
-		while (queue_get_desc(port->plat->txreadyq, port, 1) >= 0)
-	while (readw(addr)) {
-	while (count--) {
-	while (len-- > 0) {
-	while (received < budget) {
-	while (1) {
 	} while (i > 0);
-		while (1) {
-		while (1) {
-		while (1) {
-		while (1) {
-		while (1) {
-	while (!(rd->rdma.cntinfo & HPCDMA_OWN)) {
-	while ((td->tdma.cntinfo & (HPCDMA_XIU | HPCDMA_ETXD)) ==
-	while (i < (nbufs - 1)) {
-	while (i < (nbufs - 1)) {
-	while ( ( ((status=inw(SEEQ_STATUS)) & SEEQSTAT_WINDOW_INT) != SEEQSTAT_WINDOW_INT) && time_before(jiffies, tmp))
-	while ( (((status=inw(SEEQ_STATUS)) & SEEQSTAT_FIFO_EMPTY) == 0) && time_before(jiffies, tmp + HZ))
-	while ((ether3_inw(REG_STATUS) & STAT_FIFOEMPTY) == 0) {
-	while (ether3_inw(REG_STATUS) & (STAT_RXON|STAT_TXON))
-	while (ether3_inw(REG_STATUS) & (STAT_RXON|STAT_TXON))
-	while(waittime < 2000) {
-			while (mii_phy) {
-		while (poll_bit) {
-	while (rx_status & OWN) {
-	while (status && (i++ < 1000)) {
-	while (sis_priv->first_mii) {
-	while (--boguscnt > 0) {
-		while ((tx_status = le32_to_cpu(np->tx_done_q[np->tx_done].status)) != 0) {
-	while ((desc_status = le32_to_cpu(np->rx_done_q[np->rx_done].status)) != 0) {
-		while (vlan_count < 32) {
-		while (i++ < 16) {
-	while(base == 0xFF)
-		while(!(inb(dev->base_addr+2)&(1<<5)))
-	while (lp->tx_ring_tail != atomic_read(&lp->tx_ring_head))
-	while((inb(ioaddr+HOST_STATUS)&HOST_STATUS_CWR) && boguscount++<2000)
-	while (ether1_readw(dev, ISCP_ADDR, iscp_t, iscp_busy, DISABLEIRQS) == 1) {
-	while (((status = ether1_readw(dev, CFG_ADDR, cfg_t, cfg_status, DISABLEIRQS))
-	while (((status = ether1_readw(dev, SA_ADDR, sa_t, sa_status, DISABLEIRQS))
-	while (((status = ether1_readw(dev, MC_ADDR, mc_t, mc_status, DISABLEIRQS))
-	while (((status = ether1_readw(dev, TDR_ADDR, tdr_t, tdr_status, DISABLEIRQS))
-	while (nop.nop_status & STAT_COMPLETE) {
-	while (adapter->rx_active < ELP_RX_PCBS && netif_running(dev)) {
-		while ((inb_status(dev->base_addr) & ACRF) != 0 && time_before(jiffies, timeout)) {
-		while ((dev->base_addr = addr_list[idx++])) {
-	while (lp->tx_pkts_in_ring) {
-	while ((frame_status = readw(shmem+rx_head)) < 0) {   /* Command complete */
- 		while (count--)
-	while (((status = inb(ioaddr + STATUS_REG)) & (RX_INT|TX_INT)) && (boguscount--))
-	while (rcv_event == RCV_DONE) {
-	while ((lp->tx_start != lp->tx_end) && boguscount--) {
-	while (slot != -1) {
-	while (!(cfg_cmd->cmd_status & STAT_COMPL)) {
-	while (!(ias_cmd->cmd_status & STAT_COMPL)) {
-	while (!(tdr_cmd->cmd_status & STAT_COMPL)) {
 			pr_warning("%s: %d Problems while running the TDR.\n", dev->name, __LINE__);
-			while (!(mc_cmd->cmd_status & STAT_COMPL)) {
-	while ((stat = p->scb->status & STAT_MASK))
-	while (--delcnt && lp->iscp.stat)
-	while (--delcnt && lp->scb.command)
-	while (--delcnt && c->command)
-	while (cmd != I596_NULL) {
-	while ((rfd->stat) & STAT_C) {	/* Loop while complete frames */
-	while (lp->cmd_head != I596_NULL) {
-		while ((lp->cmd_head != I596_NULL) && (lp->cmd_head->status & STAT_C)) {
-		while ((ptr != I596_NULL) && (ptr != lp->cmd_tail)) {
-	while ((stat = readb(&p->scb->cus) & STAT_MASK)) {
-				while (!((rstat = readw(&rbd->status)) & RBD_LAST)) {
-	while (--delcnt && dma->iscp.stat) {
-	while (--delcnt && dma->scb.command) {
-	while (cmd != NULL) {
-	while (rfd->stat & SWAP16(STAT_C)) {	/* Loop while complete frames */
-	while (lp->cmd_head != NULL) {
-		while (lp->cmd_head != NULL) {
-		while ((ptr != NULL) && (ptr != lp->cmd_tail)) {
-		while (slot != MCA_NOTFOUND) {
-				while (!SCB_complete(rsst=scb_status(dev)))
-		while (SCB_CUstat(status)==2)
-		while (!scb_status(dev))
-		while (inw(ioaddr+0x4000))
-		while (!scb_status(dev))
-	while (znet->rx_start + cur_frame_end_offset != znet->rx_cur &&
-	while((stat=p->scb->cus & STAT_MASK))
-					while(!((rstat=swab16(rbd->status)) & RBD_LAST))
-	while (lp->scb.command) {
-	while (lp->iscp.busy) {
-	while (1) {
-	while (lp->cmd_head) {
-	while (lp->cmd_head && (lp->cmd_head->status & CMD_STAT_C)) {
-	while (cmd && (cmd != lp->cmd_tail)) {
-	while (1) {
-	while (tx_tail != tx_head) {
-	while (work--) {
-	while (i < len - 1) {
-	while (i < len - 1) {
-	while (tx_left > 0) {
-	while (--tmp_work > 0) {
-	while (--tmp_work > 0) {
-	while (netif_running(dev) && received < budget &&
-	while (len-- > 0) {
-	while (wait--) {
-	while ((reg & p->mask) != p->val)
-	while (len-- > 0) {
-		while (RTL_R8(TxPoll) & NPQ)
-		while (!(RTL_R32(TxConfig) & TXCFG_EMPTY))
-	while (len-- > 0) {
-	while (tx_left > 0) {
-	while (status && status != 0xffff) {
-	while (--num_bits >= 0) {
-		while (--length > pad_len)
-		while (--length > 0)
-    while (--boguscount > 0) {
-	while (root_atp_dev) {
-	while (time_before(jiffies, myjif) && !ap->fw_running)
-	while (evtcsm != evtprd) {
-	while (idx != rxretprd) {
-	while (size > 0) {
-	while (size > 0) {
-	while ((nolock_regb_read(priv, reg) & mask) != val) {
-	while (pk_counter-- > 0)
-    while ((inb(ioaddr + RX_MODE) & F_BUF_EMP) == 0) {
-			while (slot != MCA_NOTFOUND) {
-	while ((inb(ioaddr + RX_MODE) & 0x40) == 0) {
-#define eeprom_slow_io() do { int _i = 40; while(--_i > 0) { inb(0x80); }}while(0)
-	while( (inb(ioaddr + TX_STATUS_REG) & 0x80) == 0) {
-	while((inb(ioaddr + TX_STATUS_REG) & 0x20) == 0) {
-			while((inb(ioaddr + RX_STATUS_REG) & 0x80) == 0) {
-		while( (cbyte & 0x01) == 0) {
-	while( (inb(ioaddr + RECEIVE_MODE_REG) & RX_BUFFER_EMPTY) == 0) {
-		while (test_and_set_bit(__AT_RESETTING, &adapter->flags))
-	while (hw_reg_addr <= REG_MAC_RX_STATUS_END) {
-	while (hw_reg_addr <= REG_MAC_TX_STATUS_END) {
-	while (next_to_clean != hw_next_to_clean) {
-	while (next_info->flags & ATL1C_BUFFER_FREE) {
-	while (1) {
-	while (test_and_set_bit(__AT_RESETTING, &adapter->flags))
-		while (1) {
-	while (1) {
-	while (rfd_ring->next_to_clean != (rrd->buf_indx + offset)) {
-	while (!buffer_info->alloced && !next_info->alloced) {
-	while (1) {
-	while (cmb_tpd_next_to_clean != sw_tpd_next_to_clean) {
-	while (test_and_set_bit(__ATL2_RESETTING, &adapter->flags))
-	while (test_and_set_bit(__ATL2_RESETTING, &adapter->flags))
-		while (1) {
-	while (1) {
-	while (test_and_set_bit(__AT_RESETTING, &adapter->flags))
-		while (test_and_set_bit(__AT_RESETTING, &adapter->flags))
-	while (hw_reg_addr <= REG_MAC_RX_STATUS_END) {
-	while (hw_reg_addr <= REG_MAC_TX_STATUS_END) {
-	while (next_to_clean != hw_next_to_clean) {
-	while (mapped_len < buf_len) {
-			while (adapter->tx_ring.next_to_use != ring_end) {
-				while (adapter->tx_ring.next_to_use != ring_end) {
-	while (test_and_set_bit(__AT_RESETTING, &adapter->flags))
-	while (*ptr != '\0' && ptr < limit) {
-	while (mgp->cmd->data != MYRI10GE_NO_CONFIRM_DATA && i < 9) {
-	while (len > 0) {
-	while (rx->fill_cnt != (rx->cnt + rx->mask + 1)) {
-	while (tx->pkt_done != mcp_index) {
-	while (rx_done->entry[idx].length != 0 && work_done < budget) {
-	while (1) {
-	while (tx->done != tx->req) {
-				while (i >= 0) {
-		while (!is_power_of_2(big_pow2))
-	while (slice) {
-	while (cnt > 1) {
-	while (1) {
-		while (len) {
-	while (segs) {
-	while (mgp->num_slices > 1) {
-		while (!is_power_of_2(mgp->num_slices))
-	while (info->num_needed_small_buffers != 0) {
-	while (info->num_needed_large_buffers != 0) {
-	while (comp_head != comp_busy && n < comps_size) {
-	while (qup->__packet_receive_read !=
-	while (priv->active) {
-	while (true) {
-	while (countdown && mbx->ops.check_for_msg(hw)) {
-	while (countdown && mbx->ops.check_for_ack(hw)) {
 	/* we cannot reset while the RSTI / RSTD bits are asserted */
-	while (!mbx->ops.check_for_rst(hw) && timeout) {
-	while (test_and_set_bit(__IXGBEVF_RESETTING, &adapter->state))
-			while (i) {
-			while (i) {
-	while (test->reg) {
-	while ((eop_desc->wb.status & cpu_to_le32(IXGBE_TXD_STAT_DD)) &&
-	while (cleaned_count--) {
-	while (staterr & IXGBE_RXD_STAT_DD) {
-	while (adapter->flags & IXGBE_FLAG_IN_WATCHDOG_TASK)
-	while (test_and_set_bit(__IXGBEVF_RESETTING, &adapter->state))
 	 * set them up later while requesting irq's.
-	while (vectors >= vector_threshold) {
-	while (q_idx) {
-	while (len) {
-		while (len) {
-	while (count >= 0) {
-	while (count--) {
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->flags))
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->flags))
-	while (len) {
-		while (len) {
-	while (count--) {
-	while (count--) {
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->flags))
-	while ((eop_desc->upper.data & cpu_to_le32(E1000_TXD_STAT_DD)) &&
-	while (rx_desc->status & E1000_RXD_STAT_DD) {
-	while (rx_desc->status & E1000_RXD_STAT_DD) {
-	while (cleaned_count--) {
-	while (cleaned_count--) {
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->flags))
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->flags))
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->flags))
-	while (mask) {
-		while ((!(eecd & E1000_EECD_GNT)) &&
-	while (widx < words) {
-		while (widx < words) {
-	while (words_written < words) {
-	while (countdown && mbx->ops.check_for_msg(hw, mbx_id)) {
-	while (countdown && mbx->ops.check_for_ack(hw, mbx_id)) {
-	while (pvfdev) {
-		while (pvfdev) {
-	while (test_and_set_bit(__IXGBE_RESETTING, &adapter->state))
-				while (i) {
-				while (i) {
 		} while (u64_stats_fetch_retry_bh(&ring->syncp, start));
-	while (test->reg) {
-	while (staterr & IXGBE_RXD_STAT_DD) {
-	while (!end_data) {
-	while (sfp_id != IXGBE_PHY_INIT_END_NL) {
-	while (timeout) {
-		while (test_and_set_bit(__IXGBE_RESETTING, &adapter->state))
-		while (len) {
-	while (cleaned_count--) {
-	while (skb->prev) {
-	while (staterr & IXGBE_RXD_STAT_DD) {
-	while (vector) {
-			while (cnt >>= 1)
-	while (test_and_set_bit(__IXGBE_RESETTING, &adapter->state))
-	while (test_and_set_bit(__IXGBE_IN_SFP_INIT, &adapter->state))
 	/* clear all SFP and link config related flags while holding SFP_INIT */
 	 * set them up later while requesting irq's.
-	while (vectors >= vector_threshold) {
-	while (tx)
-	while (rx)
-	while (v_idx) {
-		while (size > IXGBE_MAX_DATA_PER_TXD) {
-		while (unlikely(txq >= dev->real_num_tx_queues))
-	while (bdev && (bdev->pcie_type != PCI_EXP_TYPE_ROOT_PORT))
-		while (vfdev) {
-		while (data_value != 0xffff) {
-	while (len) {
-		while (len) {
-	while (count--) {
-	while (count--) {
-	while (eop_desc->status & IXGB_TX_DESC_STATUS_DD) {
-	while (rx_desc->status & IXGB_RX_DESC_STATUS_DD) {
-	while (--cleancount > 2 && cleaned_count--) {
-	while (i < timeout) {
-	while (timeout) {
 			hw_dbg("NVM Read Error while updating checksum.\n");
-	while (test_and_set_bit(__IGB_RESETTING, &adapter->state))
-	while (test_and_set_bit(__IGB_RESETTING, &adapter->state))
-	while (test_and_set_bit(__IGB_RESETTING, &adapter->state))
-				while (i) {
-				while (i) {
-	while (test->reg) {
-	while (igb_test_staterr(rx_desc, E1000_RXD_STAT_DD)) {
-	while (hash_mask >> bit_shift != 0xFF)
-	while (i < timeout) {
-	while (i < AUTO_READ_DONE_TIMEOUT) {
-	while (timeout) {
-	while (test_and_set_bit(__IGB_RESETTING, &adapter->state))
-		while (unlikely(size > IGB_MAX_DATA_PER_TXD)) {
-	while (test_and_set_bit(__IGB_RESETTING, &adapter->state))
-	while (pvfdev) {
-	while (pvfdev) {
-		while (tx_desc != eop_desc) {
-	while (igb_test_staterr(rx_desc, E1000_RXD_STAT_DD)) {
-	while (cleaned_count--) {
-	while (timeout) {
-		while (timeout) {
-	while (widx < words) {
-		while (widx < words) {
 			hw_dbg("NVM Read Error while updating checksum.\n");
-	while (countdown && mbx->ops.check_for_msg(hw, mbx_id)) {
-	while (countdown && mbx->ops.check_for_ack(hw, mbx_id)) {
-	while (nic->cb_to_send != nic->cb_to_use) {
-	while (!(cb->status & cpu_to_le16(cb_complete))) {
-		while (nic->cbs_avail != nic->params.cbs.count) {
-	while ((j++ < E1000_ICH_FWSM_PCIM2PCI_COUNT) &&
-	while (cleaned_count--) {
-	while (cleaned_count--) {
-	while (cleaned_count--) {
-	while (staterr & E1000_RXD_STAT_DD) {
-	while ((eop_desc->upper.data & cpu_to_le32(E1000_TXD_STAT_DD)) &&
-	while (staterr & E1000_RXD_STAT_DD) {
-	while (staterr & E1000_RXD_STAT_DD) {
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->state))
-	while (len) {
-		while (len) {
-	while (count--) {
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->state))
-	while ((e1000_phy_unknown == e1000e_get_phy_type_from_id(phy->id)) &&
-	while (timeout) {
-	while (timeout) {
-	while (retry_count < 2) {
-	while (i < timeout) {
-	while (timeout) {
-	while (i < sw_timeout) {
-	while (timeout) {
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->state))
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->state))
-	while (test_and_set_bit(__E1000_RESETTING, &adapter->state))
-	while (hash_mask >> bit_shift != 0xFF)
-	while (i < timeout) {
-	while (i < AUTO_READ_DONE_TIMEOUT) {
-	while (timeout) {
-	while (timeout) {
-		while (timeout) {
-	while (widx < words) {
-		while (widx < words) {
 			e_dbg("NVM Read Error while updating checksum.\n");
-	while (cleaned_count--) {
-	while (staterr & E1000_RXD_STAT_DD) {
-	while ((eop_desc->wb.status & cpu_to_le32(E1000_TXD_STAT_DD)) &&
-	while (test_and_set_bit(__IGBVF_RESETTING, &adapter->state))
-	while (count--) {
-	while (count--) {
-	while (test_and_set_bit(__IGBVF_RESETTING, &adapter->state))
-	while (countdown && mbx->ops.check_for_msg(hw)) {
-	while (countdown && mbx->ops.check_for_ack(hw)) {
 	/* we cannot initialize while the RSTI / RSTD bits are asserted */
-	while (!mbx->ops.check_for_rst(hw) && timeout) {
-	while (hash_mask >> bit_shift != 0xFF)
-	while (test_and_set_bit(__IGBVF_RESETTING, &adapter->state))
-	while (limit-- > 0) {
-	while (limit-- > 0) {
-	while (i < needed) {
-	while (--limit) {
-		while (--limit > 0) {
-	while ((inst = firmware) && inst->note) {
-		while ((skb = __skb_dequeue(&cp->rx_flows[i]))) {
-	while (entry != limit) {
-		while ((skb = __skb_dequeue(flow))) {
-	while (entry != last) {
-	while (1) {
-	while (last != entry) {
-	while (i-- > 0) {
-	while (i-- > 0) {
-	while (i < EXPANSION_ROM_SIZE) {
-		while ((p - kstart) < len) {
-	while (i-- > 0) {
-	while (i-- > 0) {
-	while (limit-- > 0) {
-	while (atomic_read(&cp->reset_task_pending))
-	while (readl(cp->regs + REG_MAC_RX_CFG) & MAC_RX_CFG_EN) {
-	while (readl(cp->regs + REG_MAC_RX_CFG) & MAC_RX_CFG_HASH_FILTER_EN) {
-	while (--tries) {
-	while (--tries) {
-	while (--tries) {
-	while ((sbus_readb(mregs + MREGS_IACONFIG) & MREGS_IACONFIG_ACHNGE) != 0)
-	while ((sbus_readb(mregs + MREGS_IACONFIG) & MREGS_IACONFIG_ACHNGE) != 0)
-		while (--tries) {
-	while (!((flags = this->rx_flags) & RXD_OWN)) {
-	while (channel < 4) {
-	while (elem != qep->tx_new) {
-		while ((sbus_readb(qep->mregs + MREGS_IACONFIG) & MREGS_IACONFIG_ACHNGE) != 0)
-		while ((sbus_readb(qep->mregs + MREGS_IACONFIG) & MREGS_IACONFIG_ACHNGE) != 0)
-	while (root_qec_dev) {
-	while (!(hme_read32(hp, tregs + TCVR_FRAME) & 0x10000) && --tries)
-	while (!(hme_read32(hp, tregs + TCVR_FRAME) & 0x10000) && --tries)
-	while (hme_read32(hp, hp->bigmacregs + BMAC_TXCFG) & BIGMAC_TXCFG_ENABLE)
-	while ((hme_read32(hp, bregs + BMAC_TXSWRESET) & 1) && --tries)
-	while ((hme_read32(hp, bregs + BMAC_RXSWRESET) & 1) && --tries)
-	while (hme_read32(hp, gregs + GREG_SWRESET) && --tries)
-	while (--tries) {
-	while (--tries) {
-		while (--timeout) {
-	while (elem != hp->tx_new) {
-	while (!((flags = hme_read_desc32(hp, &this->rx_flags)) & RXFLAG_OWN)) {
-	while (tmp != &pdev->bus->devices) {
-	while (qfe_pci_list) {
-	while (qfe_sbus_list) {
-	while (start != end) {
-	while (idx != dr->prod) {
-	while (1) {
-	while ((m = *pp) != NULL) {
-	while (--limit >= 0) {
-	while (--limit >= 0) {
-	while (--limit >= 0) {
-	while (--limit > 0) {
-	while (max_retry--) {
-	while (max_retry--) {
-	while (--limit >= 0) {
-	while (--limit >= 0) {
-	while (--limit > 0) {
-	while (1) {
-	while (1) {
-	while (index < (rp->rbr_table_size - blocks_per_page)) {
-		while (page) {
 	} while (len > 0);
-	while (pkt_cnt--)
-	while (work_done < qlen) {
-	while (--limit > 0) {
-	while (--limit > 0) {
-	while (--limit > 0) {
-	while ((--limit >= 0) && (val & PCS_MII_CTL_RST)) {
-	while ((--limit >= 0) && (val & XPCS_CONTROL1_RESET)) {
-	while (--limit >= 0) {
-	while (--limit >= 0) {
-	while (--limit >= 0) {
-	while (--limit >= 0 && (rd != wr)) {
-				while (page) {
-	while (tlen > 0) {
-	while (len > 0) {
-	while (len >= 4) {
-	while (start < end) {
-	while (start + offset < ESPC_EEPROM_SIZE) {
-	while (start < end) {
-	while (--tries) {
-	while ((sbus_readl(bregs + BMAC_TXCFG) & ~(BIGMAC_TXCFG_FIFO)) != 0 &&
-	while (sbus_readl(bregs + BMAC_RXCFG) && --tries)
-	while (i--) {
-		while (--timeout) {
-	while (--timeout) {
-	while (elem != bp->tx_new) {
-	while (!((flags = this->rx_flags) & RXD_OWN)) {
-	while ((sbus_readl(bregs + BMAC_RXCFG) & BIGMAC_RXCFG_ENABLE) != 0)
-	while (--limit) {
-	while (limit--) {
-	while (entry != limit) {
-	while (curr != limit) {
-	while (readl(gp->regs + PCS_MIICTRL) & PCS_MIICTRL_RST) {
-	while (readl(gp->regs + MAC_RXCFG) & MAC_RXCFG_ENAB) {
-	while (1) {
-	while (p->rx_current_fill < ring_max_fill(OCTEON_MGMT_RX_RING_SIZE)) {
-	while (mix_orcnt.s.orcnt) {
-	while (re2.s.code == RING_ENTRY_CODE_MORE) {
-	while (work_done < budget && mix_ircnt.s.ircnt) {
-	while (1) {
-	while (len > 0) {
-			while (--j >= 0)
-	while (works < budget_left) {
-	while (mmio_verify_registers[i]) {
-	while ((intr_status = get_intr_status(dev))) {
-	while (rp->dirty_tx != rp->cur_tx) {
-	while (processed < budget) {
-	while (1) {
-			while (readreg(dev, PP_AutoNegST) & AUTO_NEG_BUSY) {
 	/* while we're testing the interface, leave interrupts disabled */
-	while ((status = readword(dev->base_addr, ISQ_PORT))) {
-				while(count) {
-	while ((status = swab16(nubus_readw(dev->base_addr + ISQ_PORT)))) {
-	while (priv->tx_head - priv->tx_tail > 0) {
-	while (priv->tx_head - priv->tx_tail > 0) {
-	while (rx_len) {
-		while (greth->tx_free < GRETH_TXBD_NUM) {
-	while (1) {
-	while (greth->tx_free < GRETH_TXBD_NUM) {
-	while (GRETH_REGLOAD(greth->regs->mdio) & GRETH_MII_BUSY) {
-		while (!phy_aneg_done(greth->phy) && time_before(jiffies, timeout)) {
-	while (GRETH_REGLOAD(regs->control) & GRETH_RESET) {
-		while (time_before(jiffies, timeout)) {
-	while (used < quota) {
-	while (time_before(jiffies, timeout)) {
-	while (chan->head) {
-	while (tlan_have_eisa) {
-	while (((tmp_c_stat = head_list->c_stat) & TLAN_CSTAT_FRM_CMP)
-	while (((tmp_c_stat = head_list->c_stat) & TLAN_CSTAT_FRM_CMP)
-	while (i < TLAN_NUM_RX_LISTS) {
-	while (value & MII_GC_RESET)
-	while (time_after(timeout, jiffies)) {
-	while (time_after(timeout, jiffies)) {
-	while (1) {
-	while (1) {
-	while (cpmac_read(bus->priv, CPMAC_MDIO_ACCESS(0)) & MDIO_BUSY)
-	while ((val = cpmac_read(bus->priv, CPMAC_MDIO_ACCESS(0))) & MDIO_BUSY)
-	while (cpmac_read(bus->priv, CPMAC_MDIO_ACCESS(0)) & MDIO_BUSY)
-	while (((desc->dataflags & CPMAC_OWN) == 0) && (received < budget)) {
-	while (emac_read(EMAC_SOFTRESET))
-	while ((res = platform_get_resource(priv->pdev, IORESOURCE_IRQ, k))) {
-	while ((res = platform_get_resource(priv->pdev, IORESOURCE_IRQ, i))) {
-		while ((rdl(pep, SDMA_CMD) & (SDMA_CMD_AR | SDMA_CMD_AT))
 	} while (max_retries-- > 0 && delay <= 0);
-	while (pep->rx_desc_count < pep->rx_ring_size) {
-	while (pep->tx_desc_count > 0) {
-	while (budget-- > 0) {
-	while (length > 0) {
-	while (length > 0) {
-	while (xm_read16(hw, port, XM_STAT_CMD)
-	while (--i >= 0) {
-	while ((idx = sky2_read16(hw, STAT_PUT_IDX)) != hw->st_idx) {
-	while ( (sky2_pci_read16(hw, cap + PCI_VPD_ADDR) & PCI_VPD_ADDR_F) == busy) {
-	while (length > 0) {
-	while (offs < vpd_size - 4) {
-	while (rdlp(mp, RXQ_COMMAND) & mask)
-	while (rdlp(mp, TXQ_COMMAND) & mask)
-	while (rx < budget && rxq->rx_desc_count) {
-	while (refilled < budget && rxq->rx_desc_count < rxq->rx_ring_size) {
-	while (reclaimed < budget && txq->tx_desc_count > 0) {
-	while (work_done < budget) {
-			while (--i >= 0)
-			while (--i >= 0)
-	while (1) {
-	while ((skb = tx_queue->tx_skbuff[skb_dirtytx])) {
-	while (!((bdp->status & RXBD_EMPTY) || (--rx_work_limit < 0))) {
-	while (num_queues && left_over_budget) {
-	while (size > 0) {
-	while (end < tab->index) {
-	while (begin < tab->index) {
-	while ((i = gfar_get_next_cluster_start(++i, tab)) != -1) {
-		while ((j = gfar_get_next_cluster_start(++j, tab)) != -1) {
-	while (!list_empty(&ugeth->group_hash_q))
-	while (!list_empty(&ugeth->ind_hash_q))
 	/* while there are received buffers and BD is full (~R_E) */
-	while (!((bd_status & (R_E)) || (--rx_work_limit < 0))) {
-	while ((bd_status & T_R) == 0) {
-			while (readl(fep->hwp + FEC_MIIGSK_ENR) & 4)
-	while (((status = bdp->cbd_sc) & BD_ENET_TX_READY) == 0) {
-	while (!((status = bdp->cbd_sc) & BD_ENET_RX_EMPTY)) {
-			while (--i >= 0) {
-	while (in_be32(&regs->miimind) & MIIMIND_BUSY)
-	while (in_be32(&regs->miimind) & (MIIMIND_NOTVALID | MIIMIND_BUSY))
-	while ((in_be32(&regs->miimind) & MIIMIND_BUSY) && timeout--)
-	while (((sc = CBDR_SC(bdp)) & BD_ENET_RX_EMPTY) == 0) {
-	while (((sc = CBDR_SC(bdp)) & BD_ENET_RX_EMPTY) == 0) {
-	while (((sc = CBDR_SC(bdp)) & BD_ENET_TX_READY) == 0) {
-	while ((int_events = (*fep->ops->get_int_events)(dev)) != 0) {
-	while ((CBDR_SC(prev_bd) & BD_ENET_TX_READY) != 0) {
-	while (!(in_be32(&fec->ievent) & FEC_IEVENT_MII) && --tries)
-	while (!bcom_queue_empty(s)) {
-	while (!bcom_queue_full(rxtsk)) {
-	while (bcom_buffer_done(priv->tx_dmatsk)) {
-	while (bcom_buffer_done(priv->rx_dmatsk)) {
-		while (time_before(jiffies, timeout) &&
-	while ((compl = be_mcc_compl_get(adapter))) {
-	while (total_size) {
 		} while (u64_stats_fetch_retry_bh(&stats->sync, start));
-	while (copied) {
-	while ((eqe = event_get(eq_obj)) != NULL) {
-	while ((eqe = event_get(eq_obj)) != NULL) {
-	while ((rxcp = be_rx_compl_get(rxo)) != NULL) {
-		while ((txcp = be_tx_compl_get(tx_cq))) {
-	while (atomic_read(&txq->used)) {
-		while ((txcp = be_tx_compl_get(&txo->cq))) {
-		while (total_bytes) {
-	while (image_size) {
-		while ((idev = pnp_find_dev(NULL,
-	while ((pdev_ne[this_dev] && platform_get_drvdata(pdev_ne[this_dev])) ||
-                while ((idev = pnp_find_dev(NULL,
-	while ((ei_inb(addr + EN0_ISR) & ENISR_RESET) == 0) {
-	while ((ei_inb(nic_base + EN0_ISR) & ENISR_RDC) == 0) {
-        while ((inb(E33G_STATUS) & ESTAT_DPRDY) == 0)
-    while ((inb(E33G_STATUS) & ESTAT_DPRDY) == 0)
-        while ((inb(E33G_STATUS) & ESTAT_DPRDY) == 0)
-	while ((interrupts = inb_p(e8390_base + EN0_ISR)) != 0 &&
-	while (++rx_pkt_count < 10) 
-	while ((ndev = nubus_find_type(NUBUS_CAT_NETWORK, NUBUS_TYPE_ETHERNET,
-	while (count >= 2) {
-	while (count >= 2) {
-	while (count--)
-	while (count--)
-	while ((interrupts = ei_inb_p(e8390_base + EN0_ISR)) != 0 &&
-	while (++rx_pkt_count < 10) {
-	while(offset_len--) {
-			while (lo_irq > (1<<i)) i++;
-  while (length > 0)
-  while (length > 0)
-	while (2 <= data_left) {
-	while (i < network->rate_len) {
-	while (j < network->rate_ext_len) {
-	while (1) {
-	while (spider_net_get_descr_status(chain->head->hwdescr) ==
-	while (descr != card->tx_chain.head) {
-	while (1) {
-	while (packets_done < budget) {
-	while (regs[i][0]) {
-	while (tc_readl(&tr->MD_CA) & MD_CA_Busy) {
-	while (tc_readl(&tr->MD_CA) & MD_CA_Busy) {
 	while (tc_readl(&tr->PROM_Ctl) & PROM_Busy)
 		while (tc_readl(&tr->PROM_Ctl) & PROM_Busy)
-				while (--i >= 0) {
-		while (--timeout) {
-	while (!((fdctl = le32_to_cpu(lp->rfd_cur->fd.FDCtl)) & FD_CownsFD)) {
-			while (lp->fbl_count < RX_BUF_NUM)
-	while (lp->tfd_start != lp->tfd_end &&
-	while (tc_readl(&tr->MAC_Ctl) & MAC_Reset) {
-	while (packets_done < budget) {
-	while (limit--) {
-	while (priv->dirty_tx != priv->cur_tx) {
-	while (!priv->hw->desc->get_rx_owner(p)) {
-	while ((opt = strsep(&str, ",")) != NULL) {
-	while (limit--) {
-	while (len != 0) {
-	while (rx_queue->notified_count != rx_queue->added_count) {
-	while (bctl & (1 << TXC_BIST_CTRL_STOP_LBN))
-	while (tries--) {
-	while (part != &efx_mtd->part[0]) {
-	while (offset < end) {
-	while (offset < end) {
-	while (offset < end) {
-	while (nvram_types != 0) {
-	while (1) {
-	while (nvram_types != 0) {
-	while (tries) {
-		while (mask) {
-	while (mmd_mask) {
-	while (mmd_mask) {
-	while (*reg_values) {
-	while (!mac_up && tries) {
-	while (dma_mask > 0x7fffffffUL) {
-	while (1) {
-	while (tx_queue->insert_count != tx_queue->write_count) {
-	while (read_ptr != stop_index) {
-	while (tx_queue->read_count != tx_queue->write_count) {
-	while (*p != NULL) {
-	while (1) {
-	while (tx_queue->insert_count != tx_queue->write_count) {
-	while (1) {
-	while (tx_queue->tso_headers_free != NULL)
-	while (index != stop) {
-	while (pos < len) {
-	while (pos < len) {
-	while (1) {
-		while ((dev = pci_get_device(PCI_VENDOR_ID_SOLARFLARE,
-			while (k < lst_per_page) {
-				while (k != rxd_count[nic->rxd_mode]) {
-				while (k != rxd_count[nic->rxd_mode]) {
-	while ((tdev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, tdev)) != NULL) {
-		while (herc_act_dtx_cfg[dtx_cnt] != END_SIGN) {
-		while (xena_dtx_cfg[dtx_cnt] != END_SIGN) {
-		while (true) {
-	while (fix_mac[i] != END_SIGN) {
-	while (alloc_tab < alloc_cnt) {
-	while (RXD_IS_UP2DT(rxdp)) {
-	while ((!(txdlp->Control_1 & TXD_LIST_OWN_XENA)) &&
-		while (i < 4) {
-		while (i < 4) {
-		while (exit_cnt < 5) {
-		while (exit_cnt < 5) {
-		while (exit_cnt < 5) {
-		while (exit_cnt < 5) {
-	while (len) {
-	while (cnt < 20) {
-	while (iteration < 2) {
-		while (tmp >= swstats->num_aggregations) {
-	while (test_and_set_bit(__S2IO_STATE_LINK_TASK, &(sp->state)))
-	while (do_io) {
-		while (*ptr == TCPOPT_NOP)
-	while ((status != VXGE_HW_OK) && retry++ < max_retry) {
-	while (vxge_hw_channel_dtr_count(channel) > 0) {
-				while (j < max_entries) {
-				while (j < max_entries) {
-				while (j < max_entries) {
-				while (j < max_entries) {
 	} while (more);
 	as we can't specify the index while adding new mac address */
-	while (memcmp(mac->macaddr, macaddr, ETH_ALEN)) {
-			while (test_bit(vp_id, &vdev->vp_reset))
-	while (test_and_set_bit(__VXGE_STATE_RESET_CARD, &vdev->state))
-	while (processed < budget) {
-	while (1) {
-			while (--i >= 0)
-			while (--i >= 0)
-			while (--i >= 0)
-			while (--i >= 0)
-	while ((cycles < MAX_MDIO_RETRIES) &&
-	while (received < budget) {
-	while ((phys = qmgr_get_entry(TXDONE_QUEUE)) != 0) {
-	while (queue_get_desc(RXFREE_QUEUE(port->id), port, 0) >= 0)
-		while (queue_get_desc(port->plat->rxq, port, 0) >= 0)
-	while (queue_get_desc(TX_QUEUE(port->id), port, 1) >= 0)
-		while (queue_get_desc(port->plat->txreadyq, port, 1) >= 0)
-	while (!(dnet_readw_mac(bp, DNET_INTERNAL_GMII_MNG_CTL_REG)
-	while (!(dnet_readw_mac(bp, DNET_INTERNAL_GMII_MNG_CTL_REG)
-	while (!(dnet_readw_mac(bp, DNET_INTERNAL_GMII_MNG_CTL_REG)
-	while (!(dnet_readw_mac(bp, DNET_INTERNAL_GMII_MNG_CTL_REG)
-	while (npackets < budget) {
 		 * break out of while loop if there are no more
-	while (len >= 2) {
-	while (!(lowb(priv->rx_ring[entry]->RMD1) & RF_OWN)) {
-	while ((csr0 = lance->RDP) & (ERR | RINT | TINT) && --boguscnt >= 0) {
-			while (dirty_tx < priv->cur_tx) {
-	while (reg_val & PHY_CMD_ACTIVE)
-	while (reg_val & PHY_CMD_ACTIVE)
-	while (lp->tx_complete_idx != lp->tx_idx){
-		while(1) {
-	while ((csr0 = inw(dev->base_addr + LANCE_DATA)) & 0x8600 &&
-			while (dirty_tx < lp->cur_tx) {
-	while (lp->rx_ring[entry].base >= 0) {
-		while (sbus_readl(lp->dregs + DMA_CSR) & DMA_FIFO_ISDRAIN)
-	while (len >= 4) {
-		while (len >= 4) {
-		while (len >= 4) {
-		while (len >= 4) {
-	while (len >= 4) {
-  while (mace_read(lp, ioaddr, MACE_BIUCC) & 0x01) {
-  while (mace_read(lp, ioaddr, MACE_IAC) & MACE_IAC_ADDRCHG)
-  while (
     while (mace_read(lp, ioaddr, MACE_IAC) & MACE_IAC_ADDRCHG)
-		while( old_tx != lp->new_tx) {
-	while( (MEM->rx_head[entry].flag & RMD1_OWN) == RMD1_OWN_HOST ) {
-	while (readl(mii_control_reg) & MAC_MII_BUSY) {
-	while (readl(mii_control_reg) & MAC_MII_BUSY) {
-	while (readl(mii_control_reg) & MAC_MII_BUSY) {
-	while (buff_stat & RX_T_DONE)  {
-	while (ptxd->buff_stat & TX_T_DONE) {
-		while (time_before(jiffies, delay))
-		while (lp->tx_old != lp->tx_new)
-		while (lp->tx_old != lp->tx_new)
-		while (lp->tx_old != lp->tx_new)
-	while (length > 8) {
-	while (length > 0) {
-	while (length > 8) {
-	while (length > 0) {
-		while ((read_rreg(dev->base_addr, CTRL1) & CTRL1_SPND) == 0) {
-        while (lp->tx_old != lp->tx_new)
-			while(1) {
-	while(--bcnt) {
-	while(p->xmit_queued)
-	while(!( (rmdstat = rmdp->u.s.status) & RCV_OWN))
-	while (--new >= lp->rx_ring_size) {
-		while ((lp->rx_ring[x].status & teststatus) && (ticks < 200)) {
-	while (x < numbuffs && !rc) {
-	while (!(a->read_csr(ioaddr, CSR5) & CSR5_SUSPEND)) {
-	while (npackets < budget && (short)le16_to_cpu(rxp->status) >= 0) {
-	while (dirty_tx != lp->cur_tx) {
-	while ((csr0 & 0x8f00) && --boguscnt >= 0) {
-	while (pcnet32_dev) {
-	while( len-- ) {
 	} while(0)
-	while( lp->cur_tx >= TX_RING_SIZE && lp->dirty_tx >= TX_RING_SIZE ) {
-	while( ((csr0 = DREG) & (CSR0_ERR | CSR0_TINT | CSR0_RINT)) &&
-			while( dirty_tx < lp->cur_tx) {
-	while( (MEM->rx_head[entry].flag & RMD1_OWN) == RMD1_OWN_HOST ) {
-		while (clen--) {
-		while (clen--) {
-		while (clen--) {
-		while (clen--) {
-		while (clen--) {
-		while (clen--) {
-		while (clen--) {
-		while (clen--) {
-		while (dev) {
-	while (root_lance_dev) {
-	while (!ftmac100_rxdes_owned_by_dma(rxdes)) {
-	while (ftgmac100_rxdes_packet_ready(rxdes)) {
-	while ((___rval = mace->eth.phy_data) & MDIO_BUSY) {	\
-	while (priv->rx_write != fifo_rptr) {
-	while (priv->tx_read != rptr) {
-	while (status & 0xff) {
-	while (1) {
-	while (tries--) {
-	while (w0 & ERXBUF_V) {
-	while (o_entry != tx_entry) {
-		while (n_entry != rx_entry) {
-	while (miicontrol & BMCR_RESET) {
-	while (np->put_rx.orig != less_rx) {
-	while (np->put_rx.ex != less_rx) {
 	} while (size);
 	} while (size);
-	while ((np->get_tx.orig != np->put_tx.orig) &&
-	while ((np->get_tx.ex != np->put_tx.ex) &&
-	while ((np->get_rx.orig != np->put_rx.orig) &&
-	while ((np->get_rx.ex != np->put_rx.ex) &&
-	while (time_before(jiffies, start + 5*HZ)) {
-			while (!(phylink & PHY_LINK_SPEEDDPU_RESOLVED) &&
-	while (limit > 0) {
-	while (!atomic_dec_and_test(&jme->link_changing)) {
-		while (atomic_read(&jme->link_changing) != 1)
-	while (atomic_read(&jme->rx_empty) > 0) {
-	while (!(phylink & PHY_LINK_UP) && (to -= 10) > 0) {
-	while ((val & SMBCSR_BUSY) && --to) {
-	while ((val & SMBINTF_HWCMD) && --to) {
-	while ((val & SMBCSR_BUSY) && --to) {
-	while ((val & SMBINTF_HWCMD) && --to) {
-	while (loops != 0) {
-	while (loops != 0) {
-	while (limit--) {
-	while (limit--) {
-	while (++tick < 195000) {
-	while (sw_idx != hw_idx) {
-		while (ri->fragmented) {
-			while (ri->fragmented) {
-	while (sw_idx != hw_idx && budget > 0) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-		while (len > TG3_TX_BD_DMA_MAX && *budget) {
-	while (txb->fragmented) {
-		while (txb->fragmented) {
-			while (i < TG3_RSS_INDIR_TBL_SIZE) {
-	while (rx_idx != rx_start_idx) {
-	while (cursize < tp->nvram_size) {
-	while (len) {
-		while (pci_id->vendor != 0) {
-		while (pci_id->vendor != 0) {
-	while (1) {
-	while ((*wb_comp & ~DMAE_PCI_ERR_FLAG) != DMAE_COMP_VAL) {
-	while (len > dmae_wr_max) {
-	while ((crd != init_crd) && ((u32)SUB_S32(crd_freed, crd_freed_start) <
-	while (occup && ((u32)SUB_S32(freed, freed_start) < to_free)) {
-	while ((val = REG_RD(bp, reg)) != expected && cur_cnt--)
-	while (count) {
-	while (count) {
-	while (count) {
-	while (bnx2x_func_get_state(bp, &bp->func_obj) !=
-	while (1) {
-			while (tout && REG_RD(bp, IGU_REG_RESET_MEMORIES)) {
-	while ((init_crd != crd) && count) {
-	while (((val >> MCPR_IMC_COMMAND_IMC_STATUS_BITSHIFT) & 0x3) != 1) {
-	while (((val >> MCPR_IMC_COMMAND_IMC_STATUS_BITSHIFT) & 0x3) != 1) {
-	while (shift > 0) {
 	} while ((rc != 0) && (++cnt < I2C_WA_RETRY_CNT));
-	while (*stats_comp != DMAE_COMP_VAL) {
-	while ((buf_size > sizeof(u32)) && (rc == 0)) {
-	while ((written_so_far < buf_size) && (rc == 0)) {
-		while (bnx2x_link_test(bp, is_serdes) && cnt--)
-	while (!list_empty(&o->pending_comp)) {
-	while (!list_empty(&o->exe_queue)) {
-	while (cnt--) {
-	while (cnt--) {
-		while (!bnx2x_exe_queue_empty(&o->exe_queue) &&
-	while (cmd_pos->data.macs_num) {
-	while ((MAX_PFC_PRIORITIES == pri) && (0 != index)) {
-	while (required_num_of_pg < pg_help_data->num_of_pg) {
-	while (num_spread_of_entries && num_of_app_pri > 0) {
-	while (nbd > 0) {
-	while (sw_cons != hw_cons) {
-	while (sw_comp_cons != hw_comp_cons) {
-			while (sw_cons != sw_prod) {
-	while (rc != 0) {
-	while (1) {
-	while (vcid) {
-	while (val & BNX2_RBUF_STATUS1_FREE_COUNT) {
-	while (good_mbuf_cnt) {
-	while (sw_cons != hw_cons) {
-	while (sw_cons != hw_cons) {
-	while (1) {
-	while (1) {
-		while (len32 > 4 && rc == 0) {
-	while ((written < len32) && (rc == 0)) {
-	while (ring_size > MAX_RX_DESC_CNT) {
-	while ((max & num_rings) == 0)
-	while (total_vecs >= BNX2_MIN_MSIX_VEC) {
-	while (offset < BNX2_REGDUMP_LEN) {
-		while ((amd_8132 = pci_get_device(PCI_VENDOR_ID_AMD,
-	while (work_to_do-- > 0) {
-	while (retry < 3) {
-		while (test_and_set_bit(SK_F_OFFLD_SCHED, &csk->flags))
-	while (test_and_set_bit(SK_F_OFFLD_SCHED, &csk->flags))
-	while ((atomic_read(&ulp_ops->ref_count) != 0) && (i < 20)) {
-	while (test_bit(ULP_F_CALL_PENDING, &cp->ulp_flags[ulp_type]) &&
-		while (test_bit(CTX_FL_DELETE_WAIT, &ctx->ctx_flags))
-	while (num_cqes) {
-		while (j < num_cqes) {
-	while ((i != hw_prod) && (kcqe_cnt < MAX_COMPLETED_KCQE)) {
-	while (sw_cons != hw_cons) {
-	while ((kcqe_cnt = cnic_get_kcqes(dev, &cp->kcq1))) {
-	while ((kcqe_cnt = cnic_get_kcqes(dev, info))) {
-	while (1) {
-	while (atomic_read(&csk->ref_count) != 1)
-		while (cp->status_blk.bnx2->status_completion_producer_index &&
-		while (sblk->status_completion_producer_index && i < 10) {
-	while (!(*cp->rx_cons_ptr != 0) && i < 10) {
-		while (test_bit(CNIC_LCL_FL_L2_WAIT, &cp->cnic_local_flags) &&
-		while (test_bit(CNIC_LCL_FL_L2_WAIT, &cp->cnic_local_flags) &&
-		while (cp->udev->uio_dev != -1 && i < 15) {
-	while ((atomic_read(&dev->ref_count) != 0) && i < 10) {
-	while (!list_empty(&cnic_dev_list)) {
-	while (!list_empty(&cnic_udev_list)) {
-	while (priv->rx_desc_count < priv->rx_ring_size) {
-	while (priv->tx_desc_count < priv->tx_ring_size) {
-	while (cons != prod && budget > 0) {
-	while (frag_len_left) {
-		while (frag_len_left) {
-	while ((type = ioread8(&r->type)) != RES_TYPE_EOL) {
 	} while (csum != words[0]);
-	while (vnic_rq_desc_used(rq) > 0) {
-	while (vnic_wq_desc_used(wq) > 0) {
-	while (i--) {
-	while(i--) {
-	while (!data->txfree || data->txhead != data->txtail) {
-	while (data->rxfree && done != budget) {
-	while (data->rxfree != TSI108_RXRING_LEN && done != budget) {
-	while(i--) {
-	while(i--){
-	while (--i) {
-	while (tsi108_read_mii(data, MII_BMCR) & BMCR_ANRESTART)
-	while (!((phyval = tsi108_read_mii(data, MII_BMSR)) &
-	while (!data->txfree || data->txhead != data->txtail) {
-	while (data->rxfree) {
-	while ((ep->rx_ring[entry].rxstatus & DescOwn) == 0) {
-		while (wordcount--)
-		while (wordcount--)
-		while (wordcount--)
-		while (wordcount--)
-		while (wordcount--)
-		while (wordcount--)
-		while (wordcount--)
-		while (wordcount--)
-	while ((tx_stat = smsc911x_tx_get_txstatus(pdata)) != 0) {
-		while (pktwords--)
-	while (npackets < budget) {
-	while ((smsc911x_reg_read(pdata, E2P_CMD) & E2P_CMD_EPC_BUSY_) &&
-	while (timeout--) {
 	 * forbidden while this bit isn't set. Try for 100ms
-	while (!(smsc911x_reg_read(pdata, PMT_CTRL) & PMT_CTRL_READY_) && --to)
 	 * forbidden while this bit isn't set. Try for 100ms and return -EIO
-	while (!(smsc911x_reg_read(pdata, PMT_CTRL) & PMT_CTRL_READY_) && --to)
-	while (--timeout) {
-	while (--timeout) {
-	while (pd->rx_ring_tail != pd->rx_ring_head) {
-	while (pd->tx_ring_tail != pd->tx_ring_head) {
-	while (timeout--) {
-		while (SMC_GET_MMU_CMD(lp) & MC_BUSY) {		\
-		while (trials--) {
-	while (resets--) {
-	while (--timeout && (SMC_GET_E2P_CMD(lp) & E2P_CMD_EPC_BUSY_))
-		while (fifo_count--)
-	while (((SMC_GET_TX_FIFO_INF(lp) & TX_FIFO_INF_TSUSED_) >> 16) != 0) {
-		while (trials--) {
-	while ( timeout ) {
-		while ( trials-- ) {
-	while (lp->rxrcommit < MAX_RX_PDL) {
-	while (packets-- > 0) {
-	while ((lp->rxrcommit > hp100_inb(RX_PDL))) {
-			while (cards > 0)
-	while ( (rd_port(ioaddr) & rd_port(ioaddr) & rd_port(ioaddr) &
-	while(pad--)
-	while (wis) {
-	while (to_alloc--) {
-	while (cmpl->valid && packets < budget) {
-	while (test_and_set_bit(BNAD_TXQ_FREE_SENT, &tcb->flags))
-		while (test_and_set_bit(BNAD_TXQ_FREE_SENT, &tcb->flags))
-		while (test_bit(BNAD_FP_IN_RX_PATH, &rx_ctrl->flags))
-	while (!list_empty(&rxf->mcast_pending_del_q)) {
-		while (!(vlan_pending_bitmask & 0x1)) {
-	while (!list_empty(&rxf->mcast_pending_del_q)) {
-	while (!list_empty(&rxf->mcast_active_q)) {
-	while (!list_empty(&rxf->ucast_pending_add_q)) {
-	while (!list_empty(&rxf->mcast_pending_add_q)) {
-	while (!list_empty(&rxf->mcast_pending_add_q)) {
-	while (!list_empty(&rxf->mcast_active_q)) {
-	while (!list_empty(&list_head)) {
-	while (!list_empty(&list_head)) {
-	while (!list_empty(&rxf->ucast_pending_del_q)) {
-	while (!list_empty(&rxf->ucast_active_q)) {
-	while (!list_empty(&rx->rxp_q)) {
-	while (!list_empty(&tx->txq_q)) {
-	while ((r32 & 1) && (cnt < BFA_SEM_SPINCNT)) {
-	while (!list_empty(&mod->cmd_q))
-	while (!list_empty(&cmdq->pending_q)) {
-	while (len) {
-	while (!list_empty(&cmdq->pending_q)) {
-	while (rspq->consumer_index != rspq->producer_index) {
-	while (len) {
 	/* Copy Rxf stats to SW area, scatter them while copying */
 	/* Copy Txf stats to SW area, scatter them while copying */
-	while (frag_idx < nfrags && curflit < WR_FLITS) {
-	while (n--) {
-	while (q->credits--) {
-	while (n--) {
-		while (sgl_flits) {
-	while (q->in_use < q->size &&
-	while ((skb = skb_peek(&q->sendq)) != NULL) {
-	while (work_done < budget) {
-	while (likely(budget_left && is_new_response(r, q))) {
-				while (--qidx >= 0)
-	while (adap->sge.qs[0].rspq.offload_pkts < init_cnt + n) {
-		while (t.len) {
-		while (v) {
-	while ((err = pci_enable_msix(adap->pdev, entries, vectors)) > 0)
-				while (dev->master)
-	while (n--)
-	while (td->tid_release_list) {
-	while (n--) {
-		while (--nstids)
-		while (--natids)
-	while (1) {
-	while (n--) {
-	while (nregs--) {
-	while (n--) {
-			while ((val & F_BUSY) && attempts--)
-	while (1) {
-	while (start <= end) {
-	while (fp-- > si->frags)
-	while (n--) {
-	while (n--) {
-	while (n) {
-	while (n--) {
-	while ((skb = __skb_dequeue(&q->sendq)) != NULL) {
-	while ((skb = skb_peek(&q->sendq)) != NULL && !q->full) {
-	while (frags--) {
-	while (likely(budget_left)) {
-	while (--rdmaqidx >= 0)
-	while (--ofldqidx >= 0)
-	while (--ethqidx >= 0)
-	while (n--)
-	while (count) {
-	while (adap->tid_release_head) {
-		while (!(skb = alloc_skb(sizeof(struct cpl_tid_release),
-		while (--natids)
-	while (i < NMTUS - 1 && mtus[i + 1] <= mtu)
-	while ((err = pci_enable_msix(adap->pdev, entries, want)) >= need)
-	while (1) {
-	while (nregs--) {
 } while (0)
-	while (1) {
-	while (start <= end) {
-	while (n > 0) {
-		while (nq > 0) {
-	while (nparams--) {
-		while ((adap->params.portvec & (1 << j)) == 0)
-	while (e->arpq_head) {
-		while (e->arpq_head) {
-	while (arpq) {
-	while (fp-- > si->frags)
-	while (n--) {
-	while (n--) {
-	while (n) {
-	while (n--) {
-	while (frag--)
-	while (frags--) {
-	while (likely(budget_left)) {
-	while (n > 0) {
-		while (nq > 0) {
-			while (nqbuf) {
-	while (rem) {
-	while (--rxq >= 0)
-	while ((err = pci_enable_msix(adapter->pdev, entries, want)) >= need)
-	while (q->credits--) {
-	while (n--) {
-	while (q->credits < q->size) {
-		while (len > SGE_TX_DESC_MAX_PLEN) {
-			while (len > SGE_TX_DESC_MAX_PLEN) {
-		while (*desc_len > SGE_TX_DESC_MAX_PLEN) {
-	while ((skb = sched_skb(sge, NULL, credits)) != NULL) {
-	while (done < budget && e->GenerationBit == q->genbit) {
-	while (i >= 0) {
-	while (1) {
-	while (1) {
-	while (--i >= 0) {
-	while (!MACB_BFEXT(IDLE, macb_readl(bp, NSR)))
-	while (!MACB_BFEXT(IDLE, macb_readl(bp, NSR)))
-	while (status) {
-	while (!(at91_emac_read(AT91_EMAC_SR) & AT91_EMAC_SR_IDLE)) {
-	while (dlist->descriptors[lp->rxBuffIndex].addr & EMAC_DESC_DONE) {
-	while ((detected != 0) && (phy_address < 32)) {
-	while ((rx < budget) && !complete) {
-	while ((ch->dma.desc_base[ch->tx_free].ctl &
-	while (tx_index--) {
-	while (rx_index--)
-		while (test_bit(NAPI_STATE_SCHED, &priv->rx_cq[i].napi.state))
-	while (npages > 0) {
-		while (1 << cur_order > npages)
-	while (i > start) {
-	while (cmd_pending(dev)) {
-	while (cmd_pending(dev) && time_before(jiffies, end))
-	while (ring->cons != ring->prod) {
-		while (t & ((1 << buf->page_shift) - 1)) {
-	while ((eqe = next_eqe_sw(eq))) {
-	while (i >= 0) {
-	while (i--) {
-	while (i--)
-		while (ring->actual_size > new_size) {
-	while (ring->cons != ring->prod) {
-	while (ring_ind >= 0) {
 	/* Collect used fragments while replacing them in the HW descirptors */
-	while (nr > 0) {
-	while (XNOR(cqe->owner_sr_opcode & MLX4_CQE_OWNER_MASK,
-	while (buf_size < eff_mtu) {
-	while (o > order) {
-	while (test_bit(seg ^ 1, buddy->bits[order])) {
-	while (npages > 0) {
-	while ((ioread32(reg) & bit) && --tmp)
-	while ((ioread32(reg) & bit) && --tmp)
-	while ((cleaned_count--)) {
-	while ((tx_desc->gbec_status & DSC_INIT16) == 0x0000) {
-	while (*work_done < work_to_do) {
-		while (cnt > 0) {
-	while (cnt > 0) {
-	while (!(rxdesc->status & cpu_to_edmac(mdp, RD_RACT))) {
-	while (i < nr_of_pages) {
-	while (pfn < end_pfn) {
-	while (((1U << ld) - 1) < queue_entries)
-	while ((processed < budget) && cqe) {
-	while (cqe && (quota > 0)) {
-	while (rx != budget) {
-	while (eqe) {
-	while (eqe) {
-	while (--i >= 0) {
-	while (--i >= 0)
-	while ((eth_dn = of_get_next_child(lhea_dn, eth_dn))) {
-	while ((eth_dn = of_get_next_child(lhea_dn, eth_dn))) {
-	while ((in_be32(&p->mr) & TAH_MR_SR) && n)
-	while (--limit) {
-	while (--limit) {
-	while (test_and_set_bit(MAL_COMMAC_POLL_DISABLED, &commac->flags))
-	while ((get_mal_dcrn(mal, MAL_CFG) & MAL_CFG_SR) && n)
-		while (!(in_be32(&p->mr0) & EMAC_MR0_TXI) && n) {
-			while (!(r = in_be32(&p->mr0) & EMAC_MR0_RXI) && n) {
-		while (!(in_be32(&p->mr0) & EMAC_MR0_RXI) && n) {
-	while ((in_be32(&p->mr0) & EMAC_MR0_SRST) && n)
-	while (!emac_phy_done(dev, in_be32(&p->stacr))) {
-	while (!emac_phy_done(dev, (r = in_be32(&p->stacr)))) {
-	while (!emac_phy_done(dev, in_be32(&p->stacr))) {
-	while (!emac_phy_done(dev, in_be32(&p->stacr))) {
-	while (1) {
-	while (slot != dev->tx_slot) {
-	while (budget > 0) {
-	while (1) {
-	while((np = of_find_all_nodes(np)) != NULL) {
-	while (done < length) {
-	while (nfrags--)
-	       while (!(readl(&ch->dmas) & DMA_STAT_HALT))
-	while (IS_DMA_FINISHED(td->control)) {
-	while ((readl(&lp->eth_regs->ethintfc) & ETH_INT_FC_RIP))
-	while (count) {
-			while ((result_index & RT_IDX_MR) == 0)
-				while ((result_index & MAC_ADDR_MR) == 0) {
-	while (count) {
-	while (count) {
-	while (rx_ring->lbq_free_cnt > 32) {
-	while (rx_ring->sbq_free_cnt > 16) {
-		while (length > 0) {
-	while (prod != rx_ring->cnsmr_idx) {
-	while (prod != rx_ring->cnsmr_idx) {
-	while (curr_idx != clean_idx) {
-	while (!test_bit(QL_ADAPTER_UP, &qdev->flags))
-		while (i-- && !test_bit(QL_ADAPTER_UP, &qdev->flags)) {
-	while (ql_read32(qdev, STS) & STS_PI) {
-	while (i < 10) {
-	while (count) {
-	while (lrg_buf_cb) {
-		while (qdev->small_buf_release_cnt >= 16) {
-		while ((qdev->lrg_buf_release_cnt >= 16) &&
-	while ((le32_to_cpu(*(qdev->prsp_producer_index)) !=
-	while (!test_bit(QL_ADAPTER_UP, &qdev->flags))
-	while (npar_state != QLCNIC_DEV_NPAR_OPER && --npar_opt_timeo) {
-		while (copied < hdr_len) {
-	while (--i >= 0) {
-	while (sw_consumer != hw_consumer) {
-	while (test_and_set_bit(__QLCNIC_RESETTING, &adapter->state))
-	while (val-- > 0) {
-	while (count-- > 0)
-	while (sum >> 32)
-	while (!done) {
-	while (!list_empty(head)) {
-				while (timeout <= ctr->timeout) {
-		while (cnt) {
-		while (cnt) {
-	while (reg_read != 0) {
-		while (ops_index < ops_cnt) {
-	while (done == 0) {
-	while (i < (entry_size/sizeof(struct qlcnic_flt_entry))) {
-	while (desc_cnt > 0 && i < 8) {
-	while (count < max) {
-	while (!list_empty(head)) {
-	while (!list_empty(head)) {
-	while (done == 0) {
-		while ((ctrl & 0x1) != 0) {
-	while (desc_cnt > 0 && i < 8) {
-	while (count < max) {
-	while (sw_consumer != hw_consumer) {
-	while (!list_empty(head)) {
-	while (!list_empty(head)) {
-	while (copied < hdr_len) {
-	while (--i >= 0) {
-	while (test_and_set_bit(__NX_RESETTING, &adapter->state))
-	while (!list_empty(head)) {
-	while (!done) {
-	while (NXRD32(adapter, NETXEN_NIU_FRAME_COUNT) && ++cnt < 20)
-	while (i < adapter->max_mc_count)
-	while (!list_empty(head)) {
-	while (!list_empty(head)) {
-	while (bdx_rxdb_available(db) > 0) {
-	while (dno > 0) {
-	while (size > 0) {
-	while (f->m.wptr != f->m.rptr) {
-	while (db->rptr != db->wptr) {
-	while (size > 0) {
-	while (known_revisions[i] != 0xffff &&
-	while (desc_status < 0) { /* e.g. & DescOwn */
-			while(i > 0) { /* free any that were allocated successfully */
-			while(i > 0) { /* free any that were mapped successfully */
-			while (lp->tx_skb[entry] != NULL) {
-	while (sonic_rda_get(dev, entry, SONIC_RD_IN_USE) == 0) {
-	while (i++ < 100) {
-	while (i++ < 100) {
-	while ((known_revisions[i] != 0xffff) &&
-	while (1) {
-	while (1) {
-		while (destoffs < tmplen) {
-	while ((ndev = nubus_find_type(NUBUS_CAT_NETWORK,
-	while ((CMDSTS_OWN & (cmdsts = le32_to_cpu(desc[DESC_CMDSTS]))) &&
-	while ((tx_done_idx != dev->tx_free_idx) &&
-	while (IPG_AC_RESET_BUSY & ipg_r32(ASIC_CTRL)) {
-	while ((le64_to_cpu(rxfd->rfs) & IPG_RFS_RFDDONE) &&
-	while (length != 0) {
-			while (length > 1) {
-		while (mib->cnt_ptr < PORT_COUNTER_NUM) {
-	while (!(alloc & 1)) {
-		while (alloc) {
-	while (hw->tx_int_mask) {
-	while (info->avail < info->alloc) {
-	while (left--) {
-	while (left--) {
-	while (left--) {
-	while (range->end > range->start) {
-	while (range->end > range->start) {
-	while (j < MAC_ADDR_LEN) {
-	while (received < budget
-	while (reset_timeout--) {
-	while (!last) {
-	while (!skb_queue_empty(&ks->txq)) {
-	while (state != EEPROM_COMPLETE) {
-	while (state != EEPROM_COMPLETE) {
-	while (len--)
-	while (len--)
-	while (ks->frame_cnt--) {
-	while (--length >= 0) {
-		while (len > 0) {
-		while (len > 0) {
-				while (len > 0) {
-				while (len > 0) {
-	while (rx_data) {
-	while ((bfin_read_EMAC_STAADD()) & STABUSY) {
-		while ((!(bfin_read_EMAC_PTP_ISTAT() & TXTL)) && (--timeout_cnt))
-		while (tx_list_head->status.status_word == 0) {
-	while (tx_list_head != current_tx_ptr) {
-	while (--bits >= 0) {
-	while (--work_limit >= 0) {
-	while (skb && !netif_queue_stopped(dev) &&
-	while (!skb_queue_empty(&lp->cache.queue) && !netif_queue_stopped(dev) && lp->tx_enable) {
-    while (count--) {
-	while (de4x5_reset_phy(dev)<0) udelay(100);/* Wait for reset */
 	    while (mii_rd(MII_CR, lp->phy[k].addr, DE4X5_MII) & MII_CR_RST);
-					while (timeout-- &&
-					while (timeout-- &&
-	while (timeout-- &&
-	while(db->tx_packet_cnt) {
-	while(db->rx_avail_cnt) {
-	while (db->rx_avail_cnt) {
-	while(db->rx_avail_cnt < RX_DESC_CNT) {
-	while(1)
-	while (--rx_work) {
-	while (tx_tail != tx_head) {
-	while (--i) {
-	while(db->tx_packet_cnt) {
-	while(db->rx_avail_cnt) {
-	while (db->rx_avail_cnt) {
-	while(db->rx_avail_cnt < RX_DESC_CNT) {
-               while ( ! (tp->rx_ring[entry].status & cpu_to_le32(DescOwned))) {
-	while ( ! (tp->rx_ring[entry].status & cpu_to_le32(DescOwned))) {
-	while (counter > 0) {
 		/* wait a while */
-	while (counter > 0) {
 		/* wait a while */
-	while (counter > 0) {
 		/* wait a while */
-	while (counter > 0) {
 		/* wait a while */
-	while (counter > 0) {
 		/* wait a while */
-	while (counter > 0) {
 		/* wait a while */
-	while (inb(EWRK3_RQC) && !status) {	/* Whilst there's incoming data */
-	while ((tx_status = inb(EWRK3_TDQ)) > 0) {	/* Whilst there's old buffers */
-	while( io[i] && irq[i] ) {
-    while (eth_status & FullPktRcvd) {
-	while (i++ < 9)
-	while (dbdma_ld32(&dmap->status) & RUN)
-	while (--nb >= 0) {
-	while (--nb >= 0) {
-	while (1) {
-	while (1) {
-	while (1) {
-    while (--i) {
 	while ((in_8(&mb->iac) & ADDRCHG) != 0)
 	while ((in_8(&mb->iac) & ADDRCHG) != 0)
 	    while ((in_8(&mb->iac) & ADDRCHG) != 0)
-    while (in_8(&mb->pr) & XMTSV) {
-	while (--i) {
 		while ((mb->iac & ADDRCHG) != 0)
 		while ((mb->iac & ADDRCHG) != 0)
 			while ((mb->iac & ADDRCHG) != 0)
-		while (mp->rx_tail < head) {
-	while (in_be32(lp->base_addr + XEL_MDIOCTRL_OFFSET) &
-	while (!(temac_ior(lp, XTE_RDY0_OFFSET) & XTE_RDY0_HARD_ACS_RDY_MASK)) {
-	while (tp->opt) {
-	while (temac_indirect_in32(lp, XTE_RXC1_OFFSET) & XTE_RXC1_RXRST_MASK) {
-	while (temac_indirect_in32(lp, XTE_TXC_OFFSET) & XTE_TXC_TXRST_MASK) {
-	while (lp->dma_in(lp, DMA_CONTROL_REG) & DMA_CONTROL_RST) {
-	while (stat & STS_CTRL_APP0_CMPLT) {
-	while ((bdstat & STS_CTRL_APP0_CMPLT)) {
-	while (1) {
-	while (entry != np->cur_tx) {
-	while (1) {
-	while (entry != np->cur_rx) {
-	while (i-- > 0) {
-	while (ioread32 (ioaddr) & (ResetBusy << 16)) {
-	while (--bits >= 0) {
-	while (1) {
-	while ((((value = inb(STATUS_PORT)) & READY) == 0) && (cnt <= 1000))
-	while (count-- > 0) {
-	while (count-- > 0) {
-	while (corkscrew_scan(-1))
-		while((idev = pnp_find_dev(NULL,
-		while (!(vp->available_media & media_tbl[dev->if_port].mask))
-		while (--i > 0 && (tx_status = inb(ioaddr + TxStatus)) > 0) {
-			while (lp->cur_tx - dirty_tx > 0) {
-	while ((rx_status = inw(ioaddr + RxStatus)) > 0) {
-	while ((rx_status = vp->rx_ring[entry].status) & RxDComplete) {
-	while (!list_empty(&root_corkscrew_dev)) {
-		while (--i > 0	&&	(tx_status = inb(ioaddr + TX_STATUS)) > 0) {
-	while ((status = inw(ioaddr + EL3_STATUS)) &
-				while (--i>0 && (tx_status = inb(ioaddr + TX_STATUS)) > 0) {
-	while ((rx_status = inw(ioaddr + RX_STATUS)) > 0) {
-		while (inw(ioaddr + EL3_STATUS) & 0x1000)
-	while (-- bits >= 0) {
-	while ((status = inw(ioaddr + EL3_STATUS)) &
-	while (!((rx_status = inw(ioaddr + RxStatus)) & 0x8000) &&
-		while (i < 0x21)
-			while (! (vp->available_media & media_tbl[dev->if_port].mask))
-		while (--i > 0	&&	(tx_status = ioread8(ioaddr + TxStatus)) > 0) {
-			while (vp->cur_tx - dirty_tx > 0) {
-	while ((rx_status = ioread16(ioaddr + RxStatus)) > 0) {
-	while ((rx_status = le32_to_cpu(vp->rx_ring[entry].status)) & RxDComplete){
-	while (-- bits >= 0) {
-			while (pad--)		/* Zero fill buffer tail */
-	while(cleared != ready) {
-	while(unlikely(typhoon_num_free_tx(txRing) < (numDesc + 2)))
-	while (numSections--) {
-		while(section_len) {
-	while(lastRead != le32_to_cpu(*index)) {
-	while(rxaddr != local_ready && budget > 0) {
-    while ((status = inw(ioaddr + EL3_STATUS)) &
-    while (!((rx_status = inw(ioaddr + RX_STATUS)) & 0x8000) &&
-	while (--delay) {
-	while (--delay) {
-	while (mask) {
-	while (mask) {
-	while (mask) {
-	while (np->really_rx_count != RX_RING_SIZE) {
-		while (np->lack_rxbuf->skbuff)
-	while (--delay) {
-		while (np->really_tx_count) {
-	while (!(np->cur_rx->status & RXOWN) && np->cur_rx->skbuff) {
-					while (desno <= np->really_rx_count) {
-	while (status) {
-		while (fill_level--)
-	while (limit--) {
-	while (limit--) {
-	while (size-- > 0) {
-	while (limit--) {
-	while (limit--) {
-	while (count < limit && !(descptr->status & DSC_OWNER_MAC)) {
-	while (priv->tx_free_desc < TX_DCNT) {
-		while (i < MCAST_MAX) {
-	while (entry != cur_entry) {
-	while (skb->len > 0) {
-	while ((skb = skb_dequeue(&dev->rxq_pause)) != NULL) {
-	while (!skb_queue_empty(q)) {
-	while (!skb_queue_empty(&dev->rxq)
-	while ((skb = skb_dequeue (&dev->done))) {
-		while ((res = usb_get_from_anchor(&dev->deferred))) {
-	while (likely(skb->len)) {
-	while (offset + sizeof(u16) <= skb->len) {
-	while ((len & 1) || !(len % dev->maxpacket))
-	while (count > 1) {
-	while (len > 3) {
-	while (len >= 3) {
-	while (skb->len > 0) {
-	while (pegasus->flags & ETH_REGS_CHANGED)
-	while (pegasus->flags & ETH_REGS_CHANGED)
-	while (pegasus->flags & ETH_REGS_CHANGED)
-	while (count) {
-	while (serial->rx_urb_filled[serial->curr_rx_urb_idx]) {
-		while (write_length_remaining) {
-	while (count--) {
-	while (len > 3) {
-	while (likely(skb->len)) {
-	while ((len > 0) && (buf[0] > 2) && (buf[0] <= len)) {
-	while (skb->len > 1) {
-	while (timeout--) {
-	while (timeout--) {
-		while (len_cleartext-- > 0) {
-	while (dev->tx_buff.len > 0) {			/* wait until tx idle */
-		while (count--)
-		while (count--) {
 			 * later when we re-enable rx but might be read meanwhile
-	while ((fifo_size-- > 0) && (actual < len)) {
-	while ((status = inb(iobase+FS_FO)) & FS_FO_FSFDR) {
-	while (st_fifo->len) {
-		while (lsr & LSR_FIFOE) {
-	    	while ((si->tx_buff.len) && (STLSR & LSR_TDRQ)) {
-			while ((STLSR & LSR_TEMT) == 0)
-	while (ICSR1 & ICSR1_TBY)
-		while ((ICSR1 & ICSR1_RNE) && i--)
-	while ((ICSR1 & ICSR1_RNE) && i--)
-			while ((unsigned)(OSCR - si->last_oscr)/4 < mtt)
-	while (!(UART_GET_LSR(port) & THRE)) {
-	while ((UART_GET_LSR(port) & DR))
-	while (bfin_sir_is_receiving(dev) && --tx_cnt)
-		while (st_fifo->len > 0) {	//upload frame
-	while (iir) {
-	while (fifo_size-- > 0 && actual < len) {
-	while (count-- > 0 && !(inb(iobase + UART_LSR) & UART_LSR_TEMT))
-	while (address->cfg_base) {
-	while (chip->devid != devid) {
-	while (!(ptxd->flags & AU_OWN) && (aup->tx_tail != aup->tx_head)) {
-	while (!(flags & AU_OWN))  {
-	while (read_ir_reg(IR_ENABLE) & (IR_RX_STATUS | IR_TX_STATUS)) {
-			while(!(inb(iobase+UART_LSR) & UART_LSR_TEMT))
-	while ((fifo_size-- > 0) && (actual < len)) {
-        while (!kthread_should_stop()) {
-	while ((fifo_size-- > 0) && (actual < len)) {
-	while ((status = inb(iobase+FRM_ST)) & FRM_ST_VLD) {
-	while (st_fifo->len > 0) {
-      while (toshoboe_numvalidrcvs (self) != n)
-      while ((toshoboe_numrcvs(self) != self->int_rx) || (self->int_tx != n))
-  while (toshoboe_numvalidrcvs (self) != 4)
-  while ((toshoboe_numrcvs (self) != self->int_rx) || (self->int_tx != 1))
-          while (self->ring->tx[txpc].control & OBOE_CTL_TX_HW_OWNS)
-      while (!(self->ring->rx[self->rxs].control & OBOE_CTL_RX_HW_OWNS))
-  while ((i--) && (self->txpending))
-	while (status & UTSR0_EIF) {
-        while((tmp = *r) != NULL)
-        while (ipddp_route_list) {
-	while(timeout++ < 5 && (inb(ioaddr+TANG_CARD_STATUS)&TANG_TX_READY)==0)
-                while(++i<65536)
-        while(length--)
-                while((inb(ioaddr+DAYNA_CARD_STATUS)&DAYNA_TX_READY)==0)
-                while(inb(ioaddr+TANG_CARD_STATUS)&TANG_RX_READY)
-        while(lp->node_acquire==0)	/* Get *True* nodeid finally. */
-                while(++boguscount<1000000)
-                while(pkt_len--)        /* Discard packet */
-		while((inb(ioaddr+DAYNA_CARD_STATUS)&DAYNA_TX_READY)==0)
-		while((inb(ioaddr+TANG_CARD_STATUS)&TANG_TX_READY)==0)
-	while(time_before(jiffies, timeout)) {
-	while(time_before(jiffies, timeout)) {
-	while(time_before(jiffies, timeout)) {
-	while (length--)
-	while (length--)
-	while (check_mirror(first_mirror, mirror_size) == 1)
-	while (check_mirror(last_mirror, mirror_size) == 1)
-	while (check_mirror(first_mirror, mirror_size) == 1)
-	while (check_mirror(last_mirror, mirror_size) == 1)
-	while (tq->tx_ring.next2comp != eop_idx) {
-	while (VMXNET3_TCD_GET_GEN(&gdesc->tcd) == tq->comp_ring.gen) {
-	while (tq->tx_ring.next2comp != tq->tx_ring.next2fill) {
-	while (num_allocated <= num_to_alloc) {
-	while (len) {
-	while (rcd->gen == rq->comp_ring.gen) {
-		while (num_to_alloc) {
-	while (test_and_set_bit(VMXNET3_STATE_BIT_RESETTING, &adapter->state))
-	while (test_and_set_bit(VMXNET3_STATE_BIT_RESETTING, &adapter->state))
-	while (vectors >= vector_threshold) {
-	while (test_and_set_bit(VMXNET3_STATE_BIT_RESETTING, &adapter->state))
-	while (n--)
-	while (myFirstTxDesc != myNextTxDesc) {
-		while ((*R_DMA_CH1_FIRST != virt_to_phys(myNextRxDesc)) &&
-	while (virt_to_phys(myFirstTxDesc) != *R_DMA_CH0_FIRST &&
-	while(irq_type & STS_SYSTEM_IRQ) {
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-	while ( !(readw(xl_mmio + MMIO_INTSTATUS_AUTO) & INTSTAT_SRB) ) { 
-	while (! (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_SRB)) { 
-	while (xl_priv->xl_rx_ring[xl_priv->rx_ring_tail].framestatus & (RXUPDCOMPLETE | RXUPDFULL) ) { /* Descriptor to process */
-			while (xl_priv->xl_rx_ring[temp_ring_loc].framestatus & RXUPDFULL ) {
-				while (xl_priv->rx_ring_tail != temp_ring_loc)  
-			while (xl_priv->rx_ring_tail != temp_ring_loc) { 
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-				while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { /* Wait for command to run */
-	while (xl_priv->xl_tx_ring[xl_priv->tx_ring_tail].framestartheader & TXDNCOMPLETE ) { 
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-	while (!(readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_SRB)) { 
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-	while (readw(xl_mmio + MMIO_INTSTATUS) & INTSTAT_CMD_IN_PROGRESS) { 
-			while (readb(xl_mmio + MMIO_MACDATA) != 0) {
-	while (!((readw(streamer_mmio + SISR)) & SISR_SRB_REPLY)) {
-		while (streamer_priv->srb_queued) {
-	while (rx_desc->status & 0x01000000) {	/* While processed descriptors are available */
-	while((sisr & (SISR_MI | SISR_SRB_REPLY | SISR_ADAPTER_CHECK | SISR_ASB_FREE | 
-				while(streamer_priv->streamer_tx_ring[(streamer_priv->tx_ring_last_status + 1) & (STREAMER_TX_RING_SIZE - 1)].status) {
-	while (streamer_priv->srb_queued) 
-			while (i < buffer_len) {
-        while(weight)
-                while((tree + branch)->tag != LEAF && weight)
-        while(r1 & BID_RECALL_DONE_MASK)
-        while(r1 & BID_RECALL_DONE_MASK)
-        while((tp->isb_ptr->IStatus[tp->current_isb_index].IType & 0xf0) == 0)
-        while((vlen > 0) && (rcode == POSITIVE_ACK))
-        while((vlen > 0) && (rcode == POSITIVE_ACK))
-        while((vlen > 0) && (rcode == POSITIVE_ACK))
-        while((vlen > 0) && (rcode == POSITIVE_ACK))
-        while((vlen > 0) && (*correlator == 0))
-        while((status = tp->rx_fcb_curr[queue]->frame_status) != SUCCESS)
-        while((status = tp->tx_fcb_end[queue]->frame_status) != SUCCESS)
-        while(flen > 0 && bytes > 0)
-        while(loop_count)
@@ -5606,7 +5548,6 @@ static int smctr_wait_while_cbusy(struct
-                while(timeout)
@@ -5616,7 +5557,6 @@ static int smctr_wait_while_cbusy(struct
-                while(timeout)
-	while((readl(olympic_mmio+BCTL)) & BCTL_SOFTRESET) {
-		while (!(readl(olympic_mmio+CLKCTL) & CLKCTL_PAUSE)) {
-	while(!((readl(olympic_mmio+SISR_RR)) & SISR_SRB_REPLY)) {
- 		while(olympic_priv->srb_queued) {        
-	while (rx_status->status_buffercnt) { 
-			while(olympic_priv->olympic_tx_status_ring[(olympic_priv->tx_ring_last_status + 1) & (OLYMPIC_TX_RING_SIZE-1)].status) { 
-	while(olympic_priv->srb_queued) {
-		while (!readb(ti->mmio + ACA_OFFSET + ACA_RW + RRR_EVEN)){
-	while (1){
-	while(1) {
-	while (--limit) {
-	while (rnet->tx_cnt && (rnet->ack_slot != slot)) {
-	while (idx < ARRAY_SIZE(settings) &&
-	while (idx < MAX_NUM_SETTINGS && !(settings[idx].setting & features))
-	while (atomic_dec_return(&phydev->irq_disable) >= 0)
-			while (i-- > 0)
-	while ((skb = skb_dequeue(&dp83640->rx_queue)) != NULL)
-	while ((skb = skb_dequeue(&dp83640->tx_queue)) != NULL)
-	while ((skb = skb_dequeue(&dp83640->rx_queue)) != NULL) {
-	while (--i >= 0) {
-	while ((skb = __skb_dequeue(&dp->tq)) != NULL) {
-	while (timediff >= 500000)
-	while (timediff >= bdus2) {
-	while (bc->modem.ser12.pll_time >= 1000000)
-	while (count) {
-	while (first) {
-		while (jiffies - time < 13) {
-	while (read_scc(priv, R0) & Rx_CH_AV)
-	while ((is = read_scc(&info->priv[0], R3)) && i--) {
-		while ((is = ~inb(card_base + TWIN_INT_REG)) &
-		while (read_scc(priv, R0) & Rx_CH_AV) {
-	while (priv->rx_count) {
-	while ((read_scc(priv, R0) & Tx_BUF_EMP) && p < priv->tx_len[i]) {
-	while (!list_empty(&bpq_devices)) {
-	while (s->hdlcrx.rx_state && num >= 8) {
-	while (!hdlcdrv_hbuf_empty(&s->hdlcrx.hbuf)) {
-	while (time_before(jiffies, timeout))
-	while (p) {
-	while (p) {
-		while ((iir = IIR_MASK & inb(IIR(dev->base_addr))) != IIR_NOPEND) {
-	while ((skb = skb_dequeue(&yp->send_queue)))
-	while (--i >= 0) {
-	while (yam_data) {
-	while (size--)
-	while (size--)
-	while (len-- > 0) {
-	while (len > 0) {
-	while (count--) {
-	while (!skb_queue_empty(&scc->tx_queue))
-	while (ctrl->chan_A)
-	while (pkt_len > -2) {
-		while (numbit >= 8) {
-	while (numbit >= 8) {
-	while (cnt > 0) {
-			while (i > 0) {
-				while (i > 0) {
-			while (i > 0) {
-	while (cnt > 0) {
-			while (state && numbits >= 8) {
-		while ((stat & (EPP_NRAEF|EPP_NRHF)) != EPP_NRHF) {
-		while (cnt > 0 && stat & EPP_NREF) {
-	while (time_before(jiffies, tstart + HZ/3)) {
-	while (j < 7 && i > 150) {
-	while (size > 3) {
-	while (size > 3) {
-		while (sendcount) {
-			while (checkcount--) {
-	while (!rio_read_config_32(rdev, IDT_ERR_RD, &regval)) {
-	while (cur < end) {
-	while (ext_ftr_ptr) {
-	while (result != port->host_deviceid) {
-	while ((tmp = rio_get_host_deviceid_lock(port, hopcount))
-		while (!rio_enum_complete(mport)) {
-	while (id->vid || id->asm_vid) {
-	while (ext_ftr_ptr)  {
-	while (n && (n != &rio_devices)) {
-	while (rdev->prev && (rdev->prev->pef & RIO_PEF_SWITCH)) {
-	while (rio_mport_read_config_32(mport, destid, hopcount,
-	while (checkcount--) {
-	while (ext_ftr_ptr) {
-	while (n && (n != &rio_devices)) {
-	while ((dev = rio_get_device(RIO_ANY_ID, RIO_ANY_ID, dev)) != NULL) {
-	while ((ch_stat = ioread32(priv->regs +
-	while (kfifo_out_spinlocked(&priv->pw_fifo, (unsigned char *)msg_buffer,
-	while (wr_ptr != rd_ptr) {
-		while (sts_ptr[j]) {
-	while (priv->imsg_ring[mbox].imq_base[rx_slot] == NULL) {
-	while (msmsdcc_readl(host, MMCISTATUS) & MCI_RXDATAAVLBL) {
-	while (maxspin) {
-		while (!(at91_mci_read(host, AT91_MCI_SR) & AT91_MCI_CMDRDY)) {
-	while ((fifo = fifo_count(host))) {
-		while (fifo_words--)
-			while (n--) {
-	while ((fifo = fifo_free(host)) > 3) {
-		while (fifo--)
-	while (readl(host->base + S3C2410_SDIDSTA) &
-	while (host->mmc != NULL) {
-	while (restarts < maxloops) {
-		while (passes < timeout) {
-	while ((status = OMAP_MMC_READ(host, STAT)) != 0) {
 	 * which results in the while loop below getting stuck.
-		while (usecs > 0 && (OMAP_MMC_READ(host, STAT) & 1) == 0) {
-			while (--i >= 0)
-			while (--i >= 0) {
-	while (time_before(jiffies, timeout)) {
-		while (time_before(jiffies, timeout)) {
-	while (host->bytes_left && (status & (MMCST0_DXRDY | MMCST0_DRRDY))) {
-		while (count++ < MAX_WAIT_COUNT) {
-		while (1) {
-		while (len) {
-			while (size) {
-		while (len) {
-			while (size) {
-	while ((pci_dev =
-		while (s >= 32 && (intr_status & MVSD_NOR_RX_FIFO_8W)) {
-			while (s >= 4 && (intr_status & MVSD_NOR_RX_READY)) {
-		while (s >= 4 && (intr_status & MVSD_NOR_TX_AVAIL)) {
-	while (--timeout && !(sd_ctrl_read16(host, CTL_STATUS2) & (1 << 13)))
-		while (1) {
-	while (i--) {
-	while (1) {
-	while (0 < regs-- && 1 == vub300->sdio_register[i].activate) {
-		while (register_count--) {
-		while (register_count--) {
-		while (I--) {
-		while (register_count--) {
-		while (register_count--) {
-		while (register_count--) {
-	while (words-- > 0) {
-		while (0 < register_count) {
-	while (0 < regs--) {
-	while (!(err = cb710_check_event(slot, what))) {
@@ -186,7 +184,6 @@ static int cb710_wait_while_busy(struct
-	while (cb710_read_port_8(slot, CB710_MMC_STATUS2_PORT) & mask) {
-	while (blocks-- > 0) {
-		while (len >= 16) {
-	while (blocks-- > 0) {
-		while (!(status & SD_STATUS_CR))
-	while ((host->flags & HOST_F_XMIT) && (status & SD_STATUS_DB))
-			while((status & mask) != mask)
-		while ((sd_dev = pci_get_device(PCI_VENDOR_ID_JMICRON,
-		while (!(atmci_readl(host, ATMCI_SR) & ATMCI_CMDRDY))
-			while (--i >= 0) {
-	while (1) {
-	while (cp < end && *cp == 0xff)
-		while (rotator & 0x8000) {
-		while (cp < end && *cp == 0)
-	while (pattern & 0x80000000)
-	while (status & 0x80) {
-		while (length) {
-	while (bytes > 3) {
-	while (bytes > 3) {
-	while (prescaler <= 0x800) {
-	while ((OMAP_HSMMC_READ(host->base, SYSCTL) & ICS) != ICS
-	while ((reg != CC) && time_before(jiffies, timeout))
-		while ((!(OMAP_HSMMC_READ(host->base, SYSCTL) & bit))
-	while ((OMAP_HSMMC_READ(host->base, SYSCTL) & bit) &&
-		while ((timeout & 0x80000000) == 0) {
-	while (time_before(jiffies, timeout)) {
-		while (cnt >= 2) {
-		while (cnt >= 2) {
-		while (cnt >= 4) {
-		while (cnt >= 4) {
-		while (cnt >= 8) {
-		while (cnt >= 8) {
-		while (present != slot->last_detect_state) {
-	while (i > 0) {
-			while (--i >= 0) {
-	while (!((fsr = inb(host->base + WBSD_FSR)) & WBSD_FIFO_EMPTY)) {
-	while (!((fsr = inb(host->base + WBSD_FSR)) & WBSD_FIFO_FULL)) {
-	while (host->max_clk / div > clock) {
-	while (!((clk = sdhci_readw(host, SDHCI_CLOCK_CONTROL))
-	while (sdhci_readb(host, SDHCI_SOFTWARE_RESET) & mask) {
-	while (blksize) {
-		while (len) {
-	while (blksize) {
-		while (len) {
-	while (sdhci_readl(host, SDHCI_PRESENT_STATE) & mask) {
-	while (current_timeout < target_timeout) {
-	while (sdhci_readl(host, SDHCI_PRESENT_STATE) & mask) {
-	while (!((clk = sdhci_readw(host, SDHCI_CLOCK_CONTROL))
-	while (true) {
-	while (pos < cnt) {
-	while (pos < cnt) {
-	while (t_size) {
-	while (t_size) {
-	while (i < 0x1000) {
-		while (delay--) {
-	while (!(*pstat & stat_mask)) {
-		while ((stat & (STATUS_APPL_BUFF_FF | STATUS_DATA_TRANS_DONE)) &&
-		while ((stat & STATUS_APPL_BUFF_FE) &&
-	while (sg_miter_next(miter)) {
-		while (j) {
-			while (i) {
-	while (sg_miter_next(miter)) {
-		while (j) {
-			while (i >= 4) {
-	while (!(status & JZ_MMC_STATUS_DATA_FIFO_EMPTY) && --timeout) {
-	while (real_rate > rate && div < 7) {
-	while (1) {
-		while (remainder > func->cur_blksize) {
-	while (remainder > 0) {
-	while (tuple) {
-	while (tuple && tuple != func->card->tuples) {
-		while (ids->class || ids->vendor || ids->device) {
-	while (err && --i >= 0) {
-	while (1) {
-	while (1) {
-	while (vdd_max >= vdd_min)
-	while (ret)
-		while ((req = blk_fetch_request(q)) != NULL) {
-	while (mem->cnt--)
-	while (max_page_cnt) {
-		while (1) {
-	while (sz) {
-		while (sz && cnt) {
-	while (ns > UINT_MAX) {
-	while (t->max_sz < 4 * 1024 * 1024)
-	while (t->max_sz > TEST_AREA_MAX_SIZE && t->max_sz > sz)
-    while (part->FreeTotal < nblocks) {
-	while (nr_sects) {
-	while (!kthread_should_stop()) {
-		while ((req = blk_fetch_request(rq)) != NULL)
-	while (*size > min_alloc) {
-		while (entry_high < count) {
-	while (thisEUN <= nftl->lastEUN ) {
-	while (thisEUN <= nftl->lastEUN && thisEUN != targetEUN) {
-		while (EUN <= nftl->lastEUN) {
-		while (writeEUN <= nftl->lastEUN) {
-		while (thisEUN < nftl->nb_blocks) {
-	while (count) {
-	while (count) {
-		while (header.length) {
-		while (header.length) {
-	while (thisEUN < inftl->nb_blocks) {
-		while (inftl->PUtable[thisEUN] != BLOCK_NIL) {
-		while (EUN <= inftl->lastEUN) {
-	while (thisEUN < inftl->nb_blocks) {
-		while (inftl->PUtable[thisEUN] != BLOCK_NIL) {
-	while (thisEUN < inftl->nb_blocks) {
-	while (thisEUN < inftl->nb_blocks) {
-	while (len_left > 0) {
-	while (len_left > 0) {
-	while (geo->ecc_chunk_size < mtd->oobsize)
-		while ((ideal_sample_delay_in_ns > max_sample_delay_in_ns) &&
-	while ((tEYE <= 0) &&
-	while ((ideal_sample_delay_in_ns > max_sample_delay_in_ns) &&
-	while (SAMPLE_IS_NOT_WITHIN_THE_EYE &&
-	while (len) {
-	while (len)
-	while (len >= 4) {
-	while (len--)
-	while (len) {
-	while (len) {
-	while (len) {
-	while (len) {
-	while (len && (unsigned long)buf & 7) {
-	while (i < len/8) {
-	while (i < len)
-	while (bfin_read_NFC_STAT() & WB_FULL)
-		while (bfin_read_NFC_STAT() & WB_FULL)
-		while ((bfin_read_NFC_IRQSTAT() & RD_RDY) != RD_RDY)
-		while (bfin_read_NFC_STAT() & WB_FULL)
-	while (bfin_read_NFC_RST() & ECC_RST)
-		while (time_before(jiffies, timeo)) {
-	while (1) {
-				while (len > 0) {
-	while (1) {
-	while (1) {
-	while (len) {
-	while (len--) {
-	while (len > 0x800) {
-	while (len > 0x800) {
-		while ((ReadDOC(docptr, Mplus_FlashControl) & CDSN_CTRL_FR_B_MASK) != CDSN_CTRL_FR_B_MASK) {
-		while (!(ReadDOC(docptr, CDSNControl) & CDSN_CTRL_FR_B)) {
-		while (blocks > maxblocks) {
-		while (--cnt && !fun_chip_ready(&fun->mtd))
-	while (totlen) {
-	while (len > 0) {
-	while (len--)
-	while (len--)
-		while (txx9ndfmc_read(dev, TXX9_NDFRSTR) & TXX9_NDFRSTR_RST) {
-		while (flips--) {
-	while (timeout--) {
-	while (timeout--) {
-	while (timeout--) {
-	while (timeout--) {
-	while (timeout--) {
-	while ((ndcr & NDCR_ND_RUN) && (timeout-- > 0)) {
 	} while ((ecc_state < 4) && time_before(jiffies, timeo));
-		while (max_retries-- > 0) {
-		while (max_retries-- > 0) {
-		while (!(ioread32(denali->flash_reg +
-	while (dv_window < 8) {
-	while (((acc_clks * CLK_X) - Trea[mode]) < 3)
-		while (((cs_cnt * CLK_X) + Trea[mode]) < Tcea[mode])
 		 * for a while for this interrupt
-		while (!(read_interrupt_status(denali) &
-	while (size) {
-	while (len) {
-	while (nfc_read(mtd, NFC_CONFIG1) & NFC_RESET) {
 			dev_err(dev, "Timeout while resetting NFC!\n");
-	while (unlikely(len > 0x800)) {
-	while (unlikely(len > 0x800)) {
-	while (i && readb(this->IO_ADDR_R + MM_NAND_STS) & CS_NAND_CTLR_BUSY) {
-	while (num_err--) {
-	while (len--) {
-	while (len--) {
-		while (len) {
-		while (gpmc_read_status(GPMC_PREFETCH_COUNT) && (tim++ < limit))
-	while (gpmc_read_status(GPMC_PREFETCH_COUNT) && (tim++ < limit))
-	while (gpmc_read_status(GPMC_PREFETCH_COUNT) && (tim++ < limit))
-	while (len--) {
-	while (time_before(jiffies, timeo)) {
-		while (cnt++ < 0x1FF) {
-	while(len && (offset < MAX_TIG_FLASH_SIZE)) {
-	while(len && (offset < MAX_TIG_FLASH_SIZE)) {
-	while(len) {
-	while(len) {
-	while((map_top - 1) < 0xffffffffUL) {
-	while(len--)
-	while(len--) {
-	while (cplen > 0) {
-	while (start < end) {
-	while (len > 0) {
-	while (len > 0) {
-	while(len) {
-	while(len) {
-			while (i--)
-	while(*sor)
-			while(*sor)
-	while ((map_top - 1) < 0xffffffffUL) {
-	while (len >= 2) {
-	while (len--)
-	while (len--)
-	while(len) {
-	while(len) {
-	while((map_top - 1) < 0xffffffffUL) {
-	while(len) {
-	while(len) {
-	while (len > 0) {
-	while((map_top - 1) < 0xffffffffUL) {
-	while (i--) {
-	while (chs_table[k].size > 0 && size > chs_table[k].size)
-  while (x >= NN) {
-  while (++r <= NN-KK) {	/* r is the step number */
-		while (len) {
-		while (soff_hi != eoff_hi) {
-		while (soff_hi != eoff_hi) {
-		while (soff_hi != eoff_hi) {
-		while (counter++ < 100) {
-		while (counter++ < 100) {
-	while ((mtd = pmc551list)) {
-	while (!ret && len > 0) {
-   while (len)
-		while (len && gap--) *buf++ = read8 (from++), len--;
-   while (len >= BUSWIDTH)
-	 while (len--) *buf++ = read8 (from++);
-		while (gap--) tmp[i++] = 0xFF;
-		while (len && i < BUSWIDTH) tmp[i++] = buf[n++], len--;
-		while (i < BUSWIDTH) tmp[i++] = 0xFF;
-   while (len >= BUSWIDTH)
-		while (len--) tmp[i++] = buf[n++];
-		while (i < BUSWIDTH) tmp[i++] = 0xFF;
-	while (addr < end) {
-	while (old) {
-	while ((mtd=docmillist)) {
-	while (*curmtd) {
-	while (slram_mtdlist) {
-	while (map) {
-	while (!(ReadDOC(docptr, CDSNControl) & CDSN_CTRL_FR_B)) {
-	while (old) {
-	while (left) {
-	while (left) {
-	while(len) {
-	while ((mtd = doc2klist)) {
-	while (pages) {
-	while (len) {
-	while (len) {
-	while (root_ms02nv_mtd)
-	while (old) {
-	while ((mtd=docmilpluslist)) {
-	while (instr->len > 0) {
-	while (remaining > 0) {
-	while (num--)
-	while (len) {
-        while (len > 0) {
-	while (i < mtd->numeraseregions && instr->addr >= regions[i].offset)
-	while (i<mtd->numeraseregions && (instr->addr + instr->len) >= regions[i].offset)
-	while(len) {
-	while(len) {
-                while (temp_len) {
-			while (chip->state != newstate) {
-	while (len) {
-	while (len) {
-	while (len) {
-	while(len >= map_bankwidth(map)) {
-	while (size) {
-		while (len > 0) {
-			while (len > 0 && groups > 0) {
- 	while(mtd->size & (mtd->erasesize - 1))
-			while (chip->state != FL_XIP_WHILE_ERASING) {
-	while (len) {
-	while (len) {
-	while(len >= map_bankwidth(map)) {
-	while(z < words * map_bankwidth(map)) {
-	while (len >= map_bankwidth(map) * 2) {
-	while (i < mtd->numeraseregions && ofs >= regions[i].offset)
-	while (i<mtd->numeraseregions && (ofs + len) >= regions[i].offset)
-	while(len) {
-	while (*p) {
-	while (i < idx && p) {
-	while (1) {
-	while ((this_opt = strsep(&parts, ",")) != NULL) {
-		while (master->block_isbad && 
-		while (master->block_isbad && 
-		while(*prev && (*prev)->img->flash_base < new_fl->img->flash_base)
-	while (fl) {
-	while ((pp = of_get_next_child(node, pp)))
-	while ((pp = of_get_next_child(node, pp))) {
-	while (len > 0) {
-	while (len > 0) {
-		while (offs < slave->mtd.size) {
-	while (*p) {
-	while (*p) {
-	while (p) {
-	while (p) {
-	while ((rb = rb_first(&sv->root))) {
-	while (this) {
-	while (rb) {
-	while (count) {
-	while (*p) {
-	while (!ubi->free.rb_node) {
-	while (p) {
-	while (p) {
-	while (ubi->works_count) {
-	while (ubi->works_count) {
-	while (rb) {
-	while (!list_empty(&ubi->works)) {
-	while (total_read) {
-	while (total_written) {
-	while (count) {
-	while (p) {
-		while (*p) {
-	while (ebnum2 && bbt[ebnum2])
-	while (1) {
-	while (i < len) {
-		while (j1 < 8) {
-	while (i < offset + len) {
-			while (bit < 256) {
-	while (offs > mtd->erasesize) {
-	while ((attempts--) > 0) {
-		while (chip->state != chip_state) {
-	while (len) {
-	while (len) {
-	while (len > 0) {
-	while (time_before(jiffies, timeout)) {
-	while (1) {
-	while (read < len) {
- 	while (!ret) {
-	while (read < len) {
-	while (time_before(jiffies, timeout)) {
-	while (read < len) {
-	while (len != 0) {
-	while (written < len) {
-	while (1) {
-	while (written < len) {
-	while (len) {
-	while (len) {
-	while (len) {
-		while (len > block_size && eb_count < (max_eb_count - 1)) {
-	while (len) {
-	while (written < len) {
-	while (len > 0 && otp_pages > 0) {
-	while (1 && timeout--) {
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-		while (--i) {
-		while (1) {
-	while (mtd->block_isbad) {
-	while (i--) {
-	while ((dev = of_get_next_child(busnode, dev)) != NULL) {
-		while (!req->complete) adb_iop_poll();
-	while (!req.complete) {
-	while (state == state_attached) {
-	while ((np = of_get_next_child(fcu_node, np)) != NULL) {
-	while (count--) {
-	while(!kthread_should_stop()) {
-		while(1)
-			while (!(via[IFR] & SR_INT) && poll_timeout-- > 0)
-	while (!req->complete && count++ < 50) {
-	while (!list_empty(&smu_fans)) {
-				while (highFree > 0 &&
-	while ((driver = adb_driver_list[i++]) != NULL) {
-		while(adb_handler[index].busy) {
-		while (*ap != NULL)
-	while (!list_empty(&smu_ads)) {
-	while ((in_8(&adb->ctrl.r) & ADB_RST) != 0) {
-		while (!req->complete)
-	while (cur) {
-		while (!req->complete) {
-	while(--i >= 0)
-	while ((np = of_get_next_child(i2s, np)) != NULL) {
-    while (!req.complete)
-    while (!req.complete)
-	while (!req->complete)
-    while (!req.complete)
-    while (!req.complete)
-	while (!kthread_should_stop()) {
-	while (endp < buf + count && (*endp == ' ' || *endp == '\n'))
-	while(cmd->status == 1)
-	while (len) {
-	while (!req.complete) {
-	while (interrupt_data[0] || pmu_state != idle) {
-	while (!req.complete) {
-	while (!req->complete)
-	while (!req.complete)
-	while (!req.complete)
-	while (!req.complete) {
-		while (!(via2[B] & TACK)) {
-			while (!req.complete)
-	    while (!req.complete)
-	while (!req.complete)
-	while (!req.complete)
-		while (leds_req_pending)
-	while ((child = of_get_next_child(dev, child)) != NULL) {
-	while ((dev = of_get_next_child(busnode, dev)) != NULL)
-	while (!kthread_should_stop()) {
-	while (!req.complete) {
-	while (interrupt_data[0][0] || pmu_state != idle) {
-		while (!req.complete)
-	while(*label == ' ')
-	while(*val && (*val != '=')) {
-	while(*val == ' ')
-		while (!req->complete)
-	while (!req.complete)
-	while ((in_8(&via[B]) & TACK) == 0) {
-	while((pmu_state != idle && pmu_state != locked) || !req->complete)
-		while(!req.complete)
 	   while we're asleep */
-	while (asleep) {
-	while (!batt_req.complete)
-	while (pmu_state != idle)
 	while ((via[B] & TACK) == 0)
-	while (cplen > 0) {
-	while (is_ioat_active(status) || is_ioat_idle(status)) {
-	while (ioat_reset_pending(chan)) {
-			while (i--)
-				while (i--) {
-			while (src_idx--)
-		while (src_idx--)
-	while (src_idx--)
-	while (dc->descs_allocated < TXX9_DMA_INITIAL_DESC_COUNT) {
-	while (sh_chan->descs_allocated < NR_DESCS_PER_CHANNEL) {
-	while ((d40d = d40_first_active_get(d40c))) {
-	while ((d40d = d40_first_queued(d40c))) {
-	while ((d40d = d40_first_pending(d40c))) {
-	while (--tries) {
-		while (dma_readl(dw, CH_EN) & dwc->mask)
-	while (dma_readl(dw, CH_EN) & dwc->mask)
-		while (dma_readl(dw, CH_EN) & dwc->mask)
-		while (!(channel_readl(dwc, CFG_LO) & DWC_CFGL_FIFO_EMPTY))
-		while (dma_readl(dw, CH_EN) & dwc->mask)
-	while (dwc->descs_allocated < NR_DESCS_PER_CHANNEL) {
-	while (dma_readl(dw, CH_EN) & dwc->mask)
-	while (i--)
-	while (dma_readl(dw, CH_EN) & dwc->mask)
-	while (dma_readl(dw, CFG) & DW_CFG_DMA_EN)
-	while (l->link_addr) {
-	while (lli->link_addr) {
-	while (lli->link_addr) {
-		while (bytes_to_transfer) {
-		while (tail->hw_next)
-		while ((rv = ioread32(&dma_reg->csfpl))) {
-	while (stride--) {
-		while (dst_cnt--) {
-		while (src_cnt--) {
-			while (num_slots) {
-		while (src_cnt--)
-		while (src_cnt--) {
-		while (src_cnt--) {
-	while (op <= index) {
-	while (op <= index) {
-	while (iovec_idx < pinned_list->nr_iovecs) {
-		while (!iov[iovec_idx].iov_len)
-		while (iov[iovec_idx].iov_len) {
-	while (iovec_idx < pinned_list->nr_iovecs) {
-		while (!iov[iovec_idx].iov_len)
-		while (iov[iovec_idx].iov_len) {
-	while (pl08x_phy_channel_busy(phychan))
-	while (readl(pl08x->base + PL080_EN_CHAN) & (1 << phychan->id))
-	while ((val & PL080_CONFIG_ACTIVE) || (val & PL080_CONFIG_ENABLE))
-			while (bd.remainder > (mbus->buswidth - 1)) {
-	while (!list_empty(&desc->tx_list)) {
-	while (m2p_channel_state(edmac) >= M2P_STATE_ON)
-	while (m2p_channel_state(edmac) == M2P_STATE_STALL)
-	while (l) {
-	while (lli) {
-			while (lli && lli->link_addr != ladd)
-	while (readl(virtbase + COH901318_CX_STAT+COH901318_CX_STAT_SPACING *
-	while (status1) {
-	while (status2) {
-		while (i < ARRAY_SIZE(burst_sizes)) {
-		while (i < ARRAY_SIZE(burst_sizes)) {
-		while (i < ARRAY_SIZE(burst_sizes)) {
-	while ((cohd = coh901318_first_active_get(cohc))) {
-	while ((cohd = coh901318_first_queued(cohc))) {
-	while (temp_size >= out_size * 2 && temp_downsize < 2) {
-	while (n--) {
-		while ((idmac_read_icreg(ipu, IDMAC_CHA_BUSY) & chan_mask) ||
-		while ((line = ffs(status))) {
-		while ((line = ffs(status))) {
-	while (!kthread_should_stop()
-		while (!kthread_should_stop()) {
-	while (!list_empty(&last->node)) {
-	while (burst_len > 1) {
-	while (burst > 1) {
-	while (burst != (1 << desc->rqcfg.brst_size))
-			while (!list_empty(&first->node)) {
-	while (--i >= 0) {
-		while (dma_readl(atdma, CHSR) & atchan->mask)
-	while (dma_readl(atdma, CHSR) & atdma->all_chan_mask)
-	while (dma_readl(atdma, EBCISR))
-	while (dma_readl(atdma, EBCISR))
-	while ((ch = fls(status) - 1) >= 0) {
-	while (midc->descs_allocated < DESCS_PER_CHANNEL) {
-	while (status) {
-	while (status) {
-				while (src_cnt--) {
-			while (num_slots) {
-	while (idx < num_descs_in_pool) {
-		while (src_cnt--)
-			while (src_idx--)
-		while (src_idx--)
-	while (src_idx--)
-	while (1) {
-	while (stat) {
-	while (buf < buf_len) {
-	while (stride--) {
-		while (src_cnt--) {
-			while (num_slots) {
-		while (src_cnt--)
-		while (src_cnt--)
-		while (src_cnt--)
-			while (src_idx--)
-		while (src_idx--)
-	while (src_idx--)
-			while (i--)
-	while (i--)
-	while (stat1) {
-	while (buf < buf_len) {
-	while (true) {
-	while (chan->client_count < dmaengine_ref_count) {
-	while (tx->cookie == -EBUSY) {
-	while (!list_empty(&priv->list)) {
-	while (pages && !err) {
-		while (pages && map->unmap_ops[offset].handle == -1) {
-		while (range < pages) {
-	while (!list_empty(&priv->maps)) {
-	while (--i >= 0)
-	while (pgno < nr_pages) {
-	while (pgno)
-	while (!list_empty(&seized_devices)) {
-	while ((recorded < bytes) && (i < desc->nr_addrs)) {
-	while (i < desc->nr_addrs)
-	while (len != 0) {
-	while (len != 0) {
-	while (list_empty(&xs_state.reply_list)) {
-	while (ret == 0 && (name = va_arg(ap, char *)) != NULL) {
 	 * We must disallow save/restore while reading a xenstore message.
 			printk(KERN_WARNING "XENBUS error %d while reading "
-	while (count-- > 1)
-	while (callback != NULL) {
-	while (!((flags = shared[ref].flags) & GTF_transfer_committed)) {
-	while (!(flags & GTF_transfer_completed)) {
-	while (gnttab_entry(ref) != GNTTAB_LIST_END) {
-	while (cb) {
-	while (list_empty(&u->read_buffers)) {
-	while (i < len) {
-	while (!list_empty(list)) {
-	while (nelem--) {
-	while (nelem--) {
-	while (count--)
-	while (count--)
-	while (atomic_read(&pd_dvb->users) != 0
-	while (fm_stat.sig_lock_busy && count-- && !ret) {
 	 } while (0)
-	while (count && count >= video->lines_size) {
-	while (atv_stat.sig_lock_busy && count-- && !ret) {
-	while (!s->data_available_for_read) {
-	while (cam->nbuffers > 0) {
-	while (size > 0) { /* size is page-aligned */
-	while (i--) {
-	while (regs->reg != 0) {
-	while (rv->reg != 0xffff) {
-	while (i < ARRAY_SIZE(stk_sizes) &&
-	while (vdec[i].adr != -1) {
-	while (size > 0) {
-	while (!list_empty(&queue->irqqueue)) {
-	while (numerator > ((uint32_t)-1)/multiplier) {
-	while (buflen > 2 && buffer[1] == USB_DT_CS_INTERFACE &&
-	while (buflen > 2 && buffer[1] != USB_DT_CS_INTERFACE) {
-	while (_buflen > 2 && _buffer[1] == USB_DT_CS_INTERFACE) {
-	while (buflen > 2 && buffer[1] == USB_DT_CS_INTERFACE) {
-	while (buflen > 2) {
-	while (1) {
-	while (entity != NULL) {
-		while (params->video_gop_size > 34)
-		while (params->video_gop_size > 34)
-	while (ctrl.value-- && *menu) menu++;
-		while (gop > 34)
-   while (pdec->nbits_in_reservoir<(nbits_wanted)) \
-	while (nblocks) {
-	while (nblocks) {
-	while (nblocks) {
-	while (nblocks) {
-		while (bandlines_left--) {
-		while (bandlines_left--) {
-	while (compression <= 3) {
-		while (compression <= 3) {
-	while (!list_empty(&pdev->queued_bufs)) {
-			while (*colon != '\0' && *colon != ':')
-			while (*dot != '\0' && *dot != '.')
-					while (*dot != ':' && k < 29) {
-		while (!((status = read_lpstatus(q)) & 8)) {
-		while (((status = read_lpstatus(q)) & 8)) {
-	while (vals->reg_num != 0xffff || vals->value != 0xff) {
-	while (!list_empty(&vidq->active)) {
-	while (*size * *count > VIU_VID_MEM_LIMIT * 1024 * 1024)
-	while (!list_empty(&dma_q->active)) {
-	while (size * *nbuffers > vid_limit * 1024 * 1024)
-	while (!list_empty(&vivi_devlist)) {
-	while (cam->nbuffers > 0) {
-	while (size > 0) { /* size is page-aligned */
-		while (prog_cnt != dev->_last_index_irq) {
-		while (offset && offset >= sg_dma_len(sg)) {
-			while (todo > sg_dma_len(sg)) {
-		while (offset && offset >= sg_dma_len(sg)) {
-			while (todo > sg_dma_len(sg)) {
-	while (!list_empty(&q->active)) {
-	while (zr67[i].name != NULL) {
-	while (line) {
-	while (!(zr36050_read_status1(ptr) & 0x4)) {
-	while (i < len) {
 //      while (((por = btread(ZR36057_POR)) & (ZR36057_POR_POPen | ZR36057_POR_POTime)) == ZR36057_POR_POPen) {
-	while ((por = btread(ZR36057_POR)) & ZR36057_POR_POPen) {
-	while (timeout < 10000) {
-	while ((zr->jpg_dma_head - zr->jpg_dma_tail) < max_stat_com &&
-	while (zr->jpg_dma_tail < zr->jpg_dma_head) {
-		while ((stat = count_reset_interrupt(zr))) {
-	while (1) {
-	while (h) {
-					while (a->next)
-	while (h) {
-		while (a) {
-		while (h->next)
-	while (h) {
-	while (h) {
-		while (a) {
-	while (zr36060_read_status(ptr) & ZR060_CFSR_Busy) {
-	while (i < len) {
-	while (num) {
-			while (!test_bit(IVTV_F_I_EOS, &itv->i_flags) &&
-		while (1) {
-	while (test_bit(IVTV_F_I_UDMA_PENDING, &itv->i_flags) ||
-		while (!(oi->video_buffer_size & (1 << size_shift))) {
-				while (--i >= 0) {
-		while (test_bit(IVTV_F_I_DMA, &itv->i_flags)) {
-		while (1) {
-	while (test_bit(IVTV_F_I_UDMA_PENDING, &itv->i_flags) ||
-	while (line < 36) {
-		while (vi->cc_payload_idx) {
-	while (--fw_retry_count > 0) {
-	while (bytes_available < needed_bytes) {
-		while (dma_xfer_cnt == buf->dma_xfer_cnt) {
-		while (to->length - old_length < needed_bytes) {
-		while (to->bytesused - old_bytesused < needed_bytes) {
-	while ((buf = ivtv_dequeue(s, &s->q_free))) {
-	while (!(readl(&mbox->flags) & IVTV_MBOX_FIRMWARE_DONE)) {
-		while ((buf = ivtv_dequeue(s, &s->q_dma)) != NULL) {
-	while (i < cnt) {
-	while (1) {
-				while ((buf = ivtv_dequeue(s_vbi, &s_vbi->q_full))) {
-		while (start + len > p && (q = memchr(p, 0, start + len - p))) {
-		while (count >= itv->dma_data_req_size) {
-		while (q.length - q.bytesused < count && (buf = ivtv_dequeue(s, &s->q_io)))
-		while (q.length - q.bytesused < count && (buf = ivtv_dequeue(s, &s->q_free))) {
-	while ((buf = ivtv_dequeue(s, &q))) {
-			while (!(got_sig = signal_pending(current)) &&
-	while (!list_empty(&q->active)) {
-	while (!list_empty(&q->active)) {
-	while (params.shutdown == false) {
-	while ((temp_chip != NULL) &&
-	while (temp_chip != NULL) {
-			while (prev_node->next_inode != del_node)
-		while (new_node->next_inode != NULL)
-		while (offset && offset >= sg_dma_len(sg)) {
-			while (todo > sg_dma_len(sg)) {
-	while (!list_empty(&q->active)) {
-	while ((long)size > 0) {
-	while ((long)size > 0) {
-	while (size > 0) {
-	while (1) {
-			while (--i >= 0) {
-	while (!suspend && !list_empty(&cap->pending_buf_q)) {
-	while (!list_empty(&cap->active_buf_q)) {
-	while (1) {
-	while (1) {
-	while (sh--) {
-	while ((me = media_entity_graph_walk_next(&graph))) {
-	while (--i >= 0) {
-	while (!kthread_should_stop()) {
-	while (!list_empty(&ctx->ref_queue)) {
-	while (!test_bit(new_ctx, &dev->ctx_work_bits)) {
-	while (!list_empty(lh)) {
-	while (!list_empty(&ctx->dst_queue)) {
-	while (dev->ctx[ctx->num]) {
-	while (test_and_set_bit(0, &m_dev->hw_lock) != 0) {
 		/*  Let other people run while the PLL stabilizes */
-	while (!list_empty(&btv->capture)) {
-	while (!list_empty(&btv->vcapture)) {
-	while (1) {
-	while (skip_lines-- > 0) {
-		while (offset && offset >= sg_dma_len(sg)) {
-			while (todo > sg_dma_len(sg)) {
-			while (yoffset && yoffset >= sg_dma_len(ysg)) {
-			while (uoffset && uoffset >= sg_dma_len(usg)) {
-			while (voffset && voffset >= sg_dma_len(vsg)) {
-	while (bus_in(btv,btv->mbox_data) && time_before(jiffies, timeout))
-	while ((dev = pci_get_device(PCI_VENDOR_ID_INTEL,
-	while (len >= 2) {
-	while (len > 1) {
-	while (incoming > 0) {
-	while (outgoing > 0) {
-	while ((intr = vino->intr_status)) {
-	while (first <= last) {
-	while (!list_empty(&q->active)) {
-	while (!list_empty(&q->active)) {
-		while (offset && offset >= sg_dma_len(sg)) {
-			while (todo > sg_dma_len(sg)) {
-	while (!list_empty(&q->active)) {
 			   while always ends there since (id & 0) == 0. */
-			while ((id & standards[j].std) != standards[j].std)
-	while (remain > 0) {
-	while (*regs != 0x00) {
-	while (size > 0) {
-		while (size > 0) {
-	while (size > 0) {
-		while (len >= 2) {
-		while (len >= 2) {
-	while (ar_inl(ARVCR0) & ARVCR0_VDS)	/* wait for VSYNC */
-	while (!(ar_inl(ARVCR0) & ARVCR0_VDS))	/* wait for VSYNC */
-	while (ar_inl(PLDI2CSTS) & PLDI2CSTS_NOACK)
-	while (ar_inl(PLDI2CSTS) & PLDI2CSTS_BB)
-	while (ar_inl(ARVHCOUNT) != exp_line)
-	while (ar_inl(ARVHCOUNT) != 0)		/* wait for 0 */
-			while (!(ar_inl(M32R_DMAEDET_PORTL) & 0x8000))
-			while (!(ar_inl(M32R_DMAEDET_PORTL) & 0x8000))
 	   for a while. */
 	   for a while. */
-		while (bytes < nbytes) {
-		while (bytes < nbytes) {
-	while (wantlen) {
-		while (len >= 2) {
-		while (len >= 2) {
-	while (scale > 4096 && size_dst(src, scale) < *dst)
-	while ((ceu_read(pcdev, CSTSR) & 1) && time_before(jiffies, timeout))
-	while (ceu_read(pcdev, CAPSR) & (1 << 16))
-		while ((mf.width > 2560 || mf.height > 1920) && shift < 4) {
-	while (!ret && (is_smaller(cam_rect, rect) ||
-	while ((width > tmp_w || height > tmp_h) &&
-	while (rv->reg != 0xff || rv->val != 0xff) {
-	while (count++ < 100) {
-	while (loop) {
-	while (loop) {
-	while ((count > 0) && ubuf) {
-	while (bytes_to_write >= free_write_space) {
-	while ((saa7164_readl(reg) & 0x01) == 0) {
-	while (saa7164_readl(reg) & 0x01) {
-	while (saa7164_readl(bleflag) != SAA_DEVICE_IMAGE_BOOTING) {
-		while (err_flags != SAA_DEVICE_IMAGE_BOOTING) {
-			while (err_flags != SAA_DEVICE_IMAGE_BOOTING) {
-			while (first_timeout) {
-	while (more--) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while ((count > 0) && ubuf) {
-		while (len >= 2) {
-		while (len >= 2) {
-	while (size > 0) {
-	while ((long) size > 0) {
-	while (usbvision->scratch_headermarker_write_ptr -
-	while (scratch_get_header(usbvision, &frame->isoc_header) == USBVISION_HEADER_LENGTH) {
-	while (1) {
-	while (usbvision->num_frames > 0) {
-#define rmspace(str)	while (*str == ' ') str++;
 #define goto2next(str)	while (*str != ' ') str++; while (*str == ' ') str++;
-	while (size > 0) {
-	while (len > 0) {
-	while (len > 0) {
-		while (size > 0) {
-		while ((long) size > 0) {
-	while (--n && mchip_read(reg) != v)
-	while (*len == -1) {
-	while (size > 0) {
-	while (--i >= 0)
-		while (--i >= 0)
-	while (--num_pages_from_user >= 0)
-	while (--i >= 0) {
-	while (size * count > MEM2MEM_VID_MEM_LIMIT)
-	while (*size * *count > TIMBLOGIW_MAX_VIDEO_MEM * 1024 * 1024)
-	while (msg->addr != REG_TERM) {
-	while (i--) {
-	while (!((next->reg == TCM825X_REG_TERM)
-		while (--n >= 0) {
-		while (--num_planes >= 0) {
-		while (--num_planes >= 0) {
-	while (--n >= 0) {
-	while (--n >= 0) {
-	while ((isi_readl(isi, ISI_STATUS) & ISI_CTRL_CDC) &&
-	while ((entity = media_entity_graph_walk_next(&graph))) {
-	while (!ret && (entity = media_entity_graph_walk_next(&graph)))
-	while ((first = media_entity_graph_walk_next(&graph))
-	while (1) {
-	while (!time_after(jiffies, timeout)) {
-	while (1) {
-	while (omap3isp_stat_busy(&isp->isp_af)
-	while (!(isp_reg_readl(isp, OMAP3_ISP_IOMEM_MAIN,
-	while (1) {
-	while ((entity = media_entity_graph_walk_next(&graph))) {
-	while (1) {
-	while (!(isp_reg_readl(isp, OMAP3_ISP_IOMEM_CCP2, ISPCCP2_SYSSTATUS) &
-	while (try_count-- > 0) {
-		while (bytes_parsed < buffer_size) {
-		while (bytes_parsed < buffer_size) {
-		while (bytes_parsed < buffer_size) {
-		while (unsend_size - 4 > 0) {
-	while (gpio->sleep >= 0) {
-	while (!(gpio&0x020000)) {
-	while (afe_power_status != 0x18) {
-			while (afe_power_status != (FLD_PWRDN_TUNING_BIAS |
-			while (afe_power_status != (FLD_PWRDN_TUNING_BIAS |
-			while (afe_power_status != (FLD_PWRDN_TUNING_BIAS |
-			while (afe_power_status != (FLD_PWRDN_TUNING_BIAS |
-	while (msg->addr != S5K6AA_TERM) {
-	while (ret >= 0 && time_is_after_jiffies(end)) {
-	while (init != (u8)(end + 1)) {
-	while (regs->reg != 0xff) {
-	while (regs->reg != (u16)-1) {
-	while (regs->reg != (u16)-1 ) {
-	while (regs->reg != (u16)-1 ) {
-	while (--i && (sh_vou_reg_a_read(vou_dev, VOUSRR) & 0x101))
-	while (data[0] || data[1]) {
-	while (count > 0) {
-		while (state->watch_stereo) {
-		while (state->watch_stereo) {
-		while (state->watch_stereo) {
-	while ((res = platform_get_resource(pdev, IORESOURCE_IRQ, k))) {
-	while ((res = platform_get_resource(pdev, IORESOURCE_IRQ, i))) {
-	while (ccdc_dev->hw_ops.enum_pix(&pix, temp) >= 0) {
-	while (regr(DFCMEMCTL) & CCDC_DFCMEMCTL_DFCMWR_MASK)
-	while ((res = platform_get_resource(pdev, IORESOURCE_IRQ, k))) {
-	while ((res = platform_get_resource(pdev, IORESOURCE_IRQ, i))) {
-	while (count && (regr(DFCMEMCTL) & 0x1))
-		while (count && (regr(DFCMEMCTL) & 0x1))
-	while (i < 3) {
-	while (i >= 0) {
-	while (i < 3) {
-	while (i) {
-	while (size) {
-		while (page == NULL) {
-	while (i) {
-	while (!(omap24xxcam_reg_in(cam->mmio_base, CAM_SYSSTATUS)
-		while (ptr > pdest) {
-		while (ptr > pdest) {
 			printk(KERN_ERR "Error %i while setting req %d, "
 			printk(KERN_ERR "Error %i while setting "
-	while (len > 0) {
-	while (*size * *count > vid_limit * 1024 * 1024)
-	while (pages_done < (mem->size >> PAGE_SHIFT)) {
-	while (TVP7002_EOR != regs->reg) {
-	while (!(omap24xxcam_reg_in(base, CAMDMA_CCR(ch))
-	while ((dma->free_dmach < NUM_CAMDMA_CHANNELS) &&
-	while (dma->free_dmach < NUM_CAMDMA_CHANNELS) {
-	while (queued_sgdma > 0) {
-		while ((sg_state->next_sglist < sg_state->sglen) &&
-	while (size > 0) {
-	while (msg->addr != REG_TERM) {
-	while (i--) {
-	while (ref && ref->ctrl->id != id)
-	while (*ids != V4L2_CTRL_MENU_IDS_END) {
-		while (*ctrl_classes && V4L2_CTRL_ID2CLASS(**ctrl_classes) != ctrl_class)
-		while (*pctrl && *pctrl != id) pctrl++;
-	while (*ctrl_classes && V4L2_CTRL_ID2CLASS(**ctrl_classes) < ctrl_class)
-	while (*pctrl && *pctrl < id) pctrl++;
-	while ((vals->reg_num != 0xff) || (vals->value != 0xff)) {
-	while (remain > 0) {
-	while (gpio->sleep >= 0) {
-	while (len > 0) {
-	while (size > 0) {
-	while (--cnt > 0) {
-	while (data[i][0] != 0 || data[i][1] != 0 || data[i][2] != 0) {
-	while (gspca_dev->present && gspca_dev->streaming) {
-		while (alrc >= 10 && sd->resetlevel < 63) {
-		while (ahrc >= 20 && sd->resetlevel > 0) {
-	while (i < len) {
-		while ((i < (JEILINJ_MAX_TRANSFER - 1)) &&
-	while (--i >= 0) {
-	while (--i > 0) {
-	while (*p != 0) {
-		while (--i >= 0) {
-		while (--i >= 0) {
-	while (read_indexs[i] != 0x00) {
-	while ((*data)[1] != 0) {
-	while (--n >= 0) {
-	while (--n >= 0) {
-	while (gspca_dev->present && gspca_dev->streaming) {
-		while (bytes_left > 0 && gspca_dev->present) {
-	while (cx11646_fw1[i][1]) {
-	while (cx_sensor_init[i][0]) {
-	while (retry--) {
-	while (retry--) {
-	while (data[i][0] != 0 || data[i][1] != 0 || data[i][2] != 0) {
-	while (retry--) {
-	while (status != 0x0a && tries < 256) {
-	while (tries < 4) {
-	while (data[i][0] != 0) {
-	while (--len >= 0) {
-			while (len > 0) {
-	while ((*data)[0] != 0) {
-	while (--len >= 0) {
-			while (len > 0) {
-	while (i > 1) {
-	while ((modeU < gspca_dev->cam.nmodes) || modeD >= 0) {
-	while (size > 0) {
-	while (clock_div > 3 &&
-	while (--len >= 0) {
-	while (--len >= 0) {
-	while (--i > 0) {
-	while (!schedule_timeout(100)) {
-	while (gspca_dev->present && gspca_dev->streaming) {
-	while (--len >= 0)
-	while (retry--) {
-	while (--ncmds > 0) {
-		while (--len > 0) {
-			while (startexp > MAX_EXP_102)
-			while (startexp > MAX_EXP)
-		while (startexp > MAX_EXP && sd->params.exposure.gain <
-			while (new_exposure < old_exposure / 2)
-			while (new_exposure < 2 * old_exposure &&
-	while (action->req) {
-	while (--len >= 0) {
-	while (--len >= 0) {
-	while (data[i][1] != 0) {
-	while ((*sensormap)[0]) {
-	while ((*sensor)[0]) {
-	while (++n < len) {
-	while (--ncmds >= 0) {
-	while (--count > 0) {
-	while (--count > 0) {
-	while (--count > 0) {
-	while (--cnt > 0) {
-	while (gspca_dev->present && gspca_dev->streaming) {
-		while (bytes_left > 0 && gspca_dev->present) {
-	while (len) {
-	while (vals->reg_num != 0xff) {
-	while (decinum % 3 == 0 && deciden % 3 == 0) {
-	while (decinum % 2 == 0 && deciden % 2 == 0) {
-	while (deciden > 32) {
-	while (((decinum | deciden) & 1) == 0) {
-	while (deciden > 32) {
-		while (cnt <= 0) {
-		while (!w9966_i2c_getscl(cam)) {
-	while (dleft > 0) {
-	while (vals->reg_num != 0xff || vals->value != 0xff) {
-	while (dev->status == STATUS_STREAMING &&
-	while (dev->status == STATUS_STREAMING) {
-	while (buf && ++c < 500 &&
-	while (count > 0 && buf) {
-	while (!v4l2_subdev_call(sd, video, enum_mbus_fmt, raw_fmts, &code))
-	while (1 != i2c_master_send(ir->c, &b, 1)) {
-	while (0 == (state & bit)) {
-	while (count > 3) {
-	while (1) {
-				while ((mdl = cx18_dequeue(s_vbi,
-		while (start + len > p) {
-	while (!list_empty(&s->vb_capture)) {
-	while (*size * *count > VB_MIN_BUFFERS * VB_MIN_BUFSIZE)
-	while (--fw_retry_count > 0) {
-	while (--fw_retry_count > 0) {
 	} while ((dl_control & 0xff000000) != 0x0f000000);
-	while (dl_control & 0x3fff)
-	while (retries1 < 5) {
-				while (--i >= 0) {
-	while (!list_empty(&q_src->list)) {
-		while (!list_empty(&mdl->buf_list)) {
-	while ((mdl = cx18_dequeue(s, &s->q_idle)))
-	while (!list_empty(&s->buf_pool)) {
-	while (remaining >= sizeof(struct cx18_enc_idx_entry) &&
-	while (offset + sizeof(seghdr) < fw->size) {
-	while (dlen) {
-	while (dlen) {
-		while (1) {
-	while ((bp = pvr2_stream_get_idle_buffer(cp->stream)) != NULL) {
-	while (cp->c_data_len <= cp->c_data_offs) {
-	mutex_lock(&cp->mutex); while (1) {
-		while (1) {
 	} while (0); LOCK_GIVE(hdw->big_lock);
-		while ((st = hdw->master_state) != PVR2_STATE_RUN) {
-	while (src[cnt] && (cnt + 1) < dst_max) {
-	while (hdw->ctl_write_pend_flag || hdw->ctl_read_pend_flag) {
-	while (ucnt < ccnt) {
-		while ((lcnt + ucnt < ccnt) && (buf[lcnt + ucnt] != '\n')) {
-		while (sp->buffer_total_count < cnt) {
-		while (sp->buffer_total_count > cnt) {
-	while ((sp->buffer_total_count - cnt) > sp->buffer_target_count) {
-	while ((lp = sp->queued_list.next) != &sp->queued_list) {
-		while ((bp = pvr2_stream_get_ready_buffer(sp)) != NULL) {
-			while (tcnt) {
-			while (tcnt || wcnt) {
-	while (!kthread_should_stop()) {
-	while ((bp = pvr2_stream_get_idle_buffer(stream)) != NULL) {
-	while (bufSize) {
-			while ((cnt < bufSize) && (bufPtr[cnt] != '-')) cnt++;
-		while (cnt < bufSize) {
-		while (count) {
-	while (len) {
-		while ((cnt < len) &&
-		while (cnt < len) {
-	while ((cnt < len) && ((ptr[cnt] <= 32) || (ptr[cnt] >= 127))) cnt++;
-	while ((cnt < len) && ((ptr[len-(cnt+1)] <= 32) ||
-	while (count--) {
-	while (count) {
-		while ((mp = pvr2_context_notify_first) != NULL) {
-		while (len >= 2) {
-		while (len >= 2) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-		while(1) {
-		while(1) {
-	while (p < endp) {
-	while (p < endp) {
-		while (size > 0) {
-	while ((regs[R_EB10] & 0x3f) < cid_target) {
-		while (Spur < BANDWIDTH) {
 	} while (i < 9);
-	while (i++ < 10 && mt2060_readreg(priv, REG_MISC_STAT, &b) == 0 && (b & (1 << 6)) == 0)
-	while (len) {
-	while (tda827x_table[i].lomax < tuner_freq) {
-	while (tda827x_table[i].lomax < N * 62500) {
-	while (frequency_map[i].lomax < tuner_freq) {
-	while (tda827xa_analog[i].lomax < N * 62500) {
-	while (tda18271_thermometer[i].d < (regs[R_TM] & 0x0f)) {
-	while ((tda18271_cid_target[i].rfmax * 1000) < *freq) {
-	while ((map[i].rfmax * 1000) < *freq) {
-	while ((map[i].lomax * 1000) < *freq) {
-	while ((map[i].rfmax * 1000) < *freq) {
-	while (reg_pair[i].reg || reg_pair[i].val) {
-	while (reg_pair1[i].reg || reg_pair1[i].val) {
-		while (reg_pair2[j].reg || reg_pair2[j].val) {
-	while ((ret == 0) && (reg_pair[i].reg || reg_pair[i].val)) {
-		while ((WatchDogTimer > 0) && (result == XC_RESULT_SUCCESS)) {
-	while ((i2c_sequence[index] != 0xFF) ||
-			while (pos < len) {
-	while ((lockState == 0) && (watchDogCount > 0)) {
-	while ((i2c_sequence[index] != 0xFF) ||
-			while (pos < len) {
-	while ((lock_state == 0) && (watchdog_count > 0)) {
-	while (p < endp) {
-		while (in_x / xpsc >= 384 )
-		while ( in_x / xpsc >= 768 )
-	while (!kthread_should_stop()) {
-	while (next_one < size) {
-	while (n > 0 && dev->in_use) {
 		/* repeat while the pulse is non-zero length */
-		while (remaining_us > 0 && dev->in_use) {
 	 * TX ones while the transmission is still being performed! */
-	while (fifo_remaining > 0) {
-	while (fifo > 0 && buf_size > 0) {
-	while (fifo > 0 && buf_size > 0) {
-	while (fifo > 0 && buf_size > 0) {
 	 * while we didn't provide 'length' bytes, device is opened in blocking
-	while (written < length && ret == 0) {
-	while (1) {
-	while (start <= end) {
-	while ((tmp = strsep((char **) &data, " \n")) != NULL) {
-	while (inb(data->sbase + WBCIR_REG_SP3_LSR) & WBCIR_RX_AVAIL) {
-	while (data->txbuf[data->txoff] == 0 && data->txoff != data->txlen)
-	while (data->txstate == WBCIR_TXSTATE_ACTIVE) {
-		while (nvt_cir_wake_reg_read(nvt, CIR_WAKE_RD_FIFO_ONLY_IDX)) {
-	while (!list_empty(&g_smsdvb_clients))
-	while (!list_empty(&coredev->clients)) {
-	while (size && rc >= 0) {
-	while (1) {
-		while (!list_empty(&coredev->buffers)) {
-	while (!list_empty(&client->idlist)) {
-	while (!list_empty(&g_smscore_notifyees)) {
-	while (!list_empty(&g_smscore_registry)) {
-	while (size >= smsdev->func->cur_blksize) {
-			while (size) {
-	while (!opdone) {
-	while (mantis->last_block != mantis->busy_block) {
-	while (i < num) {
-	while (dev->EventQueueReadIndex != dev->EventQueueWriteIndex) {
-	while (Cur->ngeneBuffer.SR.Flags & 0x80) {
-	while (i > 0) {
-	while (Length > 0) {
-	while (left) {
-	while (len) {
-		while (len >= 188) {
-	while (i < num) {
-	while (len) {
-	while (dst_ca_comm_err < RETRIES) {
-	while (card->bt->last_block != card->bt->finished_block) {
-	while (bt->line_bytes > 4095) {
-	while (1) {
-			while (p-- != tab) {
-	while (c < count && (p->mpeg == 0 ||
-				while (c < count && p->found < 14) {
-				while (!p->which && c < count &&
-						while (c < count && p->which < 7) {
-						while (c < count && p->which < 12) {
-			while (c < count && p->found < p->plength + 6) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (1) {
-	while (*data != 0xff) {
-	while (1) {
-	while (todo > 0) {
-	while (todo >= TS_SIZE) {
-	while (todo > 0) {
-	while (todo > 0) {
-	while (todo > 0) {
-	while (c < length - 3 && !found) {
-	while (c < length) {
-	while (c < length) {
-		while (*i != 0xff) {
-	while (!kthread_should_stop()) {
-	while (i--)
-	while (i < pt1_nr_tables) {
-	while (i--)
-	while (i--)
-	while (i-- > j)
-	while (j--)
-			while (len--) {
-		while (pluto->dma_buf[i] == 0x47)
-	while ((xtal/max_prediv) >= fcp_min)
-	while ((xtal/min_prediv) <= fcp_max) {
-	while (len--)
-	while (ret >= 0 && ret != blen && try < 3) {
-	while (ptr[0] != 0xff) {
-	while (i < len)
-	while (i < num) {
-	while (--length)
-	while (tries--) {
-	while (1) {
-	while ((ret = dvb_usb_get_hexline(fw,&hx,&pos)) > 0) {
-	while (1) {
-	while (1) {
-		while (stream->buf_num) {
-	while (i < num) {
-	while ((ret = dvb_usb_get_hexline(fw, &hx, &pos)) > 0) {
-	while (i < num) {
-	while ((fifo_status == 0) && (i++ < 5))
-	while (i < num) {
-		while (rc_seq->address) {
-	while (left) {
-	while (left) {
-	while (left) {
-	while (left) {
-		while (input->cbuf != ((input->stat >> 11) & 0x1f)
-	while (wlen > 4) {
-	while (wlen) {
-	while (rlen > 4) {
 		while (ddbreadl(SPI_CONTROL) & 0x0004)
-	while (rlen > 0) {
-	while(dvb_ringbuffer_avail(rbuf) > DVB_RINGBUFFER_PKTHDRSIZE) {
-	while((dvb_ringbuffer_avail(rbuf) - consumed) > DVB_RINGBUFFER_PKTHDRSIZE) {
-	while (count--) {
-	while (pos < count) {
-	while (1) {
-		while (f->next != dvbdmxfilter)
-	while (1) {
-	while ((!end_chain) && (address < 0x1000)) {
-	while (!kthread_should_stop()) {
-			while (dvb_ca_en50221_check_camstatus(ca, slot)) {
-				while ((status = dvb_ca_en50221_read_data(ca, slot, NULL, 0)) > 0) {
-	while (fragpos < count) {
-		while (!time_after(jiffies, timeout)) {
-	while ((slot_count < ca->slot_count) && (!found)) {
-		while (idx != -1) {
-	while ( !found  && c < count){
-	while (len>=184) {
-	while(!ready) {
-	while (1) {
-			while (mferetry-- && (mfedev->users != -1 ||
-	while (id < DVB_MAX_IDS) {
-	while (num < DVB_MAX_ADAPTERS) {
-	while (len--) {
-	while (length) {
-	while (1) {
-				while (i) {
-	while ((item = dec->urb_frame_list.next) != &dec->urb_frame_list) {
-	while ((item = dec->filter_info_list.next) != &dec->filter_info_list) {
 } while (0)
-	while (l >= 190) {
-	while (len != 0) {
-	while (read_pos < length) {
-		while ((temp_chip != NULL) &&
-			while (prev_node->next_inode != del_node)
-		while (new_node->next_inode != NULL)
-	while ((position == 0) && (i < 8)) {
-		while ((imax - imin) > 1) {
-				while ((imax - imin) > 1) {
-	while ((timer < time_out) && (lock == 0)) {
-		while ((i < 3) && (modcode != cllqs2[i].modcode))
-		while ((i < 14) && (modcode != cls2[i].modcode))
-			while ((i < 11) && (modcode != cllas2[i].modcode))
-	while (i < NbData) {
 		while (stv0900_get_bits(intp, FIFO_FULL))
-	while ((stv0900_get_bits(intp, TX_IDLE) != 1) && (i < 10)) {
-	while ((stv0900_get_bits(intp, RX_END) != 1) && (i < 10)) {
-	while (l) {
-		while (((dib7000p_read_word(state, 1856) >> 15) & 0x1) != 1)
-	while (tmp_val >>= 1)
-	while (n_overflow == 1 && i) {
-	while (n_overflow == 1 && i) {
-	while (n_empty == 1 && i) {
-		while (pos < fw->size) {
-	while ((i < 10) && (ret != 0)) {
-	while ((i < 10) && (ret != 0)) {
-	while ((si21_readreg(state, LNB_CTRL_REG_1) & 0x8) == 8) {
-	while (counter < 20) {
-	while (counter < 20) {
-			while (count < 20) {
-			while (count < 20) {
-	while (cx24110_readreg(state,0x6d)&0x80)
-	while ((temp_dev != NULL) &&
-			while (prev_dev->next_dev != del_dev)
-			while (temp_dev->next_dev != NULL)
-	while ((!tmg_lock) && (cur_step < steps)) {
-	while ((timer < timeout) && (!lock)) {
-				while ((cur_step <= steps) && (!lock)) {
-		while ((i <= 50) && (tmg != 0) && (tmg != 0xff)) {
-		while ((i < 3) && (modcod != car_loop_qpsk_low[i].modcod))
-		while ((i < 14) && (modcod != car_loop[i].modcod))
-			while ((i < 11) && (modcod != car_loop_apsk_low[i].modcod))
-			while ((!(stv090x_get_dmdlock(state, (state->DemodTimeout / 2)))) && (i <= 2)) {
-	while ((timer < timeout) && (!lock)) {
-		while ((timer < timeout_fec) && (!lock)) {
-		while ((max - min) > 1) {
-		while (fifo_full) {
-	while ((!idle) && (i < 10)) {
-	while (fifo_full) {
-	while ((!idle) && (i < 10)) {
-	while ((rx_end != 1) && (i < 10)) {
-	while ((Map[i].m_Frequency != 0) && (Frequency > Map[i].m_Frequency))
-	while ((Map[i].m_Frequency != 0) &&
-	while ((Map[i].m_Frequency != 0) &&
-	while (i < 7 && (Frequency > Map[i].m_RF_max))
-		while (CID_Gain < CID_Target) {
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-	while (time_before(jiffies, timeout)) {
-	while (1) {
-	while (jiffies - start < timeout &&
-		while (l) {
-		while (tmp_val >>= 1)
 	} while (exit_condition == 0);
-	while ((index_frontend < MAX_NUMBER_OF_FRONTENDS) && (state->fe[index_frontend] != NULL))
-	while ((index_frontend < MAX_NUMBER_OF_FRONTENDS) && (state->fe[index_frontend] != NULL))
-	while (BlockSize > 0) {
-	while (!status) {
-	while(time_before(jiffies, timeout)) {
-	while(time_before(jiffies, timeout)) {
-	while(time_before(jiffies, timeout)) {
-	while (cx24116_readreg(state, CX24116_REG_EXECUTE)) {
-	while ((position == 0) && (i < 8)) {
-	while ((!SYR_var) && (wd > 0)) {
-	while ((CPAMPvalue < CPAMPMin) && (wd > 0)) {
 	/*while ( ((!u_var1)||(!u_var2)||(!u_var3)||(!u_var4))  && (wd>=0)) */
-	while (((!u_var1) || (!u_var2) || (!u_var3)) && (wd >= 0)) {
-	while ((!u_var4) && (wd >= 0)) {
-	while ((timing_offset == 0) && (tempo > 0)) {
-	while (((index) < num_trials) && (ter_state->state != FE_TER_LOCKOK)) {
-	while (cpt < 10) {
-	while (l) {
-		while ((search_state =
-	while (time_before(jiffies, t)) {
-	while (time_before(jiffies, t)) {
-	while (time_before(jiffies, t)) {
-	while (freq > tune->max_freq) /* find the right one */
-	while (freq > lna_match->max_freq) /* find the right one */
-		while (freq/1000 > tmp->freq) /* find the right one */
-	while (freq/1000 > tmp->freq) /* find the right one */
-	while (l) {
-		while (size--)
-			while (dib9000_read_word(state, 790) != (len / 2) && i)
-			while (dib9000_read_word(state, 789) && i)
-			while (dib9000_read_word(state, 791) > 0 && i)
-	while ((index_frontend < MAX_NUMBER_OF_FRONTENDS) && (state->fe[index_frontend] != NULL))
-	while ((index_frontend < MAX_NUMBER_OF_FRONTENDS) && (state->fe[index_frontend] != NULL))
-	while (pos != len) {
-		while(!(tda1004x_read_byte(state, TDA1004X_STATUS_CD) & 0x20)) {
-	while (counter++ < 5) {
-	while (1) {
-	while (!STB0899_GETFIELD(RXEND, reg)) {
-	while (!STB0899_GETFIELD(TXIDLE, reg)) {
-		while ((max - min) > 1) {
-		while (loop == 1) {
-		while (loop == 1) {
-		while (loop == 1) {
-	while (fw_pos < SP8870_FIRMWARE_SIZE + SP8870_FIRMWARE_OFFSET){
-	while ((sync & 0x03) != 0x03 && (sync & 0x0c) && maxtry--) {
-		while (if_sample_freq > (adc_freq / 2))
-	while (BlkSize > 0) {
-	while (txlen) {
-	while (rxlen) {
-		while (len) {
-	while (!(tda10086_read_byte(state, 0x50) & 0x01)) {
-	while ((cx24123_readreg(state, 0x20) & 0x40) == 0) {
-	while ((cx24123_readreg(state, 0x20) & 0x40) == 0) {
-	while ((cx24123_readreg(state, 0x20) & 0x80)) {
-	while (!(cx24123_readreg(state, 0x29) & 0x40)) {
-	while ((stb0899_check_tmg(state) != TIMINGOK) && next_loop) {
-	while (1) {
-	while ((1 << i) <= abs(number))
-	while ((!lock) && (time < timeout)) {
-		while ((internal->status != DVBS2_FEC_LOCK) && (i < 3)) {
-				while ((internal->status != DVBS2_FEC_LOCK) && (i < 3)) {
-			while ((internal->status != DVBS2_FEC_LOCK) && (i < 3)) {
-	while (stv0299_readreg(state, 0x0a) & 1) {
-	while ((stv0299_readreg(state, 0x0a) & 3) != 2 ) {
-	while ((current_step <= nb_steps) && (lock == FALSE)) {
-			while ((stv0900_get_demod_lock(intp,
-	while ((timer < time_out) && (lock == 0)) {
-		while ((timer < fec_timeout) && (lock == 0)) {
-		while ((i <= 50) && (timing != 0) && (timing != 0xff)) {
-	while ((timing_lck == FALSE) && (current_step < nb_steps)) {
-	while (f_MHz > wbd->max_freq)
-	while (l) {
-		while (state->current_rf / 1000 > wbd->max_freq)
-				while (LUT_offset->RF_freq != 0xffff) {
-			while (state->rf_request > tune->max_freq)
-			while (state->rf_request > pll->max_freq)
-		while (state->current_rf / 1000 > wbd->max_freq)
-	while (link_top(graph) < stack_top(graph)->num_links) {
-	while ((entity = media_entity_graph_walk_next(&graph))) {
-	while ((entity = media_entity_graph_walk_next(&graph))) {
-	while ((skb = skb_dequeue(&fmdev->rx_q))) {
-		while (index + 1 < FM_RX_RDS_INFO_FIELD_MAX) {
-	while (rds_len >= FM_RDS_BLK_SIZE) {
-	while (rds_len > 0) {
-	while (block_count < count) {
-	while (fw_data && fw_len > 0) {
-	while (i--) {
-	while (rest != 0) {
-		while ((inb(dev->io) & 0x80) != 0) {
-	while (i < count && dev->rdsin != dev->rdsout)
-	while (radio->wr_index == radio->rd_index) {
-	while (block_count < count) {
-	while (bits--) {
-	while (id_table[i].card_vendor != 0 && dev == NULL) {
-	while (radio->wr_index == radio->rd_index) {
-	while (block_count < count) {
-	while (remaining) {
-	while (frame_len) {
-	while (!list_empty(&drain_task_list)) {
-	while (!list_empty(&drain_cmd_list)) {
-	while ((ptr = strsep(&opts, ",")) != NULL) {
-	while ((ptr = strsep(&opts, ",")) != NULL) {
-	while (atomic_read(&pr_reg->pr_res_holders) != 0) {
-	while (tpdl > 0) {
-	while (size >= 16) {
-	while (len < cmd->data_length) {
-	while (atomic_read(&lu_gp->lu_gp_ref_cnt))
-	while (atomic_read(&lu_gp_mem->lu_gp_mem_ref_cnt))
-	while (atomic_read(&tg_pt_gp->tg_pt_gp_ref_cnt))
-	while (atomic_read(&tg_pt_gp_mem->tg_pt_gp_mem_ref_cnt))
-	while ((ptr = strsep(&opts, ",")) != NULL) {
-		while (bio_add_page(bio, sg_page(sg), sg->length, sg->offset)
-	while ((bio = bio_list_pop(&list)))
-	while ((bio = bio_list_pop(&list)))
-		while (i < (4 + page_83[3])) {
-		while (i < (4 + page_83[3]))
-	while (!list_empty(&dispose_list)) {
-	while (length) {
-	while (i > 0) {
-	while (!list_empty(&lun->lun_cmd_list)) {
-	while (!kthread_should_stop()) {
-	while (total_sg_needed) {
-	while (req->rd_size) {
-	while ((ptr = strsep(&opts, ",")) != NULL) {
-	while (atomic_read(&deve->pr_ref_count) != 0)
-	while (page_len > 0) {
-	while ((ptr = strsep(&opts, ",")) != NULL) {
-		while (len > 0 && data_len > 0) {
-	while (*hbio) {
-	while (hbio) {
-	while (start < end) {
-	while ((ts = iscsi_get_ts_from_inactive_list())) {
-	while ((iscsit_global->inactive_ts + 1) > orig_count) {
-	while (exp_data_sn > data_sn) {
-	while (cmd->write_data_done > write_data_done) {
-	while (data_len) {
-	while (total_rx < data) {
-	while (total_tx < data) {
-	while (offset < buf_len) {
-	while (begrun < last_r2tsn) {
-	while (begrun > data_sn++) {
-				while (data_sn < begrun) {
-				while (data_sn < begrun) {
-	while (begrun < last_statsn) {
-	while (length > 0) {
-	while (!kthread_should_stop()) {
-	while (offset < cmd->data_length) {
-	while (offset < cmd->data_length) {
-	while (tiqn->tiqn_access_count != 0) {
-	while (data_length) {
-	while (length) {
-	while (j < i)
-	while (data_length) {
-	while (cmd->outstanding_r2ts < conn->sess->sess_ops->MaxOutstandingR2T) {
-	while (!kthread_should_stop()) {
-	while (!kthread_should_stop()) {
-	while (buf[i] != '\0') {
-	while (1) {
-	while (start < end) {
-	while (atomic_read(&nacl->acl_pr_ref_count) != 0)
-	while (atomic_read(&se_tpg->tpg_pr_ref_count) != 0)
-	while (irq_stat != 0) {
-		while (stat) {
-	while (1) {
-		while (status) {
 	 * IRQs, while the others use banked IRQs, would need some setup
-	while (status) {
-	while (new_irqs) {
-	while (n--) {
-	while (n--) {
-		while (n--)
-		while (n--)
-	while(1) {
-	while (--j >= 0) {
-	while (--i >= 0) {
-		while (pending) {
-			while (pending) {
-			while (n < BITS_PER_LONG) {
-		while (gpio_desc[gpio].chip == chip)
-	while (i--)
-	while (num--)
-		while (val) {
-	while (irq_stat != 0) {
-		while (stat) {
-	while (fw_csr_iterator_next(&ci, &key, &value)) {
-	while (fw_csr_iterator_next(&ci, &key, &value)) {
-		while (ret > 0 && isspace(buf[ret - 1]))
-	while (fw_csr_iterator_next(&ci, &key, &value)) {
-	while (fw_csr_iterator_next(&ci, &key, &value)) {
-		while (device->max_speed > SCODE_100) {
-	while (sp > 0) {
-	while (fw_csr_iterator_next(&ci, &key, &value)) {
-	while (p < end) {
-	while (i != last && res_count == 0) {
-	while (i != end_buffer_index) {
-	while (p < end) {
-	while (i != end_buffer) {
-	while (last->branch_address != 0) {
-		while (iso_event) {
-		while (iso_event) {
-	while (!(d->control & cpu_to_le16(DESCRIPTOR_BRANCH_ALWAYS))) {
-	while (fw_csr_iterator_next(&ci, &key, &value)) {
-	while (1) {
-	while (sid < end) {
-	while (&node0->link != &list0) {
-	while (self_id_count--)
-		while (peer->pdg_size >= FWNET_MAX_FRAGMENTS) {
-	while (i < desc->length)
-	while (card->tlabel_mask & (1ULL << tlabel)) {
-	while (handler->offset + handler->length <= region->end) {
-		while (pfnleft) {
-	while (1) {
-	while (retries < 3) {
-	while (kfifo_out(&sony_laptop_input.fifo,
-	while (--n && (command))					\
-	while (ret < count &&
-		while ((irb =
-				while ((status =
-	while (--i >= 0) {
-	while (value != 0) {
-	while (remain) {
-	while (status & 1) {
-	while (readl(&mailbox->scu_flag) != 1) {
-	while (readl(&mailbox->status) != IPC_FW_TXLOW) {
-	while (readl(&mailbox->scu_flag) == 1) {
-	while (readl(&mailbox->status) != IPC_FW_TXHIGH) {
-	while (mailbox->scu_flag == 0) {
-	while (qlist_size) {
-	while (*fmt) {
-	while ((end = strchr(start, ',')) && end == start)
-	while ((cmd = next_cmd(&buf))) {
-	while (!res && i < ARRAY_SIZE(tpacpi_driver_attributes)) {
-	while (!kthread_should_stop()) {
-	while (1) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while ((cmd = next_cmd(&buf))) {
-	while (!rc && (cmd = next_cmd(&buf))) {
-	while ((dev = dmi_find_device(DMI_DEV_TYPE_OEM_STRING, NULL, dev))) {
-		while (ioread8(&rtl_table->command)) {
-	while (!kthread_should_stop()) {
-			while (ret & 1 << (i - WM831X_IRQ_GPIO_1)) {
-	while ((readl(PRCM_SEM) & PRCM_SEM_PRCM_SEM) != 0)
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(0))
-		while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(0))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(1))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(1))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(1))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(1))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(1))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(2))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(3))
-	while ((readl(PRCM_SEM) & PRCM_SEM_PRCM_SEM) != 0)
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(4))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(4))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(4))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(4))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(4))
-	while ((readl(PRCM_SEM) & PRCM_SEM_PRCM_SEM) != 0)
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(5))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(5))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(1))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(0))
-	while (1) {
-		while (isr) {
-	while (acks) {
 } while (0);
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(5))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(5))
-	while (readl(PRCM_MBOX_CPU_VAL) & MBOX_BIT(0))
-	while (--i >= 0)
-	while (1) {
-	while (pins) {
-		while (status) {
-	while (curr_voltage < tps_comp.uV_max) {
 	while ((isr = tmio_ioread8(t7l66xb->scr + SCR_ISR) &
 	while ((isr = tmio_ioread8(tc6393xb->scr + SCR_ISR) &
-	while (timeout) {
-	while (!((val = ucb1400_reg_read(ac97, UCB_ADC_DATA))
-	while ((i < buf_size) && (buf[i] == ' '))
-	while ((i < buf_size) && (buf[i] != ' '))
-		while ((i < buf_size) && (buf[i] == ' '))
-		while ((i < buf_size) && (buf[i] != ' '))
-	while (!(usbhs_read(omap->tll_base, OMAP_USBTLL_SYSSTATUS)
-	while (!(usbhs_read(omap->uhh_base, OMAP_UHH_SYSSTATUS)
-	while (!(usbhs_read(omap->uhh_base, OMAP_UHH_SYSSTATUS)
-	while (!(usbhs_read(omap->uhh_base, OMAP_UHH_SYSSTATUS)
-	while (!(usbhs_read(omap->tll_base, OMAP_USBTLL_SYSSTATUS)
-	while (!kthread_should_stop()) {
-	while (status) {
-	while (asic3_gpio_get(&asic->gpio, ASIC3_GPIO(C, cell->id)) != 0)
-		while (edge_change) {
-	while (isr) {
-	while (numregs) {
-	while ((i < bankref->nranges) &&
-	while (tries--) {
-	while (stat & ~mask) {
-	while (*start == ' ')
-	while (*start == ' ')
-		while (resconfig->resource) {
-	while (br_exp < CR_MAXPEXP + CR_MIND && (br_man % 2 == 0)) {
-	while (div < CR_MAXD) {
-  while (pio_instead) {
-  while (pio_instead) {
-  while ((int_source = rd_regl (dev, INT_SOURCE_REG_OFF)
     // the while loop. This is only of issue for slow hosts (or when
-  while (!(idle_channels = rd_regw (dev, TX_STATUS_OFF) & IDLE_CHANNELS_MASK)) {
-    while (keep_going) {
-  while ((free_buffers = rd_regw (dev, TX_FREE_BUFFER_COUNT_OFF)) < buffers_required) {
-  while (control_0_reg & RESET_HORIZON)
-	while (free < zatm_dev->pool_info[pool].high_water) {
-	while (x = zin(MWA(mbx)), (pos & 0xffff) != x) {
-	while (x = zin(MWA(mbx)), (pos & 0xffff) != x) {
-	while ((reason = zin(GSR))) {
 	while (!(zin(GSR) & uPD98401_INT_IND));
-	while (i) zpokel(zatm_dev,0,--i);
 	while (!(zin(GSR) & uPD98401_INT_IND));
-	while (i-- > 0) {
-	while (rate > 0x3ff) {
-	while (rate_atmf < 0x400) {
-	while (he_dev->rbrq_head != rbrq_tail) {
-	while (he_dev->tbrq_head != tbrq_tail) {
-	while (he_dev->irq_head != he_dev->irq_tail) {
-		while (he_readl(he_dev, RCC_STAT) & RCC_BUSY) {
-		while (((tx_inuse = atomic_read(&sk_atm(vcc)->sk_wmem_alloc)) > 1) &&
-		while (!((tsr4 = he_readl_tsr4(he_dev, cid)) & TSR4_SESSION_ENDED)) {
-		while (TSR0_CONN_STATE(tsr0 = he_readl_tsr0(he_dev, cid)) != 0) {
-	while (size) {
-	while (do_rx_dma(vcc,NULL,1,size,0)) EVENT("BUSY LOOP",0,0);
-	while (eni_vcc->descr != (tmp = (readl(vci_dsc+4) & MID_VCI_DESCR) >>
-	while (ENI_VCC(vcc)->descr != (tmp = (readl(vci_dsc+4) & MID_VCI_DESCR)
-	while ((curr = eni_dev->fast)) {
-	while ((curr = eni_dev->slow)) {
-	while (eni_in(MID_SERV_WRITE) != eni_dev->serv_read) {
-	while (1) {
-			while ((skb = skb_dequeue(&tx->backlog))) {
-	while ((skb = skb_dequeue(&eni_dev->tx_queue))) {
-		while (eni_in(MID_TX_RDPTR(eni_vcc->tx->index)) !=
-	while (test_bit(flag,&vcc->flags) == old_test) {
-	while ((skb = skb_dequeue(&lvcc->tx.backlog)) != NULL)
 			      data_h(); udelay(5); } while (0)
-	while (space >= 64) {
-	while (lanai->service.ptr != end) {
-	while (1 << atmdev->ci_range.vci_bits < lanai->num_vci)
-	while (stat & SAR_STAT_CMDBZ)
-	while (pool->skb[index]) {
-	while ((skb = skb_dequeue(&scq->transmit))) {
-	while ((skb = skb_dequeue(&scq->pending))) {
-	while ((skb = skb_dequeue(&scq->pending))) {
-	while ((skb = skb_dequeue(&vc->scq->pending))) {
-	while (head != tail) {
-	while (r > 0) {
-	while (count--) {
-		while (atomic_read(&vc->scq->used) > 0) {
-	while (idt77252_chain) {
-	while (len > 0) {
-		while (!(man & (1<<31))) {
-	while ((wp = read_fs (dev, Q_WP (q->offset))) & Q_FULL) {
-	while (!((rq = read_fs (dev, Q_RP(q->offset))) & Q_EMPTY)) {
-	while (!((rq = read_fs (dev, Q_RP(q->offset))) & Q_EMPTY)) {
-	while (!((rq = read_fs (dev, Q_RP(q->offset))) & Q_EMPTY)) {
-	while (reginit->reg != PHY_EOF) {
-	while (nr_buffers_in_freepool(dev, fp) < fp->nr_buffers) {
-	while (--to) {
 		/* XXX Wait a while for the chip to release all buffers. */
-    while (buffer) {
-	    while (bsq->freebuf_count >= RBD_BLK_SIZE) {
-		    while (i > 0)
-    while (time_before(jiffies, timeout)) {
-    while (*str) {
 	while (fore200e_monitor_getc(fore200e) >= 0);
-			while ((skb = skb_dequeue(&card->tx_queue[i])))
-    while (ptrs->out != my_slot) {
-    while (ptrs->out->request != cpu_to_be32 (SRB_COMPLETE)) {
-    while (command_do (dev, &cmd))
-    while (rxq->pending > rxq->buffers_wanted)
-  while (rxq->pending < rxq->maximum && rxq->pending < rxq->buffers_wanted) {
-      while (!rx_take (dev, pool))
-    while (!tx_take (dev))
-    while (!(man & (1<<31))) {
-      while (command_do (dev, &cmd))
-      while (command_do (dev, &cmd))
-      while (command_do (dev, &cmd))
-    while (command_do (dev, &cmd))
-    while (command_do (dev, &cmd))
-    while (command_do (dev, &cmd))
-  while (tx_give (dev, &tx))
-  while (rec) {
-  while (command_do (dev, &cmd)) {
-  while (command_do (dev, &cmd)) {
-	while ((reason = GET(PICR))) {
-  while (dev->host_tcq_wr != tcq_wr) {
-     while (i < dev->num_tx_desc) {
-  while (!desc_num || (dev->desc_tbl[desc_num -1]).timestamp) {
-  while (tmp != 1) {
-   while (toBeAssigned)
-      while (cbrVC)  // If another VC at this location, we have to keep looking
-   while (num_desc && (skb = skb_dequeue(&iadev->tx_backlog))) {
-   while ( (rtne = ia_deque_rtn_q(&iadev->tx_return_q))) {
-       while (skb1 && (skb1 != skb)) {
-	while (len--) {
-    while(count < length){
-        while(col++ < 16){      /* pad end of buffer with blanks */
-  while (tcq_st_ptr != tcq_ed_ptr) {
-	while(!(state & PCQ_EMPTY))  
-  while(dle != cur_dle)  
-       while (i != iadev->num_vc) {
-        while (dle != cur_dle)
-        while (i != iadev->num_vc) {
-	while (--i >= 0)
-	while (--i >= 0) {
-   while( (status = readl(iadev->reg+IPHASE5575_BUS_STATUS_REG) & 0x7f))  
-           while((skb = skb_dequeue(&iadev->tx_backlog))) {
-           while((skb = skb_dequeue(&tmp_tx_backlog))) 
-	while ((hb = skb_dequeue(&card->hbpool.queue)) != NULL) {
-	while ((iovb = skb_dequeue(&card->iovpool.queue)) != NULL) {
-	while ((lb = skb_dequeue(&card->lbpool.queue)) != NULL)
-	while ((sb = skb_dequeue(&card->sbpool.queue)) != NULL)
 	while (CMD_BUSY(card)) ;
-		while ((iovb = skb_dequeue(&card->iovpool.queue)) != NULL)
-		while ((sb = skb_dequeue(&card->sbpool.queue)) != NULL)
-		while ((lb = skb_dequeue(&card->lbpool.queue)) != NULL)
-		while ((hb = skb_dequeue(&card->hbpool.queue)) != NULL)
-		while (readl(card->membase + RAWCT) != card->rawch) {
-	while (r > 0) {
-	while (scq->tail == scq->next) {
-		while (scq->tail == scq->next) {
-	while (!ns_tsi_isempty(card->tsq.next) || !ns_tsi_isempty(one_ahead) ||
-		while (ns_tsi_isempty(card->tsq.next)) {
-	while (i != pos) {
-	while (card->hbpool.count < card->hbnr.init) {
-	while (count-- > 0)
-			while (card->sbfqc < card->sbnr.init) {
-			while (card->lbfqc < card->lbnr.init) {
-			while (card->hbpool.count > card->hbnr.init) {
-			while (card->hbpool.count < card->hbnr.init) {
-			while (card->iovpool.count > card->iovnr.init) {
-			while (card->iovpool.count < card->iovnr.init) {
-	while (1) {
-	while (c->n_buffers[LIST_CLEAN] + c->n_buffers[LIST_DIRTY] >
-	while ((b = __get_unclaimed_buffer(c)))
-	while (c->need_reserved_buffers) {
-	while (!list_empty(&c->reserved_buffers)) {
-	while (!list_empty(&c->reserved_buffers)) {
-		while (!list_empty(&c->lru[LIST_CLEAN])) {
-	while (*str)
-	while(j--) {
-	while ( ++j < pi->raid_disks )
-		while (i--)
-		while (bio) { /* submit pending writes */
-	while(sectors) {
-		while (d != r1_bio->read_disk) {
-		while (d != r1_bio->read_disk) {
-	while(sectors) {
-		while (d != read_disk) {
-		while (d != read_disk) {
-		while (vec[idx].bv_page == NULL)
-	while (sect_to_write) {
-					while (i > 0) {
-	while (request_module("dm-exstore-%s", type_name_dup) ||
-			while (i--)
-	while (n < nr_cells)
-	while ((bio = bio_list_pop(&bios)))
-	while ((ds->sweeper != ds->current_entry) &&
-	while ((bio = bio_list_pop(&bios))) {
-	while ((bio = bio_list_pop(&bios)))
-	while ((bio = bio_list_pop(&bios))) {
-		while ((bio = bio_list_pop(&bios)))
-	while ((bio = bio_list_pop(&bios)))
-	while (argc && !r) {
-	while (begin < end) {
-		while (smm->nr_uncommitted && !r) {
-	while (hi - lo > 1) {
-	while (unprocessed_frames(s)) {
-	while (1) {
-	while (!list_empty(flush_list)) {
-	while (bio->bi_idx < bio->bi_vcnt &&
-		while (!is_free) {
-		while (find_rdev_nr(mddev, choice))
-	while ( (s=strchr(b, '/')) != NULL)
-	while (*cmd && *str && *cmd == *str) {
-	while (isdigit(*cp) || (*cp == '.' && decimals < 0)) {
-	while (decimals < scale) {
-	while (*buf) {
-	while (len && val[len-1] == '\n')
-	while (!list_empty(&pending_raid_disks)) {
-	while (!kthread_should_stop()) {
-		while ( max_sectors/2 > (1ULL<<(scale+32)))
-	while (j < max_sectors) {
-		while (j >= mddev->resync_max && !kthread_should_stop()) {
-	while (hi - lo > 1) {
-		while (lo >= 0 &&
-	while (hi - lo > 1) {
-	while (sectors) {
-	while (hi - lo > 1) {
-		while (lo >= 0 &&
-	while (len < PAGE_SIZE && i < bb->count) {
-	while (!list_empty(&all_detected_devices) && i_scanned < INT_MAX) {
-	while (bi) {
-		while ((rw & WRITE) && rdev &&
-			while (rbi && rbi->bi_sector <
-			while (rbi && rbi->bi_sector <
-			while (wbi && wbi->bi_sector <
-		while (!list_empty(&newstripes)) {
-	while(!list_empty(&newstripes)) {
-	while (*bip && (*bip)->bi_sector < bi->bi_sector) {
-		while (bi && bi->bi_sector <
-		while (bi && bi->bi_sector <
-			while (bi && bi->bi_sector <
-				while (wbi && wbi->bi_sector <
-		while (!list_empty(&conf->delayed_list)) {
-	while (!list_empty(&head)) {
-	while (first_sector <= last_sector) {
-	while (!list_empty(&stripes)) {
-	while (1) {
-		while ((bio = remove_bio_from_retry(conf))) {
-	while (size < conf->max_nr_stripes) {
-	while (size > conf->max_nr_stripes) {
-	while (chunksect && (mddev->array_sectors & (chunksect-1)))
-	while (pl) {
-	while ((job = pop(jobs, kc))) {
-	while (__chunk_is_tracked(s, chunk))
-	while (origin_write_extent(s, dest.sector, io_size)) {
-	while (atomic_read(&s->pending_exceptions_count))
-	while (bio) {
-	while (bio) {
-	while (bio) {
-		while (!list_empty(&s->out_of_order_list)) {
-	while(ctx->idx_in < ctx->bio_in->bi_vcnt &&
-	while (remaining) {
-	while (as.argc) {
-	while (1) {
-	while (request_module("dm-log-%s", type_name_dup) ||
-	while (i--)
-	while (i--)
-	while ((ti = dm_table_get_target(ci->map, target_nr++)))
-		while (ci.sector_count && !error)
-	while (!blk_queue_stopped(q)) {
-	while (i < dm_table_get_num_targets(table)) {
-		while (atomic_read(&md->holders))
-	while (1) {
-	while (!test_bit(DMF_BLOCK_IO_FOR_SUSPEND, &md->flags)) {
-	while ((rdev = next_active_rdev(rdev, mddev)) != NULL) {
-		while (bh && bh->b_blocknr) {
-	while (bh) {
-	while (bh) {
-	while (pages--)
-	while (sectors) {
-	while (sectors) {
-	while (*blocks < (PAGE_SIZE>>9)) {
-	while (sector < bitmap->mddev->resync_max_sectors) {
-	while (s < sector && s < bitmap->mddev->resync_max_sectors) {
-	while (sector < mddev->resync_max_sectors) {
-	while (bio) {
-	while (hi > lo) {
-	while (!down_trylock(&rh->recovery_count)) {
 	while (j--)
-	while ( ++j < nalloc )
-		while (sector >= conf->stride) {
-		while (bio) { /* submit pending writes */
-		while (n--) {
-	while (atomic_dec_and_test(&r10_bio->remaining)) {
-	while (sectors) {
-	while(sectors) {
-		while (sl != r10_bio->read_slot) {
-		while (sl != r10_bio->read_slot) {
-	while (sect_to_write) {
-			while (r10_bio) {
-	while (biolist) {
-	while (n > 1) {
-	while (atomic_read(&t->holders))
-	while (1) {
-		while (*end) {
-	while (i < dm_table_get_num_targets(table)) {
-	while (i < dm_table_get_num_targets(table)) {
-	while (i < dm_table_get_num_targets(t)) {
-	while (i < dm_table_get_num_targets(t)) {
-	while (i < dm_table_get_num_targets(t)) {
-	while (i--) {
-	while (i < dm_table_get_num_targets(t)) {
-	while (argc) {
-		} else while (remaining) {
-	while (1) {
-	while ((bio = bio_list_pop(bio_list)))
-	while ((reg = dm_rh_recovery_start(ms->rh))) {
-	while ((bio = bio_list_pop(reads))) {
-	while ((bio = bio_list_pop(writes))) {
-		while ((bio = bio_list_pop(&sync)))
-	while ((bio = bio_list_pop(&recover)))
-	while ((bio = bio_list_pop(&nosync))) {
-	while ((bio = bio_list_pop(failures))) {
-	while (m--)
-	while ((bio = bio_list_pop(&holds)))
-		while (ids->class_id != I2O_CLASS_END) {
-	while (table_size > 0) {
-	while (sg_count-- > 0) {
-	while (IS_ERR(msg = i2o_msg_get(c))) {
-	while (*status <= I2O_CMD_IN_PROGRESS) {
-	while (!*status) {
-		while (IS_ERR(msg = i2o_msg_get_wait(c, I2O_TIMEOUT_RESET))) {
-	while (status_block[87] != 0xFF) {
-	while (i2o_pe->name) {
-	while (pe) {
-	while (pe) {
-	while ((req = blk_peek_request(q)) != NULL) {
-	while (readl(c->irq_status) & I2O_IRQ_OUTBOUND_POST) {
-		while (!mptsas_sas_expander_pg0(ioc, &buffer,
-	while (!mptsas_sas_expander_pg0(ioc, &buffer,
-	while (!(mptsas_sas_device_pg0(ioc, &sas_device,
-	while (chain_idx != MPT_HOST_NO_CHAIN) {
-	while ((ready = fc_remote_port_chkready(rport) >> 16) == DID_IMM_RETRY
-	while (bytes_allocd < bytes) {
-	while (! (nib & 0x4)) { /* eob */
-	while (atomic_read(&priv->buckets_out) && time_before(jiffies, timeout))
-	while (count > 0) {
-	while (buckets) {
-		while(host_page_buffer_sz > 0) {
-	while ((ioc_state = mpt_GetIocState(ioc, 1)) != MPI_IOC_STATE_READY) {
-		while ( sz )
-	while (state != MPI_IOC_STATE_OPERATIONAL && --cntdn) {
-	while (fwSize--) {
-	while (nextImage) {
-		while (fwSize--) {
-		while ((diag0val & MPI_DIAG_DRWE) == 0) {
-	while ((diag0val & MPI_DIAG_DRWE) == 0) {
-	while ((state = mpt_GetIocState(ioc, 1)) != MPI_IOC_STATE_READY) {
-	while (numSGE - num_sge > 0) {
-		while (--cntdn) {
-		while (--cntdn) {
-		while (--cntdn) {
-		while (--cntdn) {
-	while ((__raw_readb(GDROM_ALTSTATUS_REG) & 0x80) &&
-	while (!gdrom_is_busy() && time_before(jiffies, timeout))
-	while (!gdrom_data_request() && time_before(jiffies, timeout))
-		while (gdrom_is_busy() && time_before(jiffies, timeout))
-		while (gdrom_is_busy() && time_before(jiffies, timeout))
-		while (__raw_readb(GDROM_DMA_STATUS_REG) &&
-	while ((req = blk_fetch_request(rq)) != NULL) {
-	while ((rwreq == 0) && ((req = blk_fetch_request(q)) != NULL)) {
-	while (nframes > 0) {
-	while (nframes) {
-	while (size) {
-	while (size) {
-	while ((level > 0) && parent && (!err)) {
-	while (us) {
-	while (i < count) {
-			while (info->parameters[info->param_count]) {
-	while (next) {
-		while (last_obj_desc->common.next_object) {
-	while (obj_desc) {
-	while (obj_desc) {
-	while (obj_desc) {
-	while (next_interface) {
-	while (next_interface) {
-	while (next_interface) {
-	while ((index > ACPI_NAME_SIZE) && (parent_node != acpi_gbl_root_node)) {
-	while (next_node && (next_node != acpi_gbl_root_node)) {
 				    "Invalid Namespace Node (%p) while traversing namespace",
-	while (byte_count) {
-	while (acpi_ps_is_prefix_char(*end)) {
-		while (aml[length]) {
-			while (parser_state->aml < parser_state->pkg_end) {
-		while (next_gpe_block->next) {
-	while (gpe_xrupt_info) {
-		while (gpe_block) {
-	while (gpe_xrupt_info) {
-		while (gpe_block) {
-			while (prev) {
-	while (walk_state) {
-		while ((length < original_object->buffer.length) &&
-		while (length--) {
-	while ((*string) && (ACPI_IS_SPACE(*string) || *string == '\t')) {
-	while (*string) {
-	while (state) {
-			while (state->pkg.index >=
-				while (state_list) {
-		while (handler_obj) {
-	while (obj_desc) {
-		while (next_handler_obj) {
-		while (handler_obj) {
-	while (next_node) {
-	while (level > 0) {
-	while (arg) {
-	while (arg) {
-	while (1) {
-	while (info) {
-	while (next) {
-		while (acpi_ns_valid_root_prefix(*next_external_char)) {
-		while (*next_external_char == '^') {
-	while (next) {
-		while (parent_node) {
-	while (this_name->repair_function) {
-	while (current_value) {
-	while (next_node != node) {
-		while (child_node->peer) {
-	while (next_node) {
-	while (level > 0) {
-	while (level > 0) {
-	while (node) {
-	while (parent_node) {
-	while (GET_CURRENT_ARG_TYPE(walk_state->arg_types) &&
-		while (GET_CURRENT_ARG_TYPE(walk_state->arg_types)
-	while (next) {
-		while (!(*op) || ((*op)->common.aml_opcode != AML_WHILE_OP)) {
 	/* Iterative parsing loop, while there is more AML to process: */
-	while ((parser_state->aml < parser_state->aml_end) || (op)) {
-	while (gpe_xrupt_info) {
-		while (gpe_block) {
-	while (gpe_xrupt_block) {
-		while (gpe_block) {
-	while (next_gpe_xrupt) {
-		while (next_gpe_xrupt->next) {
-	while (this_name->info.name[0]) {
-	while (arg) {
-	while (count) {
-	while (next_node) {
-	while (level > 0 && child_node) {
-		while ((length < operand[0]->buffer.length) &&
-	while (op) {
 		/* Pop and delete control states until we find a while */
-		while (walk_state->control_state &&
-	while (aml < end_aml) {
-	while (obj_desc->common.type == ACPI_TYPE_LOCAL_REFERENCE) {
-	while (arg) {
-	while (num_segments) {
-	while (obj_desc) {
-		while (extra_op && !extra_op->common.node) {
-	while (walk_state->control_state) {
-	while (walk_state->scope_info) {
-	while (walk_state->results) {
-	while ((parent->common.aml_opcode == AML_PACKAGE_OP) ||
-		while (arg) {
-	while ((index < ACPI_METHOD_NUM_ARGS) &&
-	while (count) {
-	while (num_operands) {
-	while (gpe_block) {
-		while (ACPI_SUCCESS(status) && notify_object) {
-	while (length && *string) {
-	while (buffer < end) {
-	while (handler_obj) {
-			while (region_obj) {
-	while (aml < end_aml) {
-	while (resource < resource_end) {
-		while (notifier) {
-	while (walk_state->scope_info) {
-	while (arg && argn) {
-		while (prev_arg->common.next) {
-	while (arg) {
-	while (parent) {
-		while (arg && (arg != origin) && (arg != op)) {
-		while (prefix_count--) {
-			while (num_segments &&
-	while (count) {
-	while (count) {
-		while (handler_desc) {
-				while (next_desc) {
-	while (object) {
-	while (state_list) {
-	while (resource) {
-	while (aml_buffer < end_aml) {
-	while (parser_state->scope) {
-		while (pci_root_node != acpi_gbl_root_node) {
-	while (pci_device_node && (pci_device_node->type != ACPI_TYPE_DEVICE)) {
-	while (node) {
-			while (handler_obj) {
-			while (!acpi_ns_opens_scope(prefix_node->type) &&
-			while (*path == (u8) AML_PARENT_PREFIX) {
-	while (num_segments && current_node) {
-	while (GET_CURRENT_ARG_TYPE(arg_types)) {
-			while (handler_obj->handler != handler) {
-	while (((unsigned long)entry) + sizeof(struct acpi_subtable_header) <
-	while (*pptr)
-	while (*pptr) {
-	while (!acpi_is_root_bridge(phandle)) {
-	while (*mask) {
-	while (entry + sizeof(struct acpi_subtable_header) < madt_end) {
-	while (entry && (entry->length > 0)) {
-	while (bridge) {
-	while (size > 0) {
-	while (log--)
-	while (!kthread_should_stop()) {
-		while (!need_resched()) {
-		while (ps_tsk_num < num) {
-		while (ps_tsk_num > num)
-	while (len > 0) {
-	while (llnode) {
-	while (llnode) {
@@ -213,7 +213,6 @@ static int erst_exec_stall_while_true(st
-	while (&res1->list != res_list1) {
-	while (data_len > sizeof(*gdata)) {
-	while (data_len > sizeof(*gdata)) {
-	while (acpi_blacklist[i].oem_id[0] != '\0') {
-	while (count--) {
-	while (repeat--) {
-		while (lut_size--) {
-	while (*str)
-	while (retries > 0) {
-	while (retries > 0) {
-	while (i--) {
-	while (--i >= 0)
-	while (map->key) {
-	while (map->key) {
-	while (togo >= 4) {
-	while (req) {
-	while (togo >= 4) {
-	while (togo != 0) {
-	while (i--)
-	while ((op = bbc_i2c_getdev(bp, devidx++)) != NULL) {
-	while (--limit > 0) {
-	while (--limit > 0) {
-	while (len > 0) {
-	while (dp) {
-	while (limit-- > 0) {
-	while (len > 0) {
-	while (len > 0) {
-	while ((n < 2) && (bufsize < OPROMMAXPARAM)) {
-	while (dp) {
-	while (incnt > 0) {
-	while (outcnt > 0) {
-	while(size--)
-	while(redir[page] != 0xFF) {
-	while(loops>0) {
-	while(loops>0) {
-	while(loops>0) {
-        while(loops>0) {
-                while(1) {
-	while (bus->parent) {
-	while (bus->parent) {
-	while (slot && (slot->device != device))
-	while (out_of_order) {
-		while (current_res->next && current_res->next->next) {
-	while (out_of_order) {
-		while (current_res->next && current_res->next->next) {
-		while (prevnode->next != node)
-	while (node->next) {
-			while (prevnode->next != node)
-			while (temp && temp->next != max) {
-			while (prevnode->next != node)
-	while (out_of_order) {
-		while (node1->next && node1->next->next) {
-	while (node1 && node1->next) {
-		while (next->next != NULL)
-	while ((next->next != old_slot) && (next->next != NULL))
-		while (!slot_remove(next))
-	while ((next->next != bridge) && (next->next != NULL))
-	while (func->next != NULL) {
-		while (temp_func) {
-		while (func) {
-	while (1) {
-	while (change) {
-	while (func && !rc) {
-			while (new_slot) {
-		while ((function < max_functions) && (!stop_it)) {
-	while (number_of_slots) {
-	while ((p_temp < p_max) && !bail) {
-	while (old_slot) {
-	while (number_of_slots) {
-		while (slot_entry && (readw(slot_entry + SMBIOS_SLOT_NUMBER) !=
-	while (num_of_slots) {
-	while (ctrl) {
-		while (res) {
-		while (res) {
-		while (res) {
-		while (res) {
-		while (next != NULL) {
-			while (res) {
-			while (res) {
-			while (res) {
-			while (res) {
-	while (ctrl) {
-		while (resNode) {
-		while (resNode) {
-		while (resNode) {
-		while (resNode) {
-		while ((bus != ctrl->bus) ||
-		while (nummem--) {
-		while (numpmem--) {
-		while (numio--) {
-		while (numbus--) {
-	while ((dn = of_find_node_by_name(dn, "pci")))
-	while (1) {
-	while (1) {
-	while ((dn = of_get_next_child(parent, dn))) {
-	while ((np = of_find_node_by_name(np, "pci"))) {
-	while (timeout > 0) {
-	while (timeout > 0) {
-	while (slot) {
-	while (ind < size && (des->generic.type != 0x82 ||
-			while (new_slot &&
-			while ((function < max_functions) && (!stop_it)) {
-	while (function < max_functions) {
-		while ((function < max_functions) && (!stop_it)) {
-	while (func != NULL) {
-			while (next != NULL) {
-	while ((func != NULL) && func->is_a_board) {
-	while (func != NULL) {
-			while (next != NULL) {
-	while (func != NULL) {
-			while (next != NULL) {
-	while (unused_IRQ) {
-	while (unused_IRQ) {
-	while (i && readb(one_slot + SECONDARY_BUS)) {
-			while (func && (func->function != (dev_func & 0x07))) {
-	while (node) {
-	while (node) {
-	while (node) {
-	while (node) {
-	while (res) {
-	while (res) {
-	while (res) {
-	while (res) {
-	while (res) {
-	while (res) {
-	while (res) {
-	while (res) {
-	while ((bss_hotplug_slot = sn_hp_destroy()))
-	while ((pci_bus = pci_find_next_bus(pci_bus))) {
-	while ((bss_hotplug_slot = sn_hp_destroy()))
-	while (i) {
-	while (i) {
-	while (i) {
-	while (i) {
-		while (!done) {
-	while (!kthread_should_stop()) {
-	while (!done) {
-	while (range_cur) {
-		while (res) {
-			while (res) {
-	while (res) {
-			while (range) {
-	while (range_cur) {
-		while (res_cur) {
-			while (res_cur) {
-	while (res_cur) {
-			while (res_cur) {
-					while (mem_cur) {
-	while (range) {
-	while (res_cur) {
-						while ((len_tmp = res_cur->start - 1 - tmp_start) >= res->len) {
-						while ((len_tmp = range->end - tmp_start) >= res->len) {
-							while ((len_tmp = res_cur->start - 1 - tmp_start) >= res->len) {
-							while ((len_tmp = res_cur->start - 1 - tmp_start) >= res->len) {
-		while (range) {
-						while ((len_tmp = range->end - tmp_start) >= res->len) {
-			while (range) {
-							while ((len_tmp = range->end - tmp_start) >= res->len) {
-		while (res_cur) {
-		while (res_cur) {
-		while (res_cur) {
-		while (res_cur) {
-	while (res_cur) {
-			while (res_cur) {
-			while (res_cur) {
-			while (res_cur) {
-			while (res_cur) {
-			while (res_cur) {
-			while (res) {
-			while (res) {
-			while (res) {
-			while (res) {
-	while (range_cur) {
-			while (func_cur) {
-	while (i <= slot_cur->bus_on->slot_max) {
-	while (handle) {
-	while (handle) {
-			while (temp_end < end_address) {
-		while (cur_func) {
-	while (res && index--) {
-	while (res && index--) {
-	while (res && index--) {
-	while (res && index--) {
-	while (slot) {
-		while (res && index--) {
-		while (res && index--) {
-		while (res && index--) {
-		while (res && index--) {
-	while ((d = pci_get_device(PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371SB_0, d))) {
-	while (pos && ttl--) {
-	while (pos && ttl--) {
-	while (pos && ttl--) {
-	while (pos && ttl--) {
-	while (f < end) {
-	while ((ret = __pci_assign_resource(bus, dev, resno, size, min_align))) {
-	while (test_bit(_XEN_PCIF_active,
-	while (!list_empty(&bus->devices)) {
-	while (link) {
-	while (link) {
-	while (1) {
-	while ((bus_ops = pci_bus_ops_pop())) {
-	while (kfifo_get(&aer_recover_ring, &entry)) {
-	while (get_e_source(rpc, &e_src))
-	while (1) {
-	while ((bus = pci_find_next_bus(bus)) != NULL)  {
-	while (ids->vendor || ids->subvendor || ids->class_mask) {
-	while ((dmi = dmi_find_device(DMI_DEV_TYPE_DEV_ONBOARD,
-	while (parent->parent && parent->subordinate < max) {
-				while (parent->parent) {
-	while (bus->parent) {
-	while (l == 0xffff0001) {
-	while (mrrs != pcie_get_readrq(dev) && mrrs >= 128) {
-		while (ids->vendor || ids->subvendor || ids->class_mask) {
-		while (ids->vendor || ids->subvendor || ids->class_mask) {
-	while ((id = strsep(&p, ","))) {
-	while (cnt >= 4) {
-	while (cnt >= 4) {
-	while ((*ttl)--) {
-	while (ttl-- > 0) {
-	while (ttl-- > 0) {
-	while (pos) {
-	while (cap->size) {
-			while (target_state
-	while (bus->parent) {
-	while (*val > 1023) {
-	while (!pci_is_root_bus(dev->bus)) {
-	while (!pci_is_root_bus(dev->bus)) {
-	while(--i >= 0)
-	while (bus) {
-	while (*p) {
-	while (str) {
-		while ((b = pci_find_next_bus(b)) != NULL)
-	while (size > 3) {
-	while (size > 3) {
-	while (pos < end) {
-	while (pos < end) {
-	while ((u64)len > s) {
-	while (len && seg < iov_count) {
-	while (len && seg < iovcount) {
-	while (datalen > 0 && headcount < quota) {
-	while ((sock_len = peek_head_len(sock->sk))) {
-	while (clocks->xfer_speed) {
-	while (list[i] != NULL) {
-		while (sg_len) {
-	while (in_index != pp->resp_idx) {
-	while (status & 0x03) {
-		while (sg_len) {
-		while (--timeout && (readl(&dma_regs->status) & RUN))
-	while (--timeout && (readl(&dma_regs->status) & RUN))
-	while (priv->timings[i].mode > 0) {
-		while (sg_len) {
-	while (clocks->xfer_mode) {
-	while (list[i] != NULL) {
-	while ((dev = pci_get_device(PCI_VENDOR_ID_CYRIX, PCI_ANY_ID, dev)) != NULL) {
-	while (lap->device) {
-	while ((pdev = pci_get_device(PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82454NX, pdev)) != NULL) {
-	while (--i >= 0)
-	while (--i >= 0) {
-	while (time_before(jiffies, timeout)) {
-	while(n++ < 10) {
-	while (sglen) {
-		while (xfer_cnt) {
-	while(cb->device) {
-	while (status != 0xff && (status & ATA_BUSY) &&
-	while (status != 0xff && (status & ATA_BUSY) &&
-		while (nsect--)
-		while (sg_len) {
-		while (sg_len) {
-	while (clocks->xfer_speed) {
-	while (1) {
-	while (--ata_dev >= link->device) {
-	while (ap->pflags & (ATA_PFLAG_EH_PENDING | ATA_PFLAG_EH_IN_PROGRESS)) {
-	while (ata_eh_reset_timeouts[max_tries] != ULONG_MAX)
-		while (delta)
-	while (len > 0) {
-	while (p > s && p[-1] == ' ')
-	while (xfer_mode > t->mode)
-	while (1) {
-	while (1) {
-			while (*++pattern && *pattern != ']' && *text != *pattern) {
-		while (*text) {
-	while (ad->model_num) {
-	while (done_mask) {
-	while (--i >= 0) {
-	while (--i >= 0) {
-	while (*p != '\0' && *p != ',')
-	while ((tmp & mask) == val && time_before(jiffies, deadline)) {
-		while (mode > 0 && pio_fsclk[mode] > fsclk)
-		while (mode > 0 && udma_fsclk[mode] > fsclk)
-		while (mode > 0 && mdma_fsclk[mode] > fsclk)
-	while (dev1) {
-	while (bfin_port_info[board_idx].udma_mask > 0 &&
-		while (addr < length) {
-		while (cur_len) {
-	while (bcom_buffer_done(priv->dmatsk))
-		while (sg_len) {
-	while (tag_mask) {
-		while (!(tag_mask & 0x00000001)) {
-		while (words--) {
-		while (words--) {
-		while (words--) {
-	while (lap->device) {
-	while (!(status & NV_ADMA_STAT_IDLE) && count < 20) {
-	while (!(status & NV_ADMA_STAT_LEGACY) && count < 20) {
-	while (((status & NV_ADMA_STAT_LEGACY) ||
-	while (idx < 12)
-			while ((pos = ffs(check_commands))) {
-		while (sg_len) {
-	while ((fbs & PORT_FBS_DEC) && retries--) {
-	while (status) {
-	while (ids->id) {
-		while (id->name[0] || id->vendor[0]) {
-	while (--i >= 0)
-		while (new_min > 192 && new_div < 3) {
-	while (begin != end) {
-	while (begin != end) {
-	while (!kthread_should_stop()) {
-	while (answer < 7 && (val >>= 1))
-	while (inb_p(data->addr + ABIT_UGURU_DATA) != state) {
-	while (inb_p(data->addr + ABIT_UGURU_CMD) != 0xAC) {
-	while (inb_p(data->addr + ABIT_UGURU_DATA) != ABIT_UGURU_STATUS_INPUT) {
-	while (inb_p(data->addr + ABIT_UGURU_CMD) != 0xAC) {
-	while (len--) {
-	while (--i >= 0)
@@ -621,8 +621,6 @@ static int abituguru3_wait_while_busy(st
-	while ((x = inb_p(data->addr + ABIT_UGURU3_DATA)) &
-	while (!((x = inb_p(data->addr + ABIT_UGURU3_DATA)) &
-	while ((x = inb(data->addr + ABIT_UGURU3_CMD)) != 0xAC) {
-	while (sublen > 0 && board_name[sublen - 1] == ' ')
-	while (!aem_find_aem2(probe, &fi_resp, i)) {
-	while (ro->label) {
-	while (rw->label) {
-	while (fan_min > 255
-		while (!(data->fan_min[nr] & 0x80) /* min "nails" divider */
-	while (R > 0) {
-	while (R < 0) {
-	while (val >= MAX_MANTISSA && exponent < 15) {
-	while (val < MIN_MANTISSA && exponent > -15) {
-	while (R > 0) {
-	while (R < 0) {
 		 * Setting PAGE & PHASE fails once in a while for no obvious
-	while ((i < 2) && mux_cnv) {
-	while (vrm_models[i].vendor!=X86_VENDOR_UNKNOWN) {
-		while (reg > 192 && new_div < 7) {
-	while (end > start) {
-	while (ro->label) {
-	while (rw->label) {
-	while (1) {
-	while (eromptr < eromend) {
-	while (eromptr < eromend) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-		while (count) {
-	while (((mul == 0) || (div == 0)) && (tried <= 3)) {
-	while ((tfsb != fsb) && (tfsb <= max_fsb) && (tfsb >= min_fsb)) {
-	while ((drv_attr) && (*drv_attr)) {
-	while (msr_tmp != msr_decode_fsb[i].bitmap) {
-	while (msr_lo != msr_decode_mult[j].bitmap) {
 	/* Wait while CPU is busy */
-	while (lo & ((1 << 16) | (1 << 17))) {
-	while (data->currvid > reqvid) {
-	while ((rvosteps > 0) &&
-	while (vcofiddiff > 2) {
-	while (count > 0 && freq->frequency != CPUFREQ_TABLE_END) {
-	while (freq->frequency != CPUFREQ_TABLE_END) {
-		while (bm_status && bm_timeout) {
-	while (longhaul_table[j].frequency != CPUFREQ_TABLE_END) {
-		while (i != table_index) {
-	while (tmp_freq < policy->min) {
-	while (tmp_freq > policy->max) {
